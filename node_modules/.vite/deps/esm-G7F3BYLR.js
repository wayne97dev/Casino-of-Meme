import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  LruMap,
  checksumAddress,
  defineFormatter,
  hexToBigInt,
  hexToNumber,
  isHex,
  keccak256,
  numberToHex,
  toHex
} from "./chunk-DATTDFUB.js";
import {
  require_dijkstra
} from "./chunk-RR7BPFY7.js";
import {
  require_events
} from "./chunk-RHYFEGUQ.js";
import {
  PublicKey,
  Transaction,
  init_index_browser_esm
} from "./chunk-74SG3NI2.js";
import "./chunk-BUSXMEM7.js";
import {
  init_sha3,
  keccak_256
} from "./chunk-JUPNX6L4.js";
import {
  HashMD,
  init_md,
  init_secp256k1,
  init_sha256,
  init_utils as init_utils2
} from "./chunk-ZLZXCKCC.js";
import {
  init_utils,
  rotl,
  wrapConstructor
} from "./chunk-ESODKGNT.js";
import {
  esm_default
} from "./chunk-DSVFQVKJ.js";
import {
  dist_exports,
  init_dist
} from "./chunk-KK4BMKHV.js";
import {
  __commonJS,
  __esm,
  __export,
  __reExport,
  __toCommonJS,
  __toESM,
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-DHEA4WJK.js";

// node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow3(name2) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name2] !== "undefined") {
        res = window[name2];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow3;
    function getFromWindowOrThrow3(name2) {
      const res = getFromWindow3(name2);
      if (!res) {
        throw new Error(`${name2} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow3;
    function getDocumentOrThrow3() {
      return getFromWindowOrThrow3("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow3;
    function getDocument3() {
      return getFromWindow3("document");
    }
    exports.getDocument = getDocument3;
    function getNavigatorOrThrow3() {
      return getFromWindowOrThrow3("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow3;
    function getNavigator3() {
      return getFromWindow3("navigator");
    }
    exports.getNavigator = getNavigator3;
    function getLocationOrThrow3() {
      return getFromWindowOrThrow3("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow3;
    function getLocation3() {
      return getFromWindow3("location");
    }
    exports.getLocation = getLocation3;
    function getCryptoOrThrow3() {
      return getFromWindowOrThrow3("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow3;
    function getCrypto3() {
      return getFromWindow3("crypto");
    }
    exports.getCrypto = getCrypto3;
    function getLocalStorageOrThrow3() {
      return getFromWindowOrThrow3("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow3;
    function getLocalStorage3() {
      return getFromWindow3("localStorage");
    }
    exports.getLocalStorage = getLocalStorage3;
  }
});

// node_modules/@walletconnect/window-metadata/dist/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/@walletconnect/window-metadata/dist/cjs/index.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWindowMetadata = void 0;
    var window_getters_1 = require_cjs();
    function getWindowMetadata2() {
      let doc;
      let loc;
      try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
      } catch (e4) {
        return null;
      }
      function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons2 = [];
        for (let i6 = 0; i6 < links.length; i6++) {
          const link = links[i6];
          const rel = link.getAttribute("rel");
          if (rel) {
            if (rel.toLowerCase().indexOf("icon") > -1) {
              const href = link.getAttribute("href");
              if (href) {
                if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
                  let absoluteHref = loc.protocol + "//" + loc.host;
                  if (href.indexOf("/") === 0) {
                    absoluteHref += href;
                  } else {
                    const path = loc.pathname.split("/");
                    path.pop();
                    const finalPath = path.join("/");
                    absoluteHref += finalPath + "/" + href;
                  }
                  icons2.push(absoluteHref);
                } else if (href.indexOf("//") === 0) {
                  const absoluteUrl = loc.protocol + href;
                  icons2.push(absoluteUrl);
                } else {
                  icons2.push(href);
                }
              }
            }
          }
        }
        return icons2;
      }
      function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i6 = 0; i6 < metaTags.length; i6++) {
          const tag = metaTags[i6];
          const attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => {
            if (attr) {
              return args.includes(attr);
            }
            return false;
          });
          if (attributes.length && attributes) {
            const content = tag.getAttribute("content");
            if (content) {
              return content;
            }
          }
        }
        return "";
      }
      function getName() {
        let name3 = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name3) {
          name3 = doc.title;
        }
        return name3;
      }
      function getDescription() {
        const description2 = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description2;
      }
      const name2 = getName();
      const description = getDescription();
      const url = loc.origin;
      const icons = getIcons();
      const meta = {
        description,
        url,
        icons,
        name: name2
      };
      return meta;
    }
    exports.getWindowMetadata = getWindowMetadata2;
  }
});

// node_modules/detect-browser/es/index.js
function detect(userAgent) {
  if (!!userAgent) {
    return parseUserAgent(userAgent);
  }
  if (typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative") {
    return new ReactNativeInfo();
  }
  if (typeof navigator !== "undefined") {
    return parseUserAgent(navigator.userAgent);
  }
  return getNodeVersion();
}
function matchUserAgent(ua2) {
  return ua2 !== "" && userAgentRules.reduce(function(matched, _a) {
    var browser = _a[0], regex = _a[1];
    if (matched) {
      return matched;
    }
    var uaMatch = regex.exec(ua2);
    return !!uaMatch && [browser, uaMatch];
  }, false);
}
function parseUserAgent(ua2) {
  var matchedRule = matchUserAgent(ua2);
  if (!matchedRule) {
    return null;
  }
  var name2 = matchedRule[0], match = matchedRule[1];
  if (name2 === "searchbot") {
    return new BotInfo();
  }
  var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);
  if (versionParts) {
    if (versionParts.length < REQUIRED_VERSION_PARTS) {
      versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));
    }
  } else {
    versionParts = [];
  }
  var version3 = versionParts.join(".");
  var os2 = detectOS(ua2);
  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua2);
  if (searchBotMatch && searchBotMatch[1]) {
    return new SearchBotDeviceInfo(name2, version3, os2, searchBotMatch[1]);
  }
  return new BrowserInfo(name2, version3, os2);
}
function detectOS(ua2) {
  for (var ii2 = 0, count = operatingSystemRules.length; ii2 < count; ii2++) {
    var _a = operatingSystemRules[ii2], os2 = _a[0], regex = _a[1];
    var match = regex.exec(ua2);
    if (match) {
      return os2;
    }
  }
  return null;
}
function getNodeVersion() {
  var isNode3 = typeof process !== "undefined" && process.version;
  return isNode3 ? new NodeInfo(process.version.slice(1)) : null;
}
function createVersionParts(count) {
  var output = [];
  for (var ii2 = 0; ii2 < count; ii2++) {
    output.push("0");
  }
  return output;
}
var import_dist, import_dist2, import_dist3, __spreadArrays, BrowserInfo, NodeInfo, SearchBotDeviceInfo, BotInfo, ReactNativeInfo, SEARCHBOX_UA_REGEX, SEARCHBOT_OS_REGEX, REQUIRED_VERSION_PARTS, userAgentRules, operatingSystemRules;
var init_es = __esm({
  "node_modules/detect-browser/es/index.js"() {
    import_dist = __toESM(require_dist());
    import_dist2 = __toESM(require_dist2());
    import_dist3 = __toESM(require_dist3());
    __spreadArrays = function() {
      for (var s5 = 0, i6 = 0, il = arguments.length; i6 < il; i6++) s5 += arguments[i6].length;
      for (var r5 = Array(s5), k8 = 0, i6 = 0; i6 < il; i6++)
        for (var a5 = arguments[i6], j5 = 0, jl = a5.length; j5 < jl; j5++, k8++)
          r5[k8] = a5[j5];
      return r5;
    };
    BrowserInfo = /** @class */
    /* @__PURE__ */ function() {
      function BrowserInfo3(name2, version3, os2) {
        this.name = name2;
        this.version = version3;
        this.os = os2;
        this.type = "browser";
      }
      return BrowserInfo3;
    }();
    NodeInfo = /** @class */
    /* @__PURE__ */ function() {
      function NodeInfo3(version3) {
        this.version = version3;
        this.type = "node";
        this.name = "node";
        this.os = process.platform;
      }
      return NodeInfo3;
    }();
    SearchBotDeviceInfo = /** @class */
    /* @__PURE__ */ function() {
      function SearchBotDeviceInfo3(name2, version3, os2, bot) {
        this.name = name2;
        this.version = version3;
        this.os = os2;
        this.bot = bot;
        this.type = "bot-device";
      }
      return SearchBotDeviceInfo3;
    }();
    BotInfo = /** @class */
    /* @__PURE__ */ function() {
      function BotInfo3() {
        this.type = "bot";
        this.bot = true;
        this.name = "bot";
        this.version = null;
        this.os = null;
      }
      return BotInfo3;
    }();
    ReactNativeInfo = /** @class */
    /* @__PURE__ */ function() {
      function ReactNativeInfo3() {
        this.type = "react-native";
        this.name = "react-native";
        this.version = null;
        this.os = null;
      }
      return ReactNativeInfo3;
    }();
    SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
    SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
    REQUIRED_VERSION_PARTS = 3;
    userAgentRules = [
      ["aol", /AOLShield\/([0-9\._]+)/],
      ["edge", /Edge\/([0-9\._]+)/],
      ["edge-ios", /EdgiOS\/([0-9\._]+)/],
      ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
      ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
      ["samsung", /SamsungBrowser\/([0-9\.]+)/],
      ["silk", /\bSilk\/([0-9._-]+)\b/],
      ["miui", /MiuiBrowser\/([0-9\.]+)$/],
      ["beaker", /BeakerBrowser\/([0-9\.]+)/],
      ["edge-chromium", /EdgA?\/([0-9\.]+)/],
      [
        "chromium-webview",
        /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
      ],
      ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
      ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
      ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
      ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
      ["fxios", /FxiOS\/([0-9\.]+)/],
      ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
      ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
      ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
      ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
      ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
      ["ie", /MSIE\s(7\.0)/],
      ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
      ["android", /Android\s([0-9\.]+)/],
      ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
      ["safari", /Version\/([0-9\._]+).*Safari/],
      ["facebook", /FBAV\/([0-9\.]+)/],
      ["instagram", /Instagram\s([0-9\.]+)/],
      ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
      ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
      ["searchbot", SEARCHBOX_UA_REGEX]
    ];
    operatingSystemRules = [
      ["iOS", /iP(hone|od|ad)/],
      ["Android OS", /Android/],
      ["BlackBerry OS", /BlackBerry|BB10/],
      ["Windows Mobile", /IEMobile/],
      ["Amazon OS", /Kindle/],
      ["Windows 3.11", /Win16/],
      ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
      ["Windows 98", /(Windows 98)|(Win98)/],
      ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
      ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
      ["Windows Server 2003", /(Windows NT 5.2)/],
      ["Windows Vista", /(Windows NT 6.0)/],
      ["Windows 7", /(Windows NT 6.1)/],
      ["Windows 8", /(Windows NT 6.2)/],
      ["Windows 8.1", /(Windows NT 6.3)/],
      ["Windows 10", /(Windows NT 10.0)/],
      ["Windows ME", /Windows ME/],
      ["Open BSD", /OpenBSD/],
      ["Sun OS", /SunOS/],
      ["Chrome OS", /CrOS/],
      ["Linux", /(Linux)|(X11)/],
      ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
      ["QNX", /QNX/],
      ["BeOS", /BeOS/],
      ["OS/2", /OS\/2/]
    ];
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/browser.js
function detectEnv(userAgent) {
  return detect(userAgent);
}
function detectOS2() {
  const env = detectEnv();
  return env && env.os ? env.os : void 0;
}
function isAndroid() {
  const os2 = detectOS2();
  return os2 ? os2.toLowerCase().includes("android") : false;
}
function isIOS() {
  const os2 = detectOS2();
  return os2 ? os2.toLowerCase().includes("ios") || os2.toLowerCase().includes("mac") && navigator.maxTouchPoints > 1 : false;
}
function isMobile() {
  const os2 = detectOS2();
  return os2 ? isAndroid() || isIOS() : false;
}
function isNode() {
  const env = detectEnv();
  const result = env && env.name ? env.name.toLowerCase() === "node" : false;
  return result;
}
function isBrowser() {
  const result = !isNode() && !!getNavigator2();
  return result;
}
function getClientMeta() {
  return windowMetadata.getWindowMetadata();
}
var import_dist4, import_dist5, import_dist6, windowMetadata, windowGetters, getFromWindow2, getFromWindowOrThrow2, getDocumentOrThrow2, getDocument2, getNavigatorOrThrow2, getNavigator2, getLocationOrThrow2, getLocation2, getCryptoOrThrow2, getCrypto2, getLocalStorageOrThrow2, getLocalStorage2;
var init_browser = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/browser.js"() {
    import_dist4 = __toESM(require_dist());
    import_dist5 = __toESM(require_dist2());
    import_dist6 = __toESM(require_dist3());
    windowMetadata = __toESM(require_cjs2());
    windowGetters = __toESM(require_cjs());
    init_es();
    getFromWindow2 = windowGetters.getFromWindow;
    getFromWindowOrThrow2 = windowGetters.getFromWindowOrThrow;
    getDocumentOrThrow2 = windowGetters.getDocumentOrThrow;
    getDocument2 = windowGetters.getDocument;
    getNavigatorOrThrow2 = windowGetters.getNavigatorOrThrow;
    getNavigator2 = windowGetters.getNavigator;
    getLocationOrThrow2 = windowGetters.getLocationOrThrow;
    getLocation2 = windowGetters.getLocation;
    getCryptoOrThrow2 = windowGetters.getCryptoOrThrow;
    getCrypto2 = windowGetters.getCrypto;
    getLocalStorageOrThrow2 = windowGetters.getLocalStorageOrThrow;
    getLocalStorage2 = windowGetters.getLocalStorage;
  }
});

// node_modules/@walletconnect/safe-json/dist/esm/index.js
function safeJsonParse(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSON.parse(value);
  } catch (_a) {
    return value;
  }
}
function safeJsonStringify(value) {
  return typeof value === "string" ? value : JSON.stringify(value);
}
var import_dist7, import_dist8, import_dist9;
var init_esm = __esm({
  "node_modules/@walletconnect/safe-json/dist/esm/index.js"() {
    import_dist7 = __toESM(require_dist());
    import_dist8 = __toESM(require_dist2());
    import_dist9 = __toESM(require_dist3());
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/json.js
var import_dist10, import_dist11, import_dist12, safeJsonParse2, safeJsonStringify2;
var init_json = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/json.js"() {
    import_dist10 = __toESM(require_dist());
    import_dist11 = __toESM(require_dist2());
    import_dist12 = __toESM(require_dist3());
    init_esm();
    safeJsonParse2 = safeJsonParse;
    safeJsonStringify2 = safeJsonStringify;
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/local.js
function setLocal(key, data) {
  const raw = safeJsonStringify2(data);
  const local = getLocalStorage2();
  if (local) {
    local.setItem(key, raw);
  }
}
function getLocal(key) {
  let data = null;
  let raw = null;
  const local = getLocalStorage2();
  if (local) {
    raw = local.getItem(key);
  }
  data = raw ? safeJsonParse2(raw) : raw;
  return data;
}
function removeLocal(key) {
  const local = getLocalStorage2();
  if (local) {
    local.removeItem(key);
  }
}
var import_dist13, import_dist14, import_dist15;
var init_local = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/local.js"() {
    import_dist13 = __toESM(require_dist());
    import_dist14 = __toESM(require_dist2());
    import_dist15 = __toESM(require_dist3());
    init_json();
    init_browser();
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/mobile.js
function formatIOSMobile(uri, entry) {
  const encodedUri = encodeURIComponent(uri);
  return entry.universalLink ? `${entry.universalLink}/wc?uri=${encodedUri}` : entry.deepLink ? `${entry.deepLink}${entry.deepLink.endsWith(":") ? "//" : "/"}wc?uri=${encodedUri}` : "";
}
function saveMobileLinkInfo(data) {
  const focusUri = data.href.split("?")[0];
  setLocal(mobileLinkChoiceKey, Object.assign(Object.assign({}, data), { href: focusUri }));
}
function getMobileRegistryEntry(registry, name2) {
  return registry.filter((entry) => entry.name.toLowerCase().includes(name2.toLowerCase()))[0];
}
function getMobileLinkRegistry(registry, whitelist) {
  let links = registry;
  if (whitelist) {
    links = whitelist.map((name2) => getMobileRegistryEntry(registry, name2)).filter(Boolean);
  }
  return links;
}
var import_dist16, import_dist17, import_dist18, mobileLinkChoiceKey;
var init_mobile = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/mobile.js"() {
    import_dist16 = __toESM(require_dist());
    import_dist17 = __toESM(require_dist2());
    import_dist18 = __toESM(require_dist3());
    init_local();
    mobileLinkChoiceKey = "WALLETCONNECT_DEEPLINK_CHOICE";
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/registry.js
function getWalletRegistryUrl() {
  return API_URL + "/api/v2/wallets";
}
function getDappRegistryUrl() {
  return API_URL + "/api/v2/dapps";
}
function formatMobileRegistryEntry(entry, platform = "mobile") {
  var _a;
  return {
    name: entry.name || "",
    shortName: entry.metadata.shortName || "",
    color: entry.metadata.colors.primary || "",
    logo: (_a = entry.image_url.sm) !== null && _a !== void 0 ? _a : "",
    universalLink: entry[platform].universal || "",
    deepLink: entry[platform].native || ""
  };
}
function formatMobileRegistry(registry, platform = "mobile") {
  return Object.values(registry).filter((entry) => !!entry[platform].universal || !!entry[platform].native).map((entry) => formatMobileRegistryEntry(entry, platform));
}
var import_dist19, import_dist20, import_dist21, API_URL;
var init_registry = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/registry.js"() {
    import_dist19 = __toESM(require_dist());
    import_dist20 = __toESM(require_dist2());
    import_dist21 = __toESM(require_dist3());
    API_URL = "https://registry.walletconnect.com";
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/index.js
var esm_exports2 = {};
__export(esm_exports2, {
  detectEnv: () => detectEnv,
  detectOS: () => detectOS2,
  formatIOSMobile: () => formatIOSMobile,
  formatMobileRegistry: () => formatMobileRegistry,
  formatMobileRegistryEntry: () => formatMobileRegistryEntry,
  getClientMeta: () => getClientMeta,
  getCrypto: () => getCrypto2,
  getCryptoOrThrow: () => getCryptoOrThrow2,
  getDappRegistryUrl: () => getDappRegistryUrl,
  getDocument: () => getDocument2,
  getDocumentOrThrow: () => getDocumentOrThrow2,
  getFromWindow: () => getFromWindow2,
  getFromWindowOrThrow: () => getFromWindowOrThrow2,
  getLocal: () => getLocal,
  getLocalStorage: () => getLocalStorage2,
  getLocalStorageOrThrow: () => getLocalStorageOrThrow2,
  getLocation: () => getLocation2,
  getLocationOrThrow: () => getLocationOrThrow2,
  getMobileLinkRegistry: () => getMobileLinkRegistry,
  getMobileRegistryEntry: () => getMobileRegistryEntry,
  getNavigator: () => getNavigator2,
  getNavigatorOrThrow: () => getNavigatorOrThrow2,
  getWalletRegistryUrl: () => getWalletRegistryUrl,
  isAndroid: () => isAndroid,
  isBrowser: () => isBrowser,
  isIOS: () => isIOS,
  isMobile: () => isMobile,
  isNode: () => isNode,
  mobileLinkChoiceKey: () => mobileLinkChoiceKey,
  removeLocal: () => removeLocal,
  safeJsonParse: () => safeJsonParse2,
  safeJsonStringify: () => safeJsonStringify2,
  saveMobileLinkInfo: () => saveMobileLinkInfo,
  setLocal: () => setLocal
});
var import_dist22, import_dist23, import_dist24;
var init_esm2 = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/index.js"() {
    import_dist22 = __toESM(require_dist());
    import_dist23 = __toESM(require_dist2());
    import_dist24 = __toESM(require_dist3());
    init_browser();
    init_json();
    init_local();
    init_mobile();
    init_registry();
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/can-promise.js
var require_can_promise = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/can-promise.js"(exports, module) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    module.exports = function() {
      return typeof Promise === "function" && Promise.prototype && Promise.prototype.then;
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/isarray/index.js
var require_isarray = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/isarray/index.js"(exports, module) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var toString4 = {}.toString;
    module.exports = Array.isArray || function(arr) {
      return toString4.call(arr) == "[object Array]";
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/utils/typedarray-buffer.js
var require_typedarray_buffer = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/utils/typedarray-buffer.js"(exports, module) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var isArray = require_isarray();
    function typedArraySupport() {
      try {
        var arr = new Uint8Array(1);
        arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function() {
          return 42;
        } };
        return arr.foo() === 42;
      } catch (e4) {
        return false;
      }
    }
    Buffer2.TYPED_ARRAY_SUPPORT = typedArraySupport();
    var K_MAX_LENGTH = Buffer2.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
    function Buffer2(arg, offset, length2) {
      if (!Buffer2.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer2)) {
        return new Buffer2(arg, offset, length2);
      }
      if (typeof arg === "number") {
        return allocUnsafe2(this, arg);
      }
      return from8(this, arg, offset, length2);
    }
    if (Buffer2.TYPED_ARRAY_SUPPORT) {
      Buffer2.prototype.__proto__ = Uint8Array.prototype;
      Buffer2.__proto__ = Uint8Array;
      if (typeof Symbol !== "undefined" && Symbol.species && Buffer2[Symbol.species] === Buffer2) {
        Object.defineProperty(Buffer2, Symbol.species, {
          value: null,
          configurable: true,
          enumerable: false,
          writable: false
        });
      }
    }
    function checked(length2) {
      if (length2 >= K_MAX_LENGTH) {
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
      }
      return length2 | 0;
    }
    function isnan(val) {
      return val !== val;
    }
    function createBuffer(that, length2) {
      var buf;
      if (Buffer2.TYPED_ARRAY_SUPPORT) {
        buf = new Uint8Array(length2);
        buf.__proto__ = Buffer2.prototype;
      } else {
        buf = that;
        if (buf === null) {
          buf = new Buffer2(length2);
        }
        buf.length = length2;
      }
      return buf;
    }
    function allocUnsafe2(that, size4) {
      var buf = createBuffer(that, size4 < 0 ? 0 : checked(size4) | 0);
      if (!Buffer2.TYPED_ARRAY_SUPPORT) {
        for (var i6 = 0; i6 < size4; ++i6) {
          buf[i6] = 0;
        }
      }
      return buf;
    }
    function fromString5(that, string2) {
      var length2 = byteLength(string2) | 0;
      var buf = createBuffer(that, length2);
      var actual = buf.write(string2);
      if (actual !== length2) {
        buf = buf.slice(0, actual);
      }
      return buf;
    }
    function fromArrayLike(that, array) {
      var length2 = array.length < 0 ? 0 : checked(array.length) | 0;
      var buf = createBuffer(that, length2);
      for (var i6 = 0; i6 < length2; i6 += 1) {
        buf[i6] = array[i6] & 255;
      }
      return buf;
    }
    function fromArrayBuffer(that, array, byteOffset, length2) {
      if (byteOffset < 0 || array.byteLength < byteOffset) {
        throw new RangeError("'offset' is out of bounds");
      }
      if (array.byteLength < byteOffset + (length2 || 0)) {
        throw new RangeError("'length' is out of bounds");
      }
      var buf;
      if (byteOffset === void 0 && length2 === void 0) {
        buf = new Uint8Array(array);
      } else if (length2 === void 0) {
        buf = new Uint8Array(array, byteOffset);
      } else {
        buf = new Uint8Array(array, byteOffset, length2);
      }
      if (Buffer2.TYPED_ARRAY_SUPPORT) {
        buf.__proto__ = Buffer2.prototype;
      } else {
        buf = fromArrayLike(that, buf);
      }
      return buf;
    }
    function fromObject(that, obj) {
      if (Buffer2.isBuffer(obj)) {
        var len = checked(obj.length) | 0;
        var buf = createBuffer(that, len);
        if (buf.length === 0) {
          return buf;
        }
        obj.copy(buf, 0, 0, len);
        return buf;
      }
      if (obj) {
        if (typeof ArrayBuffer !== "undefined" && obj.buffer instanceof ArrayBuffer || "length" in obj) {
          if (typeof obj.length !== "number" || isnan(obj.length)) {
            return createBuffer(that, 0);
          }
          return fromArrayLike(that, obj);
        }
        if (obj.type === "Buffer" && Array.isArray(obj.data)) {
          return fromArrayLike(that, obj.data);
        }
      }
      throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
    }
    function utf8ToBytes(string2, units) {
      units = units || Infinity;
      var codePoint;
      var length2 = string2.length;
      var leadSurrogate = null;
      var bytes = [];
      for (var i6 = 0; i6 < length2; ++i6) {
        codePoint = string2.charCodeAt(i6);
        if (codePoint > 55295 && codePoint < 57344) {
          if (!leadSurrogate) {
            if (codePoint > 56319) {
              if ((units -= 3) > -1) bytes.push(239, 191, 189);
              continue;
            } else if (i6 + 1 === length2) {
              if ((units -= 3) > -1) bytes.push(239, 191, 189);
              continue;
            }
            leadSurrogate = codePoint;
            continue;
          }
          if (codePoint < 56320) {
            if ((units -= 3) > -1) bytes.push(239, 191, 189);
            leadSurrogate = codePoint;
            continue;
          }
          codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
        } else if (leadSurrogate) {
          if ((units -= 3) > -1) bytes.push(239, 191, 189);
        }
        leadSurrogate = null;
        if (codePoint < 128) {
          if ((units -= 1) < 0) break;
          bytes.push(codePoint);
        } else if (codePoint < 2048) {
          if ((units -= 2) < 0) break;
          bytes.push(
            codePoint >> 6 | 192,
            codePoint & 63 | 128
          );
        } else if (codePoint < 65536) {
          if ((units -= 3) < 0) break;
          bytes.push(
            codePoint >> 12 | 224,
            codePoint >> 6 & 63 | 128,
            codePoint & 63 | 128
          );
        } else if (codePoint < 1114112) {
          if ((units -= 4) < 0) break;
          bytes.push(
            codePoint >> 18 | 240,
            codePoint >> 12 & 63 | 128,
            codePoint >> 6 & 63 | 128,
            codePoint & 63 | 128
          );
        } else {
          throw new Error("Invalid code point");
        }
      }
      return bytes;
    }
    function byteLength(string2) {
      if (Buffer2.isBuffer(string2)) {
        return string2.length;
      }
      if (typeof ArrayBuffer !== "undefined" && typeof ArrayBuffer.isView === "function" && (ArrayBuffer.isView(string2) || string2 instanceof ArrayBuffer)) {
        return string2.byteLength;
      }
      if (typeof string2 !== "string") {
        string2 = "" + string2;
      }
      var len = string2.length;
      if (len === 0) return 0;
      return utf8ToBytes(string2).length;
    }
    function blitBuffer(src2, dst, offset, length2) {
      for (var i6 = 0; i6 < length2; ++i6) {
        if (i6 + offset >= dst.length || i6 >= src2.length) break;
        dst[i6 + offset] = src2[i6];
      }
      return i6;
    }
    function utf8Write(buf, string2, offset, length2) {
      return blitBuffer(utf8ToBytes(string2, buf.length - offset), buf, offset, length2);
    }
    function from8(that, value, offset, length2) {
      if (typeof value === "number") {
        throw new TypeError('"value" argument must not be a number');
      }
      if (typeof ArrayBuffer !== "undefined" && value instanceof ArrayBuffer) {
        return fromArrayBuffer(that, value, offset, length2);
      }
      if (typeof value === "string") {
        return fromString5(that, value, offset);
      }
      return fromObject(that, value);
    }
    Buffer2.prototype.write = function write(string2, offset, length2) {
      if (offset === void 0) {
        length2 = this.length;
        offset = 0;
      } else if (length2 === void 0 && typeof offset === "string") {
        length2 = this.length;
        offset = 0;
      } else if (isFinite(offset)) {
        offset = offset | 0;
        if (isFinite(length2)) {
          length2 = length2 | 0;
        } else {
          length2 = void 0;
        }
      }
      var remaining = this.length - offset;
      if (length2 === void 0 || length2 > remaining) length2 = remaining;
      if (string2.length > 0 && (length2 < 0 || offset < 0) || offset > this.length) {
        throw new RangeError("Attempt to write outside buffer bounds");
      }
      return utf8Write(this, string2, offset, length2);
    };
    Buffer2.prototype.slice = function slice4(start, end) {
      var len = this.length;
      start = ~~start;
      end = end === void 0 ? len : ~~end;
      if (start < 0) {
        start += len;
        if (start < 0) start = 0;
      } else if (start > len) {
        start = len;
      }
      if (end < 0) {
        end += len;
        if (end < 0) end = 0;
      } else if (end > len) {
        end = len;
      }
      if (end < start) end = start;
      var newBuf;
      if (Buffer2.TYPED_ARRAY_SUPPORT) {
        newBuf = this.subarray(start, end);
        newBuf.__proto__ = Buffer2.prototype;
      } else {
        var sliceLen = end - start;
        newBuf = new Buffer2(sliceLen, void 0);
        for (var i6 = 0; i6 < sliceLen; ++i6) {
          newBuf[i6] = this[i6 + start];
        }
      }
      return newBuf;
    };
    Buffer2.prototype.copy = function copy(target, targetStart, start, end) {
      if (!start) start = 0;
      if (!end && end !== 0) end = this.length;
      if (targetStart >= target.length) targetStart = target.length;
      if (!targetStart) targetStart = 0;
      if (end > 0 && end < start) end = start;
      if (end === start) return 0;
      if (target.length === 0 || this.length === 0) return 0;
      if (targetStart < 0) {
        throw new RangeError("targetStart out of bounds");
      }
      if (start < 0 || start >= this.length) throw new RangeError("sourceStart out of bounds");
      if (end < 0) throw new RangeError("sourceEnd out of bounds");
      if (end > this.length) end = this.length;
      if (target.length - targetStart < end - start) {
        end = target.length - targetStart + start;
      }
      var len = end - start;
      var i6;
      if (this === target && start < targetStart && targetStart < end) {
        for (i6 = len - 1; i6 >= 0; --i6) {
          target[i6 + targetStart] = this[i6 + start];
        }
      } else if (len < 1e3 || !Buffer2.TYPED_ARRAY_SUPPORT) {
        for (i6 = 0; i6 < len; ++i6) {
          target[i6 + targetStart] = this[i6 + start];
        }
      } else {
        Uint8Array.prototype.set.call(
          target,
          this.subarray(start, start + len),
          targetStart
        );
      }
      return len;
    };
    Buffer2.prototype.fill = function fill(val, start, end) {
      if (typeof val === "string") {
        if (typeof start === "string") {
          start = 0;
          end = this.length;
        } else if (typeof end === "string") {
          end = this.length;
        }
        if (val.length === 1) {
          var code2 = val.charCodeAt(0);
          if (code2 < 256) {
            val = code2;
          }
        }
      } else if (typeof val === "number") {
        val = val & 255;
      }
      if (start < 0 || this.length < start || this.length < end) {
        throw new RangeError("Out of range index");
      }
      if (end <= start) {
        return this;
      }
      start = start >>> 0;
      end = end === void 0 ? this.length : end >>> 0;
      if (!val) val = 0;
      var i6;
      if (typeof val === "number") {
        for (i6 = start; i6 < end; ++i6) {
          this[i6] = val;
        }
      } else {
        var bytes = Buffer2.isBuffer(val) ? val : new Buffer2(val);
        var len = bytes.length;
        for (i6 = 0; i6 < end - start; ++i6) {
          this[i6 + start] = bytes[i6 % len];
        }
      }
      return this;
    };
    Buffer2.concat = function concat4(list, length2) {
      if (!isArray(list)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }
      if (list.length === 0) {
        return createBuffer(null, 0);
      }
      var i6;
      if (length2 === void 0) {
        length2 = 0;
        for (i6 = 0; i6 < list.length; ++i6) {
          length2 += list[i6].length;
        }
      }
      var buffer = allocUnsafe2(null, length2);
      var pos = 0;
      for (i6 = 0; i6 < list.length; ++i6) {
        var buf = list[i6];
        if (!Buffer2.isBuffer(buf)) {
          throw new TypeError('"list" argument must be an Array of Buffers');
        }
        buf.copy(buffer, pos);
        pos += buf.length;
      }
      return buffer;
    };
    Buffer2.byteLength = byteLength;
    Buffer2.prototype._isBuffer = true;
    Buffer2.isBuffer = function isBuffer(b6) {
      return !!(b6 != null && b6._isBuffer);
    };
    module.exports.alloc = function(size4) {
      var buffer = new Buffer2(size4);
      buffer.fill(0);
      return buffer;
    };
    module.exports.from = function(data) {
      return new Buffer2(data);
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/utils.js
var require_utils = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/utils.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var toSJISFunction;
    var CODEWORDS_COUNT = [
      0,
      // Not used
      26,
      44,
      70,
      100,
      134,
      172,
      196,
      242,
      292,
      346,
      404,
      466,
      532,
      581,
      655,
      733,
      815,
      901,
      991,
      1085,
      1156,
      1258,
      1364,
      1474,
      1588,
      1706,
      1828,
      1921,
      2051,
      2185,
      2323,
      2465,
      2611,
      2761,
      2876,
      3034,
      3196,
      3362,
      3532,
      3706
    ];
    exports.getSymbolSize = function getSymbolSize(version3) {
      if (!version3) throw new Error('"version" cannot be null or undefined');
      if (version3 < 1 || version3 > 40) throw new Error('"version" should be in range from 1 to 40');
      return version3 * 4 + 17;
    };
    exports.getSymbolTotalCodewords = function getSymbolTotalCodewords(version3) {
      return CODEWORDS_COUNT[version3];
    };
    exports.getBCHDigit = function(data) {
      var digit = 0;
      while (data !== 0) {
        digit++;
        data >>>= 1;
      }
      return digit;
    };
    exports.setToSJISFunction = function setToSJISFunction(f8) {
      if (typeof f8 !== "function") {
        throw new Error('"toSJISFunc" is not a valid function.');
      }
      toSJISFunction = f8;
    };
    exports.isKanjiModeEnabled = function() {
      return typeof toSJISFunction !== "undefined";
    };
    exports.toSJIS = function toSJIS(kanji) {
      return toSJISFunction(kanji);
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/error-correction-level.js
var require_error_correction_level = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/error-correction-level.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    exports.L = { bit: 1 };
    exports.M = { bit: 0 };
    exports.Q = { bit: 3 };
    exports.H = { bit: 2 };
    function fromString5(string2) {
      if (typeof string2 !== "string") {
        throw new Error("Param is not a string");
      }
      var lcStr = string2.toLowerCase();
      switch (lcStr) {
        case "l":
        case "low":
          return exports.L;
        case "m":
        case "medium":
          return exports.M;
        case "q":
        case "quartile":
          return exports.Q;
        case "h":
        case "high":
          return exports.H;
        default:
          throw new Error("Unknown EC Level: " + string2);
      }
    }
    exports.isValid = function isValid(level) {
      return level && typeof level.bit !== "undefined" && level.bit >= 0 && level.bit < 4;
    };
    exports.from = function from8(value, defaultValue) {
      if (exports.isValid(value)) {
        return value;
      }
      try {
        return fromString5(value);
      } catch (e4) {
        return defaultValue;
      }
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/bit-buffer.js
var require_bit_buffer = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/bit-buffer.js"(exports, module) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    function BitBuffer() {
      this.buffer = [];
      this.length = 0;
    }
    BitBuffer.prototype = {
      get: function(index) {
        var bufIndex = Math.floor(index / 8);
        return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) === 1;
      },
      put: function(num, length2) {
        for (var i6 = 0; i6 < length2; i6++) {
          this.putBit((num >>> length2 - i6 - 1 & 1) === 1);
        }
      },
      getLengthInBits: function() {
        return this.length;
      },
      putBit: function(bit) {
        var bufIndex = Math.floor(this.length / 8);
        if (this.buffer.length <= bufIndex) {
          this.buffer.push(0);
        }
        if (bit) {
          this.buffer[bufIndex] |= 128 >>> this.length % 8;
        }
        this.length++;
      }
    };
    module.exports = BitBuffer;
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/bit-matrix.js
var require_bit_matrix = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/bit-matrix.js"(exports, module) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var BufferUtil = require_typedarray_buffer();
    function BitMatrix(size4) {
      if (!size4 || size4 < 1) {
        throw new Error("BitMatrix size must be defined and greater than 0");
      }
      this.size = size4;
      this.data = BufferUtil.alloc(size4 * size4);
      this.reservedBit = BufferUtil.alloc(size4 * size4);
    }
    BitMatrix.prototype.set = function(row, col, value, reserved) {
      var index = row * this.size + col;
      this.data[index] = value;
      if (reserved) this.reservedBit[index] = true;
    };
    BitMatrix.prototype.get = function(row, col) {
      return this.data[row * this.size + col];
    };
    BitMatrix.prototype.xor = function(row, col, value) {
      this.data[row * this.size + col] ^= value;
    };
    BitMatrix.prototype.isReserved = function(row, col) {
      return this.reservedBit[row * this.size + col];
    };
    module.exports = BitMatrix;
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/alignment-pattern.js
var require_alignment_pattern = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/alignment-pattern.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var getSymbolSize = require_utils().getSymbolSize;
    exports.getRowColCoords = function getRowColCoords(version3) {
      if (version3 === 1) return [];
      var posCount = Math.floor(version3 / 7) + 2;
      var size4 = getSymbolSize(version3);
      var intervals = size4 === 145 ? 26 : Math.ceil((size4 - 13) / (2 * posCount - 2)) * 2;
      var positions = [size4 - 7];
      for (var i6 = 1; i6 < posCount - 1; i6++) {
        positions[i6] = positions[i6 - 1] - intervals;
      }
      positions.push(6);
      return positions.reverse();
    };
    exports.getPositions = function getPositions(version3) {
      var coords = [];
      var pos = exports.getRowColCoords(version3);
      var posLength = pos.length;
      for (var i6 = 0; i6 < posLength; i6++) {
        for (var j5 = 0; j5 < posLength; j5++) {
          if (i6 === 0 && j5 === 0 || // top-left
          i6 === 0 && j5 === posLength - 1 || // bottom-left
          i6 === posLength - 1 && j5 === 0) {
            continue;
          }
          coords.push([pos[i6], pos[j5]]);
        }
      }
      return coords;
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/finder-pattern.js
var require_finder_pattern = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/finder-pattern.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var getSymbolSize = require_utils().getSymbolSize;
    var FINDER_PATTERN_SIZE = 7;
    exports.getPositions = function getPositions(version3) {
      var size4 = getSymbolSize(version3);
      return [
        // top-left
        [0, 0],
        // top-right
        [size4 - FINDER_PATTERN_SIZE, 0],
        // bottom-left
        [0, size4 - FINDER_PATTERN_SIZE]
      ];
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/mask-pattern.js
var require_mask_pattern = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/mask-pattern.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    exports.Patterns = {
      PATTERN000: 0,
      PATTERN001: 1,
      PATTERN010: 2,
      PATTERN011: 3,
      PATTERN100: 4,
      PATTERN101: 5,
      PATTERN110: 6,
      PATTERN111: 7
    };
    var PenaltyScores = {
      N1: 3,
      N2: 3,
      N3: 40,
      N4: 10
    };
    exports.isValid = function isValid(mask) {
      return mask != null && mask !== "" && !isNaN(mask) && mask >= 0 && mask <= 7;
    };
    exports.from = function from8(value) {
      return exports.isValid(value) ? parseInt(value, 10) : void 0;
    };
    exports.getPenaltyN1 = function getPenaltyN1(data) {
      var size4 = data.size;
      var points = 0;
      var sameCountCol = 0;
      var sameCountRow = 0;
      var lastCol = null;
      var lastRow = null;
      for (var row = 0; row < size4; row++) {
        sameCountCol = sameCountRow = 0;
        lastCol = lastRow = null;
        for (var col = 0; col < size4; col++) {
          var module2 = data.get(row, col);
          if (module2 === lastCol) {
            sameCountCol++;
          } else {
            if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);
            lastCol = module2;
            sameCountCol = 1;
          }
          module2 = data.get(col, row);
          if (module2 === lastRow) {
            sameCountRow++;
          } else {
            if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);
            lastRow = module2;
            sameCountRow = 1;
          }
        }
        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);
        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);
      }
      return points;
    };
    exports.getPenaltyN2 = function getPenaltyN2(data) {
      var size4 = data.size;
      var points = 0;
      for (var row = 0; row < size4 - 1; row++) {
        for (var col = 0; col < size4 - 1; col++) {
          var last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);
          if (last === 4 || last === 0) points++;
        }
      }
      return points * PenaltyScores.N2;
    };
    exports.getPenaltyN3 = function getPenaltyN3(data) {
      var size4 = data.size;
      var points = 0;
      var bitsCol = 0;
      var bitsRow = 0;
      for (var row = 0; row < size4; row++) {
        bitsCol = bitsRow = 0;
        for (var col = 0; col < size4; col++) {
          bitsCol = bitsCol << 1 & 2047 | data.get(row, col);
          if (col >= 10 && (bitsCol === 1488 || bitsCol === 93)) points++;
          bitsRow = bitsRow << 1 & 2047 | data.get(col, row);
          if (col >= 10 && (bitsRow === 1488 || bitsRow === 93)) points++;
        }
      }
      return points * PenaltyScores.N3;
    };
    exports.getPenaltyN4 = function getPenaltyN4(data) {
      var darkCount = 0;
      var modulesCount = data.data.length;
      for (var i6 = 0; i6 < modulesCount; i6++) darkCount += data.data[i6];
      var k8 = Math.abs(Math.ceil(darkCount * 100 / modulesCount / 5) - 10);
      return k8 * PenaltyScores.N4;
    };
    function getMaskAt(maskPattern, i6, j5) {
      switch (maskPattern) {
        case exports.Patterns.PATTERN000:
          return (i6 + j5) % 2 === 0;
        case exports.Patterns.PATTERN001:
          return i6 % 2 === 0;
        case exports.Patterns.PATTERN010:
          return j5 % 3 === 0;
        case exports.Patterns.PATTERN011:
          return (i6 + j5) % 3 === 0;
        case exports.Patterns.PATTERN100:
          return (Math.floor(i6 / 2) + Math.floor(j5 / 3)) % 2 === 0;
        case exports.Patterns.PATTERN101:
          return i6 * j5 % 2 + i6 * j5 % 3 === 0;
        case exports.Patterns.PATTERN110:
          return (i6 * j5 % 2 + i6 * j5 % 3) % 2 === 0;
        case exports.Patterns.PATTERN111:
          return (i6 * j5 % 3 + (i6 + j5) % 2) % 2 === 0;
        default:
          throw new Error("bad maskPattern:" + maskPattern);
      }
    }
    exports.applyMask = function applyMask(pattern, data) {
      var size4 = data.size;
      for (var col = 0; col < size4; col++) {
        for (var row = 0; row < size4; row++) {
          if (data.isReserved(row, col)) continue;
          data.xor(row, col, getMaskAt(pattern, row, col));
        }
      }
    };
    exports.getBestMask = function getBestMask(data, setupFormatFunc) {
      var numPatterns = Object.keys(exports.Patterns).length;
      var bestPattern = 0;
      var lowerPenalty = Infinity;
      for (var p6 = 0; p6 < numPatterns; p6++) {
        setupFormatFunc(p6);
        exports.applyMask(p6, data);
        var penalty = exports.getPenaltyN1(data) + exports.getPenaltyN2(data) + exports.getPenaltyN3(data) + exports.getPenaltyN4(data);
        exports.applyMask(p6, data);
        if (penalty < lowerPenalty) {
          lowerPenalty = penalty;
          bestPattern = p6;
        }
      }
      return bestPattern;
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/error-correction-code.js
var require_error_correction_code = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/error-correction-code.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var ECLevel = require_error_correction_level();
    var EC_BLOCKS_TABLE = [
      // L  M  Q  H
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      2,
      2,
      1,
      2,
      2,
      4,
      1,
      2,
      4,
      4,
      2,
      4,
      4,
      4,
      2,
      4,
      6,
      5,
      2,
      4,
      6,
      6,
      2,
      5,
      8,
      8,
      4,
      5,
      8,
      8,
      4,
      5,
      8,
      11,
      4,
      8,
      10,
      11,
      4,
      9,
      12,
      16,
      4,
      9,
      16,
      16,
      6,
      10,
      12,
      18,
      6,
      10,
      17,
      16,
      6,
      11,
      16,
      19,
      6,
      13,
      18,
      21,
      7,
      14,
      21,
      25,
      8,
      16,
      20,
      25,
      8,
      17,
      23,
      25,
      9,
      17,
      23,
      34,
      9,
      18,
      25,
      30,
      10,
      20,
      27,
      32,
      12,
      21,
      29,
      35,
      12,
      23,
      34,
      37,
      12,
      25,
      34,
      40,
      13,
      26,
      35,
      42,
      14,
      28,
      38,
      45,
      15,
      29,
      40,
      48,
      16,
      31,
      43,
      51,
      17,
      33,
      45,
      54,
      18,
      35,
      48,
      57,
      19,
      37,
      51,
      60,
      19,
      38,
      53,
      63,
      20,
      40,
      56,
      66,
      21,
      43,
      59,
      70,
      22,
      45,
      62,
      74,
      24,
      47,
      65,
      77,
      25,
      49,
      68,
      81
    ];
    var EC_CODEWORDS_TABLE = [
      // L  M  Q  H
      7,
      10,
      13,
      17,
      10,
      16,
      22,
      28,
      15,
      26,
      36,
      44,
      20,
      36,
      52,
      64,
      26,
      48,
      72,
      88,
      36,
      64,
      96,
      112,
      40,
      72,
      108,
      130,
      48,
      88,
      132,
      156,
      60,
      110,
      160,
      192,
      72,
      130,
      192,
      224,
      80,
      150,
      224,
      264,
      96,
      176,
      260,
      308,
      104,
      198,
      288,
      352,
      120,
      216,
      320,
      384,
      132,
      240,
      360,
      432,
      144,
      280,
      408,
      480,
      168,
      308,
      448,
      532,
      180,
      338,
      504,
      588,
      196,
      364,
      546,
      650,
      224,
      416,
      600,
      700,
      224,
      442,
      644,
      750,
      252,
      476,
      690,
      816,
      270,
      504,
      750,
      900,
      300,
      560,
      810,
      960,
      312,
      588,
      870,
      1050,
      336,
      644,
      952,
      1110,
      360,
      700,
      1020,
      1200,
      390,
      728,
      1050,
      1260,
      420,
      784,
      1140,
      1350,
      450,
      812,
      1200,
      1440,
      480,
      868,
      1290,
      1530,
      510,
      924,
      1350,
      1620,
      540,
      980,
      1440,
      1710,
      570,
      1036,
      1530,
      1800,
      570,
      1064,
      1590,
      1890,
      600,
      1120,
      1680,
      1980,
      630,
      1204,
      1770,
      2100,
      660,
      1260,
      1860,
      2220,
      720,
      1316,
      1950,
      2310,
      750,
      1372,
      2040,
      2430
    ];
    exports.getBlocksCount = function getBlocksCount(version3, errorCorrectionLevel) {
      switch (errorCorrectionLevel) {
        case ECLevel.L:
          return EC_BLOCKS_TABLE[(version3 - 1) * 4 + 0];
        case ECLevel.M:
          return EC_BLOCKS_TABLE[(version3 - 1) * 4 + 1];
        case ECLevel.Q:
          return EC_BLOCKS_TABLE[(version3 - 1) * 4 + 2];
        case ECLevel.H:
          return EC_BLOCKS_TABLE[(version3 - 1) * 4 + 3];
        default:
          return void 0;
      }
    };
    exports.getTotalCodewordsCount = function getTotalCodewordsCount(version3, errorCorrectionLevel) {
      switch (errorCorrectionLevel) {
        case ECLevel.L:
          return EC_CODEWORDS_TABLE[(version3 - 1) * 4 + 0];
        case ECLevel.M:
          return EC_CODEWORDS_TABLE[(version3 - 1) * 4 + 1];
        case ECLevel.Q:
          return EC_CODEWORDS_TABLE[(version3 - 1) * 4 + 2];
        case ECLevel.H:
          return EC_CODEWORDS_TABLE[(version3 - 1) * 4 + 3];
        default:
          return void 0;
      }
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/galois-field.js
var require_galois_field = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/galois-field.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var BufferUtil = require_typedarray_buffer();
    var EXP_TABLE = BufferUtil.alloc(512);
    var LOG_TABLE = BufferUtil.alloc(256);
    (function initTables() {
      var x6 = 1;
      for (var i6 = 0; i6 < 255; i6++) {
        EXP_TABLE[i6] = x6;
        LOG_TABLE[x6] = i6;
        x6 <<= 1;
        if (x6 & 256) {
          x6 ^= 285;
        }
      }
      for (i6 = 255; i6 < 512; i6++) {
        EXP_TABLE[i6] = EXP_TABLE[i6 - 255];
      }
    })();
    exports.log = function log(n7) {
      if (n7 < 1) throw new Error("log(" + n7 + ")");
      return LOG_TABLE[n7];
    };
    exports.exp = function exp(n7) {
      return EXP_TABLE[n7];
    };
    exports.mul = function mul(x6, y7) {
      if (x6 === 0 || y7 === 0) return 0;
      return EXP_TABLE[LOG_TABLE[x6] + LOG_TABLE[y7]];
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/polynomial.js
var require_polynomial = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/polynomial.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var BufferUtil = require_typedarray_buffer();
    var GF = require_galois_field();
    exports.mul = function mul(p1, p22) {
      var coeff = BufferUtil.alloc(p1.length + p22.length - 1);
      for (var i6 = 0; i6 < p1.length; i6++) {
        for (var j5 = 0; j5 < p22.length; j5++) {
          coeff[i6 + j5] ^= GF.mul(p1[i6], p22[j5]);
        }
      }
      return coeff;
    };
    exports.mod = function mod(divident, divisor) {
      var result = BufferUtil.from(divident);
      while (result.length - divisor.length >= 0) {
        var coeff = result[0];
        for (var i6 = 0; i6 < divisor.length; i6++) {
          result[i6] ^= GF.mul(divisor[i6], coeff);
        }
        var offset = 0;
        while (offset < result.length && result[offset] === 0) offset++;
        result = result.slice(offset);
      }
      return result;
    };
    exports.generateECPolynomial = function generateECPolynomial(degree) {
      var poly = BufferUtil.from([1]);
      for (var i6 = 0; i6 < degree; i6++) {
        poly = exports.mul(poly, [1, GF.exp(i6)]);
      }
      return poly;
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/reed-solomon-encoder.js
var require_reed_solomon_encoder = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/reed-solomon-encoder.js"(exports, module) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var BufferUtil = require_typedarray_buffer();
    var Polynomial = require_polynomial();
    var Buffer2 = (init_dist(), __toCommonJS(dist_exports)).Buffer;
    function ReedSolomonEncoder(degree) {
      this.genPoly = void 0;
      this.degree = degree;
      if (this.degree) this.initialize(this.degree);
    }
    ReedSolomonEncoder.prototype.initialize = function initialize(degree) {
      this.degree = degree;
      this.genPoly = Polynomial.generateECPolynomial(this.degree);
    };
    ReedSolomonEncoder.prototype.encode = function encode8(data) {
      if (!this.genPoly) {
        throw new Error("Encoder not initialized");
      }
      var pad4 = BufferUtil.alloc(this.degree);
      var paddedData = Buffer2.concat([data, pad4], data.length + this.degree);
      var remainder = Polynomial.mod(paddedData, this.genPoly);
      var start = this.degree - remainder.length;
      if (start > 0) {
        var buff = BufferUtil.alloc(this.degree);
        remainder.copy(buff, start);
        return buff;
      }
      return remainder;
    };
    module.exports = ReedSolomonEncoder;
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/version-check.js
var require_version_check = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/version-check.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    exports.isValid = function isValid(version3) {
      return !isNaN(version3) && version3 >= 1 && version3 <= 40;
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/regex.js
var require_regex = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/regex.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var numeric = "[0-9]+";
    var alphanumeric = "[A-Z $%*+\\-./:]+";
    var kanji = "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";
    kanji = kanji.replace(/u/g, "\\u");
    var byte = "(?:(?![A-Z0-9 $%*+\\-./:]|" + kanji + ")(?:.|[\r\n]))+";
    exports.KANJI = new RegExp(kanji, "g");
    exports.BYTE_KANJI = new RegExp("[^A-Z0-9 $%*+\\-./:]+", "g");
    exports.BYTE = new RegExp(byte, "g");
    exports.NUMERIC = new RegExp(numeric, "g");
    exports.ALPHANUMERIC = new RegExp(alphanumeric, "g");
    var TEST_KANJI = new RegExp("^" + kanji + "$");
    var TEST_NUMERIC = new RegExp("^" + numeric + "$");
    var TEST_ALPHANUMERIC = new RegExp("^[A-Z0-9 $%*+\\-./:]+$");
    exports.testKanji = function testKanji(str) {
      return TEST_KANJI.test(str);
    };
    exports.testNumeric = function testNumeric(str) {
      return TEST_NUMERIC.test(str);
    };
    exports.testAlphanumeric = function testAlphanumeric(str) {
      return TEST_ALPHANUMERIC.test(str);
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/mode.js
var require_mode = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/mode.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var VersionCheck = require_version_check();
    var Regex = require_regex();
    exports.NUMERIC = {
      id: "Numeric",
      bit: 1 << 0,
      ccBits: [10, 12, 14]
    };
    exports.ALPHANUMERIC = {
      id: "Alphanumeric",
      bit: 1 << 1,
      ccBits: [9, 11, 13]
    };
    exports.BYTE = {
      id: "Byte",
      bit: 1 << 2,
      ccBits: [8, 16, 16]
    };
    exports.KANJI = {
      id: "Kanji",
      bit: 1 << 3,
      ccBits: [8, 10, 12]
    };
    exports.MIXED = {
      bit: -1
    };
    exports.getCharCountIndicator = function getCharCountIndicator(mode, version3) {
      if (!mode.ccBits) throw new Error("Invalid mode: " + mode);
      if (!VersionCheck.isValid(version3)) {
        throw new Error("Invalid version: " + version3);
      }
      if (version3 >= 1 && version3 < 10) return mode.ccBits[0];
      else if (version3 < 27) return mode.ccBits[1];
      return mode.ccBits[2];
    };
    exports.getBestModeForData = function getBestModeForData(dataStr) {
      if (Regex.testNumeric(dataStr)) return exports.NUMERIC;
      else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC;
      else if (Regex.testKanji(dataStr)) return exports.KANJI;
      else return exports.BYTE;
    };
    exports.toString = function toString4(mode) {
      if (mode && mode.id) return mode.id;
      throw new Error("Invalid mode");
    };
    exports.isValid = function isValid(mode) {
      return mode && mode.bit && mode.ccBits;
    };
    function fromString5(string2) {
      if (typeof string2 !== "string") {
        throw new Error("Param is not a string");
      }
      var lcStr = string2.toLowerCase();
      switch (lcStr) {
        case "numeric":
          return exports.NUMERIC;
        case "alphanumeric":
          return exports.ALPHANUMERIC;
        case "kanji":
          return exports.KANJI;
        case "byte":
          return exports.BYTE;
        default:
          throw new Error("Unknown mode: " + string2);
      }
    }
    exports.from = function from8(value, defaultValue) {
      if (exports.isValid(value)) {
        return value;
      }
      try {
        return fromString5(value);
      } catch (e4) {
        return defaultValue;
      }
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/version.js
var require_version = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/version.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var Utils = require_utils();
    var ECCode = require_error_correction_code();
    var ECLevel = require_error_correction_level();
    var Mode = require_mode();
    var VersionCheck = require_version_check();
    var isArray = require_isarray();
    var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;
    var G18_BCH = Utils.getBCHDigit(G18);
    function getBestVersionForDataLength(mode, length2, errorCorrectionLevel) {
      for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {
        if (length2 <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {
          return currentVersion;
        }
      }
      return void 0;
    }
    function getReservedBitsCount(mode, version3) {
      return Mode.getCharCountIndicator(mode, version3) + 4;
    }
    function getTotalBitsFromDataArray(segments, version3) {
      var totalBits = 0;
      segments.forEach(function(data) {
        var reservedBits = getReservedBitsCount(data.mode, version3);
        totalBits += reservedBits + data.getBitsLength();
      });
      return totalBits;
    }
    function getBestVersionForMixedData(segments, errorCorrectionLevel) {
      for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {
        var length2 = getTotalBitsFromDataArray(segments, currentVersion);
        if (length2 <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {
          return currentVersion;
        }
      }
      return void 0;
    }
    exports.from = function from8(value, defaultValue) {
      if (VersionCheck.isValid(value)) {
        return parseInt(value, 10);
      }
      return defaultValue;
    };
    exports.getCapacity = function getCapacity(version3, errorCorrectionLevel, mode) {
      if (!VersionCheck.isValid(version3)) {
        throw new Error("Invalid QR Code version");
      }
      if (typeof mode === "undefined") mode = Mode.BYTE;
      var totalCodewords = Utils.getSymbolTotalCodewords(version3);
      var ecTotalCodewords = ECCode.getTotalCodewordsCount(version3, errorCorrectionLevel);
      var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;
      if (mode === Mode.MIXED) return dataTotalCodewordsBits;
      var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version3);
      switch (mode) {
        case Mode.NUMERIC:
          return Math.floor(usableBits / 10 * 3);
        case Mode.ALPHANUMERIC:
          return Math.floor(usableBits / 11 * 2);
        case Mode.KANJI:
          return Math.floor(usableBits / 13);
        case Mode.BYTE:
        default:
          return Math.floor(usableBits / 8);
      }
    };
    exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel) {
      var seg;
      var ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M);
      if (isArray(data)) {
        if (data.length > 1) {
          return getBestVersionForMixedData(data, ecl);
        }
        if (data.length === 0) {
          return 1;
        }
        seg = data[0];
      } else {
        seg = data;
      }
      return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);
    };
    exports.getEncodedBits = function getEncodedBits(version3) {
      if (!VersionCheck.isValid(version3) || version3 < 7) {
        throw new Error("Invalid QR Code version");
      }
      var d6 = version3 << 12;
      while (Utils.getBCHDigit(d6) - G18_BCH >= 0) {
        d6 ^= G18 << Utils.getBCHDigit(d6) - G18_BCH;
      }
      return version3 << 12 | d6;
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/format-info.js
var require_format_info = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/format-info.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var Utils = require_utils();
    var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;
    var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;
    var G15_BCH = Utils.getBCHDigit(G15);
    exports.getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {
      var data = errorCorrectionLevel.bit << 3 | mask;
      var d6 = data << 10;
      while (Utils.getBCHDigit(d6) - G15_BCH >= 0) {
        d6 ^= G15 << Utils.getBCHDigit(d6) - G15_BCH;
      }
      return (data << 10 | d6) ^ G15_MASK;
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/numeric-data.js
var require_numeric_data = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/numeric-data.js"(exports, module) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var Mode = require_mode();
    function NumericData(data) {
      this.mode = Mode.NUMERIC;
      this.data = data.toString();
    }
    NumericData.getBitsLength = function getBitsLength(length2) {
      return 10 * Math.floor(length2 / 3) + (length2 % 3 ? length2 % 3 * 3 + 1 : 0);
    };
    NumericData.prototype.getLength = function getLength() {
      return this.data.length;
    };
    NumericData.prototype.getBitsLength = function getBitsLength() {
      return NumericData.getBitsLength(this.data.length);
    };
    NumericData.prototype.write = function write(bitBuffer) {
      var i6, group, value;
      for (i6 = 0; i6 + 3 <= this.data.length; i6 += 3) {
        group = this.data.substr(i6, 3);
        value = parseInt(group, 10);
        bitBuffer.put(value, 10);
      }
      var remainingNum = this.data.length - i6;
      if (remainingNum > 0) {
        group = this.data.substr(i6);
        value = parseInt(group, 10);
        bitBuffer.put(value, remainingNum * 3 + 1);
      }
    };
    module.exports = NumericData;
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/alphanumeric-data.js
var require_alphanumeric_data = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/alphanumeric-data.js"(exports, module) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var Mode = require_mode();
    var ALPHA_NUM_CHARS = [
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "A",
      "B",
      "C",
      "D",
      "E",
      "F",
      "G",
      "H",
      "I",
      "J",
      "K",
      "L",
      "M",
      "N",
      "O",
      "P",
      "Q",
      "R",
      "S",
      "T",
      "U",
      "V",
      "W",
      "X",
      "Y",
      "Z",
      " ",
      "$",
      "%",
      "*",
      "+",
      "-",
      ".",
      "/",
      ":"
    ];
    function AlphanumericData(data) {
      this.mode = Mode.ALPHANUMERIC;
      this.data = data;
    }
    AlphanumericData.getBitsLength = function getBitsLength(length2) {
      return 11 * Math.floor(length2 / 2) + 6 * (length2 % 2);
    };
    AlphanumericData.prototype.getLength = function getLength() {
      return this.data.length;
    };
    AlphanumericData.prototype.getBitsLength = function getBitsLength() {
      return AlphanumericData.getBitsLength(this.data.length);
    };
    AlphanumericData.prototype.write = function write(bitBuffer) {
      var i6;
      for (i6 = 0; i6 + 2 <= this.data.length; i6 += 2) {
        var value = ALPHA_NUM_CHARS.indexOf(this.data[i6]) * 45;
        value += ALPHA_NUM_CHARS.indexOf(this.data[i6 + 1]);
        bitBuffer.put(value, 11);
      }
      if (this.data.length % 2) {
        bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i6]), 6);
      }
    };
    module.exports = AlphanumericData;
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/byte-data.js
var require_byte_data = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/byte-data.js"(exports, module) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var BufferUtil = require_typedarray_buffer();
    var Mode = require_mode();
    function ByteData(data) {
      this.mode = Mode.BYTE;
      this.data = BufferUtil.from(data);
    }
    ByteData.getBitsLength = function getBitsLength(length2) {
      return length2 * 8;
    };
    ByteData.prototype.getLength = function getLength() {
      return this.data.length;
    };
    ByteData.prototype.getBitsLength = function getBitsLength() {
      return ByteData.getBitsLength(this.data.length);
    };
    ByteData.prototype.write = function(bitBuffer) {
      for (var i6 = 0, l9 = this.data.length; i6 < l9; i6++) {
        bitBuffer.put(this.data[i6], 8);
      }
    };
    module.exports = ByteData;
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/kanji-data.js
var require_kanji_data = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/kanji-data.js"(exports, module) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var Mode = require_mode();
    var Utils = require_utils();
    function KanjiData(data) {
      this.mode = Mode.KANJI;
      this.data = data;
    }
    KanjiData.getBitsLength = function getBitsLength(length2) {
      return length2 * 13;
    };
    KanjiData.prototype.getLength = function getLength() {
      return this.data.length;
    };
    KanjiData.prototype.getBitsLength = function getBitsLength() {
      return KanjiData.getBitsLength(this.data.length);
    };
    KanjiData.prototype.write = function(bitBuffer) {
      var i6;
      for (i6 = 0; i6 < this.data.length; i6++) {
        var value = Utils.toSJIS(this.data[i6]);
        if (value >= 33088 && value <= 40956) {
          value -= 33088;
        } else if (value >= 57408 && value <= 60351) {
          value -= 49472;
        } else {
          throw new Error(
            "Invalid SJIS character: " + this.data[i6] + "\nMake sure your charset is UTF-8"
          );
        }
        value = (value >>> 8 & 255) * 192 + (value & 255);
        bitBuffer.put(value, 13);
      }
    };
    module.exports = KanjiData;
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/segments.js
var require_segments = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/segments.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var Mode = require_mode();
    var NumericData = require_numeric_data();
    var AlphanumericData = require_alphanumeric_data();
    var ByteData = require_byte_data();
    var KanjiData = require_kanji_data();
    var Regex = require_regex();
    var Utils = require_utils();
    var dijkstra = require_dijkstra();
    function getStringByteLength(str) {
      return unescape(encodeURIComponent(str)).length;
    }
    function getSegments(regex, mode, str) {
      var segments = [];
      var result;
      while ((result = regex.exec(str)) !== null) {
        segments.push({
          data: result[0],
          index: result.index,
          mode,
          length: result[0].length
        });
      }
      return segments;
    }
    function getSegmentsFromString(dataStr) {
      var numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr);
      var alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr);
      var byteSegs;
      var kanjiSegs;
      if (Utils.isKanjiModeEnabled()) {
        byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr);
        kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr);
      } else {
        byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr);
        kanjiSegs = [];
      }
      var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);
      return segs.sort(function(s1, s22) {
        return s1.index - s22.index;
      }).map(function(obj) {
        return {
          data: obj.data,
          mode: obj.mode,
          length: obj.length
        };
      });
    }
    function getSegmentBitsLength(length2, mode) {
      switch (mode) {
        case Mode.NUMERIC:
          return NumericData.getBitsLength(length2);
        case Mode.ALPHANUMERIC:
          return AlphanumericData.getBitsLength(length2);
        case Mode.KANJI:
          return KanjiData.getBitsLength(length2);
        case Mode.BYTE:
          return ByteData.getBitsLength(length2);
      }
    }
    function mergeSegments(segs) {
      return segs.reduce(function(acc, curr) {
        var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;
        if (prevSeg && prevSeg.mode === curr.mode) {
          acc[acc.length - 1].data += curr.data;
          return acc;
        }
        acc.push(curr);
        return acc;
      }, []);
    }
    function buildNodes(segs) {
      var nodes = [];
      for (var i6 = 0; i6 < segs.length; i6++) {
        var seg = segs[i6];
        switch (seg.mode) {
          case Mode.NUMERIC:
            nodes.push([
              seg,
              { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },
              { data: seg.data, mode: Mode.BYTE, length: seg.length }
            ]);
            break;
          case Mode.ALPHANUMERIC:
            nodes.push([
              seg,
              { data: seg.data, mode: Mode.BYTE, length: seg.length }
            ]);
            break;
          case Mode.KANJI:
            nodes.push([
              seg,
              { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }
            ]);
            break;
          case Mode.BYTE:
            nodes.push([
              { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }
            ]);
        }
      }
      return nodes;
    }
    function buildGraph(nodes, version3) {
      var table = {};
      var graph = { "start": {} };
      var prevNodeIds = ["start"];
      for (var i6 = 0; i6 < nodes.length; i6++) {
        var nodeGroup = nodes[i6];
        var currentNodeIds = [];
        for (var j5 = 0; j5 < nodeGroup.length; j5++) {
          var node = nodeGroup[j5];
          var key = "" + i6 + j5;
          currentNodeIds.push(key);
          table[key] = { node, lastCount: 0 };
          graph[key] = {};
          for (var n7 = 0; n7 < prevNodeIds.length; n7++) {
            var prevNodeId = prevNodeIds[n7];
            if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {
              graph[prevNodeId][key] = getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) - getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);
              table[prevNodeId].lastCount += node.length;
            } else {
              if (table[prevNodeId]) table[prevNodeId].lastCount = node.length;
              graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) + 4 + Mode.getCharCountIndicator(node.mode, version3);
            }
          }
        }
        prevNodeIds = currentNodeIds;
      }
      for (n7 = 0; n7 < prevNodeIds.length; n7++) {
        graph[prevNodeIds[n7]]["end"] = 0;
      }
      return { map: graph, table };
    }
    function buildSingleSegment(data, modesHint) {
      var mode;
      var bestMode = Mode.getBestModeForData(data);
      mode = Mode.from(modesHint, bestMode);
      if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {
        throw new Error('"' + data + '" cannot be encoded with mode ' + Mode.toString(mode) + ".\n Suggested mode is: " + Mode.toString(bestMode));
      }
      if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {
        mode = Mode.BYTE;
      }
      switch (mode) {
        case Mode.NUMERIC:
          return new NumericData(data);
        case Mode.ALPHANUMERIC:
          return new AlphanumericData(data);
        case Mode.KANJI:
          return new KanjiData(data);
        case Mode.BYTE:
          return new ByteData(data);
      }
    }
    exports.fromArray = function fromArray2(array) {
      return array.reduce(function(acc, seg) {
        if (typeof seg === "string") {
          acc.push(buildSingleSegment(seg, null));
        } else if (seg.data) {
          acc.push(buildSingleSegment(seg.data, seg.mode));
        }
        return acc;
      }, []);
    };
    exports.fromString = function fromString5(data, version3) {
      var segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled());
      var nodes = buildNodes(segs);
      var graph = buildGraph(nodes, version3);
      var path = dijkstra.find_path(graph.map, "start", "end");
      var optimizedSegs = [];
      for (var i6 = 1; i6 < path.length - 1; i6++) {
        optimizedSegs.push(graph.table[path[i6]].node);
      }
      return exports.fromArray(mergeSegments(optimizedSegs));
    };
    exports.rawSplit = function rawSplit(data) {
      return exports.fromArray(
        getSegmentsFromString(data, Utils.isKanjiModeEnabled())
      );
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/qrcode.js
var require_qrcode = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/core/qrcode.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var BufferUtil = require_typedarray_buffer();
    var Utils = require_utils();
    var ECLevel = require_error_correction_level();
    var BitBuffer = require_bit_buffer();
    var BitMatrix = require_bit_matrix();
    var AlignmentPattern = require_alignment_pattern();
    var FinderPattern = require_finder_pattern();
    var MaskPattern = require_mask_pattern();
    var ECCode = require_error_correction_code();
    var ReedSolomonEncoder = require_reed_solomon_encoder();
    var Version = require_version();
    var FormatInfo = require_format_info();
    var Mode = require_mode();
    var Segments = require_segments();
    var isArray = require_isarray();
    function setupFinderPattern(matrix, version3) {
      var size4 = matrix.size;
      var pos = FinderPattern.getPositions(version3);
      for (var i6 = 0; i6 < pos.length; i6++) {
        var row = pos[i6][0];
        var col = pos[i6][1];
        for (var r5 = -1; r5 <= 7; r5++) {
          if (row + r5 <= -1 || size4 <= row + r5) continue;
          for (var c8 = -1; c8 <= 7; c8++) {
            if (col + c8 <= -1 || size4 <= col + c8) continue;
            if (r5 >= 0 && r5 <= 6 && (c8 === 0 || c8 === 6) || c8 >= 0 && c8 <= 6 && (r5 === 0 || r5 === 6) || r5 >= 2 && r5 <= 4 && c8 >= 2 && c8 <= 4) {
              matrix.set(row + r5, col + c8, true, true);
            } else {
              matrix.set(row + r5, col + c8, false, true);
            }
          }
        }
      }
    }
    function setupTimingPattern(matrix) {
      var size4 = matrix.size;
      for (var r5 = 8; r5 < size4 - 8; r5++) {
        var value = r5 % 2 === 0;
        matrix.set(r5, 6, value, true);
        matrix.set(6, r5, value, true);
      }
    }
    function setupAlignmentPattern(matrix, version3) {
      var pos = AlignmentPattern.getPositions(version3);
      for (var i6 = 0; i6 < pos.length; i6++) {
        var row = pos[i6][0];
        var col = pos[i6][1];
        for (var r5 = -2; r5 <= 2; r5++) {
          for (var c8 = -2; c8 <= 2; c8++) {
            if (r5 === -2 || r5 === 2 || c8 === -2 || c8 === 2 || r5 === 0 && c8 === 0) {
              matrix.set(row + r5, col + c8, true, true);
            } else {
              matrix.set(row + r5, col + c8, false, true);
            }
          }
        }
      }
    }
    function setupVersionInfo(matrix, version3) {
      var size4 = matrix.size;
      var bits = Version.getEncodedBits(version3);
      var row, col, mod;
      for (var i6 = 0; i6 < 18; i6++) {
        row = Math.floor(i6 / 3);
        col = i6 % 3 + size4 - 8 - 3;
        mod = (bits >> i6 & 1) === 1;
        matrix.set(row, col, mod, true);
        matrix.set(col, row, mod, true);
      }
    }
    function setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {
      var size4 = matrix.size;
      var bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);
      var i6, mod;
      for (i6 = 0; i6 < 15; i6++) {
        mod = (bits >> i6 & 1) === 1;
        if (i6 < 6) {
          matrix.set(i6, 8, mod, true);
        } else if (i6 < 8) {
          matrix.set(i6 + 1, 8, mod, true);
        } else {
          matrix.set(size4 - 15 + i6, 8, mod, true);
        }
        if (i6 < 8) {
          matrix.set(8, size4 - i6 - 1, mod, true);
        } else if (i6 < 9) {
          matrix.set(8, 15 - i6 - 1 + 1, mod, true);
        } else {
          matrix.set(8, 15 - i6 - 1, mod, true);
        }
      }
      matrix.set(size4 - 8, 8, 1, true);
    }
    function setupData(matrix, data) {
      var size4 = matrix.size;
      var inc = -1;
      var row = size4 - 1;
      var bitIndex = 7;
      var byteIndex = 0;
      for (var col = size4 - 1; col > 0; col -= 2) {
        if (col === 6) col--;
        while (true) {
          for (var c8 = 0; c8 < 2; c8++) {
            if (!matrix.isReserved(row, col - c8)) {
              var dark = false;
              if (byteIndex < data.length) {
                dark = (data[byteIndex] >>> bitIndex & 1) === 1;
              }
              matrix.set(row, col - c8, dark);
              bitIndex--;
              if (bitIndex === -1) {
                byteIndex++;
                bitIndex = 7;
              }
            }
          }
          row += inc;
          if (row < 0 || size4 <= row) {
            row -= inc;
            inc = -inc;
            break;
          }
        }
      }
    }
    function createData(version3, errorCorrectionLevel, segments) {
      var buffer = new BitBuffer();
      segments.forEach(function(data) {
        buffer.put(data.mode.bit, 4);
        buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version3));
        data.write(buffer);
      });
      var totalCodewords = Utils.getSymbolTotalCodewords(version3);
      var ecTotalCodewords = ECCode.getTotalCodewordsCount(version3, errorCorrectionLevel);
      var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;
      if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {
        buffer.put(0, 4);
      }
      while (buffer.getLengthInBits() % 8 !== 0) {
        buffer.putBit(0);
      }
      var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;
      for (var i6 = 0; i6 < remainingByte; i6++) {
        buffer.put(i6 % 2 ? 17 : 236, 8);
      }
      return createCodewords(buffer, version3, errorCorrectionLevel);
    }
    function createCodewords(bitBuffer, version3, errorCorrectionLevel) {
      var totalCodewords = Utils.getSymbolTotalCodewords(version3);
      var ecTotalCodewords = ECCode.getTotalCodewordsCount(version3, errorCorrectionLevel);
      var dataTotalCodewords = totalCodewords - ecTotalCodewords;
      var ecTotalBlocks = ECCode.getBlocksCount(version3, errorCorrectionLevel);
      var blocksInGroup2 = totalCodewords % ecTotalBlocks;
      var blocksInGroup1 = ecTotalBlocks - blocksInGroup2;
      var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);
      var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);
      var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;
      var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;
      var rs2 = new ReedSolomonEncoder(ecCount);
      var offset = 0;
      var dcData = new Array(ecTotalBlocks);
      var ecData = new Array(ecTotalBlocks);
      var maxDataSize = 0;
      var buffer = BufferUtil.from(bitBuffer.buffer);
      for (var b6 = 0; b6 < ecTotalBlocks; b6++) {
        var dataSize = b6 < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;
        dcData[b6] = buffer.slice(offset, offset + dataSize);
        ecData[b6] = rs2.encode(dcData[b6]);
        offset += dataSize;
        maxDataSize = Math.max(maxDataSize, dataSize);
      }
      var data = BufferUtil.alloc(totalCodewords);
      var index = 0;
      var i6, r5;
      for (i6 = 0; i6 < maxDataSize; i6++) {
        for (r5 = 0; r5 < ecTotalBlocks; r5++) {
          if (i6 < dcData[r5].length) {
            data[index++] = dcData[r5][i6];
          }
        }
      }
      for (i6 = 0; i6 < ecCount; i6++) {
        for (r5 = 0; r5 < ecTotalBlocks; r5++) {
          data[index++] = ecData[r5][i6];
        }
      }
      return data;
    }
    function createSymbol(data, version3, errorCorrectionLevel, maskPattern) {
      var segments;
      if (isArray(data)) {
        segments = Segments.fromArray(data);
      } else if (typeof data === "string") {
        var estimatedVersion = version3;
        if (!estimatedVersion) {
          var rawSegments = Segments.rawSplit(data);
          estimatedVersion = Version.getBestVersionForData(
            rawSegments,
            errorCorrectionLevel
          );
        }
        segments = Segments.fromString(data, estimatedVersion || 40);
      } else {
        throw new Error("Invalid data");
      }
      var bestVersion = Version.getBestVersionForData(
        segments,
        errorCorrectionLevel
      );
      if (!bestVersion) {
        throw new Error("The amount of data is too big to be stored in a QR Code");
      }
      if (!version3) {
        version3 = bestVersion;
      } else if (version3 < bestVersion) {
        throw new Error(
          "\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: " + bestVersion + ".\n"
        );
      }
      var dataBits = createData(version3, errorCorrectionLevel, segments);
      var moduleCount = Utils.getSymbolSize(version3);
      var modules = new BitMatrix(moduleCount);
      setupFinderPattern(modules, version3);
      setupTimingPattern(modules);
      setupAlignmentPattern(modules, version3);
      setupFormatInfo(modules, errorCorrectionLevel, 0);
      if (version3 >= 7) {
        setupVersionInfo(modules, version3);
      }
      setupData(modules, dataBits);
      if (isNaN(maskPattern)) {
        maskPattern = MaskPattern.getBestMask(
          modules,
          setupFormatInfo.bind(null, modules, errorCorrectionLevel)
        );
      }
      MaskPattern.applyMask(maskPattern, modules);
      setupFormatInfo(modules, errorCorrectionLevel, maskPattern);
      return {
        modules,
        version: version3,
        errorCorrectionLevel,
        maskPattern,
        segments
      };
    }
    exports.create = function create3(data, options) {
      if (typeof data === "undefined" || data === "") {
        throw new Error("No input text");
      }
      var errorCorrectionLevel = ECLevel.M;
      var version3;
      var mask;
      if (typeof options !== "undefined") {
        errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M);
        version3 = Version.from(options.version);
        mask = MaskPattern.from(options.maskPattern);
        if (options.toSJISFunc) {
          Utils.setToSJISFunction(options.toSJISFunc);
        }
      }
      return createSymbol(data, version3, errorCorrectionLevel, mask);
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/renderer/utils.js
var require_utils2 = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/renderer/utils.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    function hex2rgba(hex) {
      if (typeof hex === "number") {
        hex = hex.toString();
      }
      if (typeof hex !== "string") {
        throw new Error("Color should be defined as hex string");
      }
      var hexCode = hex.slice().replace("#", "").split("");
      if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {
        throw new Error("Invalid hex color: " + hex);
      }
      if (hexCode.length === 3 || hexCode.length === 4) {
        hexCode = Array.prototype.concat.apply([], hexCode.map(function(c8) {
          return [c8, c8];
        }));
      }
      if (hexCode.length === 6) hexCode.push("F", "F");
      var hexValue = parseInt(hexCode.join(""), 16);
      return {
        r: hexValue >> 24 & 255,
        g: hexValue >> 16 & 255,
        b: hexValue >> 8 & 255,
        a: hexValue & 255,
        hex: "#" + hexCode.slice(0, 6).join("")
      };
    }
    exports.getOptions = function getOptions(options) {
      if (!options) options = {};
      if (!options.color) options.color = {};
      var margin = typeof options.margin === "undefined" || options.margin === null || options.margin < 0 ? 4 : options.margin;
      var width = options.width && options.width >= 21 ? options.width : void 0;
      var scale = options.scale || 4;
      return {
        width,
        scale: width ? 4 : scale,
        margin,
        color: {
          dark: hex2rgba(options.color.dark || "#000000ff"),
          light: hex2rgba(options.color.light || "#ffffffff")
        },
        type: options.type,
        rendererOpts: options.rendererOpts || {}
      };
    };
    exports.getScale = function getScale(qrSize, opts) {
      return opts.width && opts.width >= qrSize + opts.margin * 2 ? opts.width / (qrSize + opts.margin * 2) : opts.scale;
    };
    exports.getImageWidth = function getImageWidth(qrSize, opts) {
      var scale = exports.getScale(qrSize, opts);
      return Math.floor((qrSize + opts.margin * 2) * scale);
    };
    exports.qrToImageData = function qrToImageData(imgData, qr4, opts) {
      var size4 = qr4.modules.size;
      var data = qr4.modules.data;
      var scale = exports.getScale(size4, opts);
      var symbolSize = Math.floor((size4 + opts.margin * 2) * scale);
      var scaledMargin = opts.margin * scale;
      var palette = [opts.color.light, opts.color.dark];
      for (var i6 = 0; i6 < symbolSize; i6++) {
        for (var j5 = 0; j5 < symbolSize; j5++) {
          var posDst = (i6 * symbolSize + j5) * 4;
          var pxColor = opts.color.light;
          if (i6 >= scaledMargin && j5 >= scaledMargin && i6 < symbolSize - scaledMargin && j5 < symbolSize - scaledMargin) {
            var iSrc = Math.floor((i6 - scaledMargin) / scale);
            var jSrc = Math.floor((j5 - scaledMargin) / scale);
            pxColor = palette[data[iSrc * size4 + jSrc] ? 1 : 0];
          }
          imgData[posDst++] = pxColor.r;
          imgData[posDst++] = pxColor.g;
          imgData[posDst++] = pxColor.b;
          imgData[posDst] = pxColor.a;
        }
      }
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/renderer/canvas.js
var require_canvas = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/renderer/canvas.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var Utils = require_utils2();
    function clearCanvas(ctx, canvas, size4) {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      if (!canvas.style) canvas.style = {};
      canvas.height = size4;
      canvas.width = size4;
      canvas.style.height = size4 + "px";
      canvas.style.width = size4 + "px";
    }
    function getCanvasElement() {
      try {
        return document.createElement("canvas");
      } catch (e4) {
        throw new Error("You need to specify a canvas element");
      }
    }
    exports.render = function render(qrData, canvas, options) {
      var opts = options;
      var canvasEl = canvas;
      if (typeof opts === "undefined" && (!canvas || !canvas.getContext)) {
        opts = canvas;
        canvas = void 0;
      }
      if (!canvas) {
        canvasEl = getCanvasElement();
      }
      opts = Utils.getOptions(opts);
      var size4 = Utils.getImageWidth(qrData.modules.size, opts);
      var ctx = canvasEl.getContext("2d");
      var image = ctx.createImageData(size4, size4);
      Utils.qrToImageData(image.data, qrData, opts);
      clearCanvas(ctx, canvasEl, size4);
      ctx.putImageData(image, 0, 0);
      return canvasEl;
    };
    exports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {
      var opts = options;
      if (typeof opts === "undefined" && (!canvas || !canvas.getContext)) {
        opts = canvas;
        canvas = void 0;
      }
      if (!opts) opts = {};
      var canvasEl = exports.render(qrData, canvas, opts);
      var type = opts.type || "image/png";
      var rendererOpts = opts.rendererOpts || {};
      return canvasEl.toDataURL(type, rendererOpts.quality);
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/renderer/svg-tag.js
var require_svg_tag = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/renderer/svg-tag.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var Utils = require_utils2();
    function getColorAttrib(color, attrib) {
      var alpha = color.a / 255;
      var str = attrib + '="' + color.hex + '"';
      return alpha < 1 ? str + " " + attrib + '-opacity="' + alpha.toFixed(2).slice(1) + '"' : str;
    }
    function svgCmd(cmd, x6, y7) {
      var str = cmd + x6;
      if (typeof y7 !== "undefined") str += " " + y7;
      return str;
    }
    function qrToPath(data, size4, margin) {
      var path = "";
      var moveBy = 0;
      var newRow = false;
      var lineLength = 0;
      for (var i6 = 0; i6 < data.length; i6++) {
        var col = Math.floor(i6 % size4);
        var row = Math.floor(i6 / size4);
        if (!col && !newRow) newRow = true;
        if (data[i6]) {
          lineLength++;
          if (!(i6 > 0 && col > 0 && data[i6 - 1])) {
            path += newRow ? svgCmd("M", col + margin, 0.5 + row + margin) : svgCmd("m", moveBy, 0);
            moveBy = 0;
            newRow = false;
          }
          if (!(col + 1 < size4 && data[i6 + 1])) {
            path += svgCmd("h", lineLength);
            lineLength = 0;
          }
        } else {
          moveBy++;
        }
      }
      return path;
    }
    exports.render = function render(qrData, options, cb) {
      var opts = Utils.getOptions(options);
      var size4 = qrData.modules.size;
      var data = qrData.modules.data;
      var qrcodesize = size4 + opts.margin * 2;
      var bg = !opts.color.light.a ? "" : "<path " + getColorAttrib(opts.color.light, "fill") + ' d="M0 0h' + qrcodesize + "v" + qrcodesize + 'H0z"/>';
      var path = "<path " + getColorAttrib(opts.color.dark, "stroke") + ' d="' + qrToPath(data, size4, opts.margin) + '"/>';
      var viewBox = 'viewBox="0 0 ' + qrcodesize + " " + qrcodesize + '"';
      var width = !opts.width ? "" : 'width="' + opts.width + '" height="' + opts.width + '" ';
      var svgTag = '<svg xmlns="http://www.w3.org/2000/svg" ' + width + viewBox + ' shape-rendering="crispEdges">' + bg + path + "</svg>\n";
      if (typeof cb === "function") {
        cb(null, svgTag);
      }
      return svgTag;
    };
  }
});

// node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/browser.js
var require_browser = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/node_modules/qrcode/lib/browser.js"(exports) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var canPromise = require_can_promise();
    var QRCode = require_qrcode();
    var CanvasRenderer = require_canvas();
    var SvgRenderer = require_svg_tag();
    function renderCanvas(renderFunc, canvas, text, opts, cb) {
      var args = [].slice.call(arguments, 1);
      var argsNum = args.length;
      var isLastArgCb = typeof args[argsNum - 1] === "function";
      if (!isLastArgCb && !canPromise()) {
        throw new Error("Callback required as last argument");
      }
      if (isLastArgCb) {
        if (argsNum < 2) {
          throw new Error("Too few arguments provided");
        }
        if (argsNum === 2) {
          cb = text;
          text = canvas;
          canvas = opts = void 0;
        } else if (argsNum === 3) {
          if (canvas.getContext && typeof cb === "undefined") {
            cb = opts;
            opts = void 0;
          } else {
            cb = opts;
            opts = text;
            text = canvas;
            canvas = void 0;
          }
        }
      } else {
        if (argsNum < 1) {
          throw new Error("Too few arguments provided");
        }
        if (argsNum === 1) {
          text = canvas;
          canvas = opts = void 0;
        } else if (argsNum === 2 && !canvas.getContext) {
          opts = text;
          text = canvas;
          canvas = void 0;
        }
        return new Promise(function(resolve, reject) {
          try {
            var data2 = QRCode.create(text, opts);
            resolve(renderFunc(data2, canvas, opts));
          } catch (e4) {
            reject(e4);
          }
        });
      }
      try {
        var data = QRCode.create(text, opts);
        cb(null, renderFunc(data, canvas, opts));
      } catch (e4) {
        cb(e4);
      }
    }
    exports.create = QRCode.create;
    exports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render);
    exports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL);
    exports.toString = renderCanvas.bind(null, function(data, _6, opts) {
      return SvgRenderer.render(data, opts);
    });
  }
});

// node_modules/toggle-selection/index.js
var require_toggle_selection = __commonJS({
  "node_modules/toggle-selection/index.js"(exports, module) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    module.exports = function() {
      var selection = document.getSelection();
      if (!selection.rangeCount) {
        return function() {
        };
      }
      var active = document.activeElement;
      var ranges = [];
      for (var i6 = 0; i6 < selection.rangeCount; i6++) {
        ranges.push(selection.getRangeAt(i6));
      }
      switch (active.tagName.toUpperCase()) {
        // .toUpperCase handles XHTML
        case "INPUT":
        case "TEXTAREA":
          active.blur();
          break;
        default:
          active = null;
          break;
      }
      selection.removeAllRanges();
      return function() {
        selection.type === "Caret" && selection.removeAllRanges();
        if (!selection.rangeCount) {
          ranges.forEach(function(range) {
            selection.addRange(range);
          });
        }
        active && active.focus();
      };
    };
  }
});

// node_modules/copy-to-clipboard/index.js
var require_copy_to_clipboard = __commonJS({
  "node_modules/copy-to-clipboard/index.js"(exports, module) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var deselectCurrent = require_toggle_selection();
    var clipboardToIE11Formatting = {
      "text/plain": "Text",
      "text/html": "Url",
      "default": "Text"
    };
    var defaultMessage = "Copy to clipboard: #{key}, Enter";
    function format(message) {
      var copyKey = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C";
      return message.replace(/#{\s*key\s*}/g, copyKey);
    }
    function copy(text, options) {
      var debug, message, reselectPrevious, range, selection, mark, success = false;
      if (!options) {
        options = {};
      }
      debug = options.debug || false;
      try {
        reselectPrevious = deselectCurrent();
        range = document.createRange();
        selection = document.getSelection();
        mark = document.createElement("span");
        mark.textContent = text;
        mark.ariaHidden = "true";
        mark.style.all = "unset";
        mark.style.position = "fixed";
        mark.style.top = 0;
        mark.style.clip = "rect(0, 0, 0, 0)";
        mark.style.whiteSpace = "pre";
        mark.style.webkitUserSelect = "text";
        mark.style.MozUserSelect = "text";
        mark.style.msUserSelect = "text";
        mark.style.userSelect = "text";
        mark.addEventListener("copy", function(e4) {
          e4.stopPropagation();
          if (options.format) {
            e4.preventDefault();
            if (typeof e4.clipboardData === "undefined") {
              debug && console.warn("unable to use e.clipboardData");
              debug && console.warn("trying IE specific stuff");
              window.clipboardData.clearData();
              var format2 = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting["default"];
              window.clipboardData.setData(format2, text);
            } else {
              e4.clipboardData.clearData();
              e4.clipboardData.setData(options.format, text);
            }
          }
          if (options.onCopy) {
            e4.preventDefault();
            options.onCopy(e4.clipboardData);
          }
        });
        document.body.appendChild(mark);
        range.selectNodeContents(mark);
        selection.addRange(range);
        var successful = document.execCommand("copy");
        if (!successful) {
          throw new Error("copy command was unsuccessful");
        }
        success = true;
      } catch (err) {
        debug && console.error("unable to copy using execCommand: ", err);
        debug && console.warn("trying IE specific stuff");
        try {
          window.clipboardData.setData(options.format || "text", text);
          options.onCopy && options.onCopy(window.clipboardData);
          success = true;
        } catch (err2) {
          debug && console.error("unable to copy using clipboardData: ", err2);
          debug && console.error("falling back to prompt");
          message = format("message" in options ? options.message : defaultMessage);
          window.prompt(message, text);
        }
      } finally {
        if (selection) {
          if (typeof selection.removeRange == "function") {
            selection.removeRange(range);
          } else {
            selection.removeAllRanges();
          }
        }
        if (mark) {
          document.body.removeChild(mark);
        }
        reselectPrevious();
      }
      return success;
    }
    module.exports = copy;
  }
});

// node_modules/preact/dist/preact.module.js
function a(n7, l9) {
  for (var u4 in l9) n7[u4] = l9[u4];
  return n7;
}
function v(n7) {
  var l9 = n7.parentNode;
  l9 && l9.removeChild(n7);
}
function h(n7, l9, u4) {
  var i6, t3 = arguments, r5 = {};
  for (i6 in l9) "key" !== i6 && "ref" !== i6 && (r5[i6] = l9[i6]);
  if (arguments.length > 3) for (u4 = [u4], i6 = 3; i6 < arguments.length; i6++) u4.push(t3[i6]);
  if (null != u4 && (r5.children = u4), "function" == typeof n7 && null != n7.defaultProps) for (i6 in n7.defaultProps) void 0 === r5[i6] && (r5[i6] = n7.defaultProps[i6]);
  return p(n7, r5, l9 && l9.key, l9 && l9.ref, null);
}
function p(l9, u4, i6, t3, r5) {
  var o6 = { type: l9, props: u4, key: i6, ref: t3, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, constructor: void 0, __v: r5 };
  return null == r5 && (o6.__v = o6), n.vnode && n.vnode(o6), o6;
}
function y() {
  return {};
}
function d(n7) {
  return n7.children;
}
function m(n7, l9) {
  this.props = n7, this.context = l9;
}
function w(n7, l9) {
  if (null == l9) return n7.__ ? w(n7.__, n7.__.__k.indexOf(n7) + 1) : null;
  for (var u4; l9 < n7.__k.length; l9++) if (null != (u4 = n7.__k[l9]) && null != u4.__e) return u4.__e;
  return "function" == typeof n7.type ? w(n7) : null;
}
function k(n7) {
  var l9, u4;
  if (null != (n7 = n7.__) && null != n7.__c) {
    for (n7.__e = n7.__c.base = null, l9 = 0; l9 < n7.__k.length; l9++) if (null != (u4 = n7.__k[l9]) && null != u4.__e) {
      n7.__e = n7.__c.base = u4.__e;
      break;
    }
    return k(n7);
  }
}
function g(l9) {
  (!l9.__d && (l9.__d = true) && u.push(l9) && !i++ || r !== n.debounceRendering) && ((r = n.debounceRendering) || t)(_);
}
function _() {
  for (var n7; i = u.length; ) n7 = u.sort(function(n8, l9) {
    return n8.__v.__b - l9.__v.__b;
  }), u = [], n7.some(function(n8) {
    var l9, u4, i6, t3, r5, o6, f8;
    n8.__d && (o6 = (r5 = (l9 = n8).__v).__e, (f8 = l9.__P) && (u4 = [], (i6 = a({}, r5)).__v = i6, t3 = A(f8, r5, i6, l9.__n, void 0 !== f8.ownerSVGElement, null, u4, null == o6 ? w(r5) : o6), T(u4, r5), t3 != o6 && k(r5)));
  });
}
function b(n7, l9, u4, i6, t3, r5, o6, f8, s5) {
  var a5, h7, p6, y7, d6, m5, k8, g5 = u4 && u4.__k || c, _6 = g5.length;
  if (f8 == e && (f8 = null != r5 ? r5[0] : _6 ? w(u4, 0) : null), a5 = 0, l9.__k = x(l9.__k, function(u5) {
    if (null != u5) {
      if (u5.__ = l9, u5.__b = l9.__b + 1, null === (p6 = g5[a5]) || p6 && u5.key == p6.key && u5.type === p6.type) g5[a5] = void 0;
      else for (h7 = 0; h7 < _6; h7++) {
        if ((p6 = g5[h7]) && u5.key == p6.key && u5.type === p6.type) {
          g5[h7] = void 0;
          break;
        }
        p6 = null;
      }
      if (y7 = A(n7, u5, p6 = p6 || e, i6, t3, r5, o6, f8, s5), (h7 = u5.ref) && p6.ref != h7 && (k8 || (k8 = []), p6.ref && k8.push(p6.ref, null, u5), k8.push(h7, u5.__c || y7, u5)), null != y7) {
        var c8;
        if (null == m5 && (m5 = y7), void 0 !== u5.__d) c8 = u5.__d, u5.__d = void 0;
        else if (r5 == p6 || y7 != f8 || null == y7.parentNode) {
          n: if (null == f8 || f8.parentNode !== n7) n7.appendChild(y7), c8 = null;
          else {
            for (d6 = f8, h7 = 0; (d6 = d6.nextSibling) && h7 < _6; h7 += 2) if (d6 == y7) break n;
            n7.insertBefore(y7, f8), c8 = f8;
          }
          "option" == l9.type && (n7.value = "");
        }
        f8 = void 0 !== c8 ? c8 : y7.nextSibling, "function" == typeof l9.type && (l9.__d = f8);
      } else f8 && p6.__e == f8 && f8.parentNode != n7 && (f8 = w(p6));
    }
    return a5++, u5;
  }), l9.__e = m5, null != r5 && "function" != typeof l9.type) for (a5 = r5.length; a5--; ) null != r5[a5] && v(r5[a5]);
  for (a5 = _6; a5--; ) null != g5[a5] && D(g5[a5], g5[a5]);
  if (k8) for (a5 = 0; a5 < k8.length; a5++) j(k8[a5], k8[++a5], k8[++a5]);
}
function x(n7, l9, u4) {
  if (null == u4 && (u4 = []), null == n7 || "boolean" == typeof n7) l9 && u4.push(l9(null));
  else if (Array.isArray(n7)) for (var i6 = 0; i6 < n7.length; i6++) x(n7[i6], l9, u4);
  else u4.push(l9 ? l9("string" == typeof n7 || "number" == typeof n7 ? p(null, n7, null, null, n7) : null != n7.__e || null != n7.__c ? p(n7.type, n7.props, n7.key, null, n7.__v) : n7) : n7);
  return u4;
}
function P(n7, l9, u4, i6, t3) {
  var r5;
  for (r5 in u4) "children" === r5 || "key" === r5 || r5 in l9 || N(n7, r5, null, u4[r5], i6);
  for (r5 in l9) t3 && "function" != typeof l9[r5] || "children" === r5 || "key" === r5 || "value" === r5 || "checked" === r5 || u4[r5] === l9[r5] || N(n7, r5, l9[r5], u4[r5], i6);
}
function C(n7, l9, u4) {
  "-" === l9[0] ? n7.setProperty(l9, u4) : n7[l9] = "number" == typeof u4 && false === s.test(l9) ? u4 + "px" : null == u4 ? "" : u4;
}
function N(n7, l9, u4, i6, t3) {
  var r5, o6, f8, e4, c8;
  if (t3 ? "className" === l9 && (l9 = "class") : "class" === l9 && (l9 = "className"), "style" === l9) if (r5 = n7.style, "string" == typeof u4) r5.cssText = u4;
  else {
    if ("string" == typeof i6 && (r5.cssText = "", i6 = null), i6) for (e4 in i6) u4 && e4 in u4 || C(r5, e4, "");
    if (u4) for (c8 in u4) i6 && u4[c8] === i6[c8] || C(r5, c8, u4[c8]);
  }
  else "o" === l9[0] && "n" === l9[1] ? (o6 = l9 !== (l9 = l9.replace(/Capture$/, "")), f8 = l9.toLowerCase(), l9 = (f8 in n7 ? f8 : l9).slice(2), u4 ? (i6 || n7.addEventListener(l9, z, o6), (n7.l || (n7.l = {}))[l9] = u4) : n7.removeEventListener(l9, z, o6)) : "list" !== l9 && "tagName" !== l9 && "form" !== l9 && "type" !== l9 && "size" !== l9 && !t3 && l9 in n7 ? n7[l9] = null == u4 ? "" : u4 : "function" != typeof u4 && "dangerouslySetInnerHTML" !== l9 && (l9 !== (l9 = l9.replace(/^xlink:?/, "")) ? null == u4 || false === u4 ? n7.removeAttributeNS("http://www.w3.org/1999/xlink", l9.toLowerCase()) : n7.setAttributeNS("http://www.w3.org/1999/xlink", l9.toLowerCase(), u4) : null == u4 || false === u4 && !/^ar/.test(l9) ? n7.removeAttribute(l9) : n7.setAttribute(l9, u4));
}
function z(l9) {
  this.l[l9.type](n.event ? n.event(l9) : l9);
}
function A(l9, u4, i6, t3, r5, o6, f8, e4, c8) {
  var s5, v8, h7, p6, y7, w7, k8, g5, _6, x6, P6 = u4.type;
  if (void 0 !== u4.constructor) return null;
  (s5 = n.__b) && s5(u4);
  try {
    n: if ("function" == typeof P6) {
      if (g5 = u4.props, _6 = (s5 = P6.contextType) && t3[s5.__c], x6 = s5 ? _6 ? _6.props.value : s5.__ : t3, i6.__c ? k8 = (v8 = u4.__c = i6.__c).__ = v8.__E : ("prototype" in P6 && P6.prototype.render ? u4.__c = v8 = new P6(g5, x6) : (u4.__c = v8 = new m(g5, x6), v8.constructor = P6, v8.render = E), _6 && _6.sub(v8), v8.props = g5, v8.state || (v8.state = {}), v8.context = x6, v8.__n = t3, h7 = v8.__d = true, v8.__h = []), null == v8.__s && (v8.__s = v8.state), null != P6.getDerivedStateFromProps && (v8.__s == v8.state && (v8.__s = a({}, v8.__s)), a(v8.__s, P6.getDerivedStateFromProps(g5, v8.__s))), p6 = v8.props, y7 = v8.state, h7) null == P6.getDerivedStateFromProps && null != v8.componentWillMount && v8.componentWillMount(), null != v8.componentDidMount && v8.__h.push(v8.componentDidMount);
      else {
        if (null == P6.getDerivedStateFromProps && g5 !== p6 && null != v8.componentWillReceiveProps && v8.componentWillReceiveProps(g5, x6), !v8.__e && null != v8.shouldComponentUpdate && false === v8.shouldComponentUpdate(g5, v8.__s, x6) || u4.__v === i6.__v && !v8.__) {
          for (v8.props = g5, v8.state = v8.__s, u4.__v !== i6.__v && (v8.__d = false), v8.__v = u4, u4.__e = i6.__e, u4.__k = i6.__k, v8.__h.length && f8.push(v8), s5 = 0; s5 < u4.__k.length; s5++) u4.__k[s5] && (u4.__k[s5].__ = u4);
          break n;
        }
        null != v8.componentWillUpdate && v8.componentWillUpdate(g5, v8.__s, x6), null != v8.componentDidUpdate && v8.__h.push(function() {
          v8.componentDidUpdate(p6, y7, w7);
        });
      }
      v8.context = x6, v8.props = g5, v8.state = v8.__s, (s5 = n.__r) && s5(u4), v8.__d = false, v8.__v = u4, v8.__P = l9, s5 = v8.render(v8.props, v8.state, v8.context), u4.__k = null != s5 && s5.type == d && null == s5.key ? s5.props.children : Array.isArray(s5) ? s5 : [s5], null != v8.getChildContext && (t3 = a(a({}, t3), v8.getChildContext())), h7 || null == v8.getSnapshotBeforeUpdate || (w7 = v8.getSnapshotBeforeUpdate(p6, y7)), b(l9, u4, i6, t3, r5, o6, f8, e4, c8), v8.base = u4.__e, v8.__h.length && f8.push(v8), k8 && (v8.__E = v8.__ = null), v8.__e = false;
    } else null == o6 && u4.__v === i6.__v ? (u4.__k = i6.__k, u4.__e = i6.__e) : u4.__e = $(i6.__e, u4, i6, t3, r5, o6, f8, c8);
    (s5 = n.diffed) && s5(u4);
  } catch (l10) {
    u4.__v = null, n.__e(l10, u4, i6);
  }
  return u4.__e;
}
function T(l9, u4) {
  n.__c && n.__c(u4, l9), l9.some(function(u5) {
    try {
      l9 = u5.__h, u5.__h = [], l9.some(function(n7) {
        n7.call(u5);
      });
    } catch (l10) {
      n.__e(l10, u5.__v);
    }
  });
}
function $(n7, l9, u4, i6, t3, r5, o6, f8) {
  var s5, a5, v8, h7, p6, y7 = u4.props, d6 = l9.props;
  if (t3 = "svg" === l9.type || t3, null != r5) {
    for (s5 = 0; s5 < r5.length; s5++) if (null != (a5 = r5[s5]) && ((null === l9.type ? 3 === a5.nodeType : a5.localName === l9.type) || n7 == a5)) {
      n7 = a5, r5[s5] = null;
      break;
    }
  }
  if (null == n7) {
    if (null === l9.type) return document.createTextNode(d6);
    n7 = t3 ? document.createElementNS("http://www.w3.org/2000/svg", l9.type) : document.createElement(l9.type, d6.is && { is: d6.is }), r5 = null, f8 = false;
  }
  if (null === l9.type) y7 !== d6 && n7.data != d6 && (n7.data = d6);
  else {
    if (null != r5 && (r5 = c.slice.call(n7.childNodes)), v8 = (y7 = u4.props || e).dangerouslySetInnerHTML, h7 = d6.dangerouslySetInnerHTML, !f8) {
      if (y7 === e) for (y7 = {}, p6 = 0; p6 < n7.attributes.length; p6++) y7[n7.attributes[p6].name] = n7.attributes[p6].value;
      (h7 || v8) && (h7 && v8 && h7.__html == v8.__html || (n7.innerHTML = h7 && h7.__html || ""));
    }
    P(n7, d6, y7, t3, f8), h7 ? l9.__k = [] : (l9.__k = l9.props.children, b(n7, l9, u4, i6, "foreignObject" !== l9.type && t3, r5, o6, e, f8)), f8 || ("value" in d6 && void 0 !== (s5 = d6.value) && s5 !== n7.value && N(n7, "value", s5, y7.value, false), "checked" in d6 && void 0 !== (s5 = d6.checked) && s5 !== n7.checked && N(n7, "checked", s5, y7.checked, false));
  }
  return n7;
}
function j(l9, u4, i6) {
  try {
    "function" == typeof l9 ? l9(u4) : l9.current = u4;
  } catch (l10) {
    n.__e(l10, i6);
  }
}
function D(l9, u4, i6) {
  var t3, r5, o6;
  if (n.unmount && n.unmount(l9), (t3 = l9.ref) && (t3.current && t3.current !== l9.__e || j(t3, null, u4)), i6 || "function" == typeof l9.type || (i6 = null != (r5 = l9.__e)), l9.__e = l9.__d = void 0, null != (t3 = l9.__c)) {
    if (t3.componentWillUnmount) try {
      t3.componentWillUnmount();
    } catch (l10) {
      n.__e(l10, u4);
    }
    t3.base = t3.__P = null;
  }
  if (t3 = l9.__k) for (o6 = 0; o6 < t3.length; o6++) t3[o6] && D(t3[o6], u4, i6);
  null != r5 && v(r5);
}
function E(n7, l9, u4) {
  return this.constructor(n7, u4);
}
function H(l9, u4, i6) {
  var t3, r5, f8;
  n.__ && n.__(l9, u4), r5 = (t3 = i6 === o) ? null : i6 && i6.__k || u4.__k, l9 = h(d, null, [l9]), f8 = [], A(u4, (t3 ? u4 : i6 || u4).__k = l9, r5 || e, e, void 0 !== u4.ownerSVGElement, i6 && !t3 ? [i6] : r5 ? null : c.slice.call(u4.childNodes), f8, i6 || e, t3), T(f8, l9);
}
function I(n7, l9) {
  H(n7, l9, o);
}
function L(n7, l9) {
  var u4, i6;
  for (i6 in l9 = a(a({}, n7.props), l9), arguments.length > 2 && (l9.children = c.slice.call(arguments, 2)), u4 = {}, l9) "key" !== i6 && "ref" !== i6 && (u4[i6] = l9[i6]);
  return p(n7.type, u4, l9.key || n7.key, l9.ref || n7.ref, null);
}
function M(n7) {
  var l9 = {}, u4 = { __c: "__cC" + f++, __: n7, Consumer: function(n8, l10) {
    return n8.children(l10);
  }, Provider: function(n8) {
    var i6, t3 = this;
    return this.getChildContext || (i6 = [], this.getChildContext = function() {
      return l9[u4.__c] = t3, l9;
    }, this.shouldComponentUpdate = function(n9) {
      t3.props.value !== n9.value && i6.some(function(l10) {
        l10.context = n9.value, g(l10);
      });
    }, this.sub = function(n9) {
      i6.push(n9);
      var l10 = n9.componentWillUnmount;
      n9.componentWillUnmount = function() {
        i6.splice(i6.indexOf(n9), 1), l10 && l10.call(n9);
      };
    }), n8.children;
  } };
  return u4.Consumer.contextType = u4, u4.Provider.__ = u4, u4;
}
var import_dist25, import_dist26, import_dist27, n, l, u, i, t, r, o, f, e, c, s;
var init_preact_module = __esm({
  "node_modules/preact/dist/preact.module.js"() {
    import_dist25 = __toESM(require_dist());
    import_dist26 = __toESM(require_dist2());
    import_dist27 = __toESM(require_dist3());
    e = {};
    c = [];
    s = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;
    n = { __e: function(n7, l9) {
      for (var u4, i6; l9 = l9.__; ) if ((u4 = l9.__c) && !u4.__) try {
        if (u4.constructor && null != u4.constructor.getDerivedStateFromError && (i6 = true, u4.setState(u4.constructor.getDerivedStateFromError(n7))), null != u4.componentDidCatch && (i6 = true, u4.componentDidCatch(n7)), i6) return g(u4.__E = u4);
      } catch (l10) {
        n7 = l10;
      }
      throw n7;
    } }, l = function(n7) {
      return null != n7 && void 0 === n7.constructor;
    }, m.prototype.setState = function(n7, l9) {
      var u4;
      u4 = this.__s !== this.state ? this.__s : this.__s = a({}, this.state), "function" == typeof n7 && (n7 = n7(u4, this.props)), n7 && a(u4, n7), null != n7 && this.__v && (l9 && this.__h.push(l9), g(this));
    }, m.prototype.forceUpdate = function(n7) {
      this.__v && (this.__e = true, n7 && this.__h.push(n7), g(this));
    }, m.prototype.render = d, u = [], i = 0, t = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, o = e, f = 0;
  }
});

// node_modules/preact/hooks/dist/hooks.module.js
function v2(t3, r5) {
  n.__h && n.__h(u2, t3, i2 || r5), i2 = 0;
  var o6 = u2.__H || (u2.__H = { __: [], __h: [] });
  return t3 >= o6.__.length && o6.__.push({}), o6.__[t3];
}
function m2(n7) {
  return i2 = 1, p2(E2, n7);
}
function p2(n7, r5, i6) {
  var o6 = v2(t2++, 2);
  return o6.__c || (o6.__c = u2, o6.__ = [i6 ? i6(r5) : E2(void 0, r5), function(t3) {
    var u4 = n7(o6.__[0], t3);
    o6.__[0] !== u4 && (o6.__[0] = u4, o6.__c.setState({}));
  }]), o6.__;
}
function l2(r5, i6) {
  var o6 = v2(t2++, 3);
  !n.__s && x2(o6.__H, i6) && (o6.__ = r5, o6.__H = i6, u2.__H.__h.push(o6));
}
function y2(r5, i6) {
  var o6 = v2(t2++, 4);
  !n.__s && x2(o6.__H, i6) && (o6.__ = r5, o6.__H = i6, u2.__h.push(o6));
}
function d2(n7) {
  return i2 = 5, h2(function() {
    return { current: n7 };
  }, []);
}
function s2(n7, t3, u4) {
  i2 = 6, y2(function() {
    "function" == typeof n7 ? n7(t3()) : n7 && (n7.current = t3());
  }, null == u4 ? u4 : u4.concat(n7));
}
function h2(n7, u4) {
  var r5 = v2(t2++, 7);
  return x2(r5.__H, u4) ? (r5.__H = u4, r5.__h = n7, r5.__ = n7()) : r5.__;
}
function T2(n7, t3) {
  return i2 = 8, h2(function() {
    return n7;
  }, t3);
}
function w2(n7) {
  var r5 = u2.context[n7.__c], i6 = v2(t2++, 9);
  return i6.__c = n7, r5 ? (null == i6.__ && (i6.__ = true, r5.sub(u2)), r5.props.value) : n7.__;
}
function A2(t3, u4) {
  n.useDebugValue && n.useDebugValue(u4 ? u4(t3) : t3);
}
function F(n7) {
  var r5 = v2(t2++, 10), i6 = m2();
  return r5.__ = n7, u2.componentDidCatch || (u2.componentDidCatch = function(n8) {
    r5.__ && r5.__(n8), i6[1](n8);
  }), [i6[0], function() {
    i6[1](void 0);
  }];
}
function _2() {
  o2.some(function(t3) {
    if (t3.__P) try {
      t3.__H.__h.forEach(g2), t3.__H.__h.forEach(q), t3.__H.__h = [];
    } catch (u4) {
      return t3.__H.__h = [], n.__e(u4, t3.__v), true;
    }
  }), o2 = [];
}
function g2(n7) {
  n7.t && n7.t();
}
function q(n7) {
  var t3 = n7.__();
  "function" == typeof t3 && (n7.t = t3);
}
function x2(n7, t3) {
  return !n7 || t3.some(function(t4, u4) {
    return t4 !== n7[u4];
  });
}
function E2(n7, t3) {
  return "function" == typeof t3 ? t3(n7) : t3;
}
var import_dist28, import_dist29, import_dist30, t2, u2, r2, i2, o2, c2, f2, e2, a2;
var init_hooks_module = __esm({
  "node_modules/preact/hooks/dist/hooks.module.js"() {
    import_dist28 = __toESM(require_dist());
    import_dist29 = __toESM(require_dist2());
    import_dist30 = __toESM(require_dist3());
    init_preact_module();
    i2 = 0;
    o2 = [];
    c2 = n.__r;
    f2 = n.diffed;
    e2 = n.__c;
    a2 = n.unmount;
    n.__r = function(n7) {
      c2 && c2(n7), t2 = 0, (u2 = n7.__c).__H && (u2.__H.__h.forEach(g2), u2.__H.__h.forEach(q), u2.__H.__h = []);
    }, n.diffed = function(t3) {
      f2 && f2(t3);
      var u4 = t3.__c;
      if (u4) {
        var i6 = u4.__H;
        i6 && i6.__h.length && (1 !== o2.push(u4) && r2 === n.requestAnimationFrame || ((r2 = n.requestAnimationFrame) || function(n7) {
          var t4, u5 = function() {
            clearTimeout(r5), cancelAnimationFrame(t4), setTimeout(n7);
          }, r5 = setTimeout(u5, 100);
          "undefined" != typeof window && (t4 = requestAnimationFrame(u5));
        })(_2));
      }
    }, n.__c = function(t3, u4) {
      u4.some(function(t4) {
        try {
          t4.__h.forEach(g2), t4.__h = t4.__h.filter(function(n7) {
            return !n7.__ || q(n7);
          });
        } catch (r5) {
          u4.some(function(n7) {
            n7.__h && (n7.__h = []);
          }), u4 = [], n.__e(r5, t4.__v);
        }
      }), e2 && e2(t3, u4);
    }, n.unmount = function(t3) {
      a2 && a2(t3);
      var u4 = t3.__c;
      if (u4) {
        var r5 = u4.__H;
        if (r5) try {
          r5.__.forEach(function(n7) {
            return n7.t && n7.t();
          });
        } catch (t4) {
          n.__e(t4, u4.__v);
        }
      }
    };
  }
});

// node_modules/preact/compat/dist/compat.module.js
var compat_module_exports = {};
__export(compat_module_exports, {
  Children: () => R,
  Component: () => m,
  Fragment: () => d,
  PureComponent: () => C2,
  Suspense: () => U,
  SuspenseList: () => O,
  cloneElement: () => K,
  createContext: () => M,
  createElement: () => h,
  createFactory: () => G,
  createPortal: () => z2,
  createRef: () => y,
  default: () => compat_module_default,
  findDOMNode: () => X,
  forwardRef: () => S,
  hydrate: () => V,
  isValidElement: () => J,
  lazy: () => L2,
  memo: () => _3,
  render: () => T3,
  unmountComponentAtNode: () => Q,
  unstable_batchedUpdates: () => Y,
  useCallback: () => T2,
  useContext: () => w2,
  useDebugValue: () => A2,
  useEffect: () => l2,
  useErrorBoundary: () => F,
  useImperativeHandle: () => s2,
  useLayoutEffect: () => y2,
  useMemo: () => h2,
  useReducer: () => p2,
  useRef: () => d2,
  useState: () => m2,
  version: () => B
});
function E3(n7, t3) {
  for (var e4 in t3) n7[e4] = t3[e4];
  return n7;
}
function w3(n7, t3) {
  for (var e4 in n7) if ("__source" !== e4 && !(e4 in t3)) return true;
  for (var r5 in t3) if ("__source" !== r5 && n7[r5] !== t3[r5]) return true;
  return false;
}
function _3(n7, t3) {
  function e4(n8) {
    var e5 = this.props.ref, r6 = e5 == n8.ref;
    return !r6 && e5 && (e5.call ? e5(null) : e5.current = null), t3 ? !t3(this.props, n8) || !r6 : w3(this.props, n8);
  }
  function r5(t4) {
    return this.shouldComponentUpdate = e4, h(n7, E3({}, t4));
  }
  return r5.prototype.isReactComponent = true, r5.displayName = "Memo(" + (n7.displayName || n7.name) + ")", r5.t = true, r5;
}
function S(n7) {
  function t3(t4) {
    var e4 = E3({}, t4);
    return delete e4.ref, n7(e4, t4.ref);
  }
  return t3.prototype.isReactComponent = t3.t = true, t3.displayName = "ForwardRef(" + (n7.displayName || n7.name) + ")", t3;
}
function N2(n7) {
  return n7 && ((n7 = E3({}, n7)).__c = null, n7.__k = n7.__k && n7.__k.map(N2)), n7;
}
function U() {
  this.__u = 0, this.o = null, this.__b = null;
}
function M2(n7) {
  var t3 = n7.__.__c;
  return t3 && t3.u && t3.u(n7);
}
function L2(n7) {
  var t3, e4, r5;
  function o6(o7) {
    if (t3 || (t3 = n7()).then(function(n8) {
      e4 = n8.default || n8;
    }, function(n8) {
      r5 = n8;
    }), r5) throw r5;
    if (!e4) throw t3;
    return h(e4, o7);
  }
  return o6.displayName = "Lazy", o6.t = true, o6;
}
function O() {
  this.i = null, this.l = null;
}
function j2(n7) {
  var t3 = this, e4 = n7.container, r5 = h(W, { context: t3.context }, n7.vnode);
  return t3.s && t3.s !== e4 && (t3.v.parentNode && t3.s.removeChild(t3.v), D(t3.h), t3.p = false), n7.vnode ? t3.p ? (e4.__k = t3.__k, H(r5, e4), t3.__k = e4.__k) : (t3.v = document.createTextNode(""), I("", e4), e4.appendChild(t3.v), t3.p = true, t3.s = e4, H(r5, e4, t3.v), t3.__k = t3.v.__k) : t3.p && (t3.v.parentNode && t3.s.removeChild(t3.v), D(t3.h)), t3.h = r5, t3.componentWillUnmount = function() {
    t3.v.parentNode && t3.s.removeChild(t3.v), D(t3.h);
  }, null;
}
function z2(n7, t3) {
  return h(j2, { vnode: n7, container: t3 });
}
function T3(n7, t3, e4) {
  if (null == t3.__k) for (; t3.firstChild; ) t3.removeChild(t3.firstChild);
  return H(n7, t3), "function" == typeof e4 && e4(), n7 ? n7.__c : null;
}
function V(n7, t3, e4) {
  return I(n7, t3), "function" == typeof e4 && e4(), n7 ? n7.__c : null;
}
function I2(n7, t3) {
  n7["UNSAFE_" + t3] && !n7[t3] && Object.defineProperty(n7, t3, { configurable: false, get: function() {
    return this["UNSAFE_" + t3];
  }, set: function(n8) {
    this["UNSAFE_" + t3] = n8;
  } });
}
function G(n7) {
  return h.bind(null, n7);
}
function J(n7) {
  return !!n7 && n7.$$typeof === H2;
}
function K(n7) {
  return J(n7) ? L.apply(null, arguments) : n7;
}
function Q(n7) {
  return !!n7.__k && (H(null, n7), true);
}
function X(n7) {
  return n7 && (n7.base || 1 === n7.nodeType && n7) || null;
}
var import_dist31, import_dist32, import_dist33, C2, A3, k2, R, F2, P2, W, D2, H2, Z, $2, q2, B, Y, compat_module_default;
var init_compat_module = __esm({
  "node_modules/preact/compat/dist/compat.module.js"() {
    import_dist31 = __toESM(require_dist());
    import_dist32 = __toESM(require_dist2());
    import_dist33 = __toESM(require_dist3());
    init_hooks_module();
    init_hooks_module();
    init_preact_module();
    init_preact_module();
    C2 = function(n7) {
      var t3, e4;
      function r5(t4) {
        var e5;
        return (e5 = n7.call(this, t4) || this).isPureReactComponent = true, e5;
      }
      return e4 = n7, (t3 = r5).prototype = Object.create(e4.prototype), t3.prototype.constructor = t3, t3.__proto__ = e4, r5.prototype.shouldComponentUpdate = function(n8, t4) {
        return w3(this.props, n8) || w3(this.state, t4);
      }, r5;
    }(m);
    A3 = n.__b;
    n.__b = function(n7) {
      n7.type && n7.type.t && n7.ref && (n7.props.ref = n7.ref, n7.ref = null), A3 && A3(n7);
    };
    k2 = function(n7, t3) {
      return n7 ? x(n7).reduce(function(n8, e4, r5) {
        return n8.concat(t3(e4, r5));
      }, []) : null;
    };
    R = { map: k2, forEach: k2, count: function(n7) {
      return n7 ? x(n7).length : 0;
    }, only: function(n7) {
      if (1 !== (n7 = x(n7)).length) throw new Error("Children.only() expects only one child.");
      return n7[0];
    }, toArray: x };
    F2 = n.__e;
    n.__e = function(n7, t3, e4) {
      if (n7.then) {
        for (var r5, o6 = t3; o6 = o6.__; ) if ((r5 = o6.__c) && r5.__c) return r5.__c(n7, t3.__c);
      }
      F2(n7, t3, e4);
    }, (U.prototype = new m()).__c = function(n7, t3) {
      var e4 = this;
      null == e4.o && (e4.o = []), e4.o.push(t3);
      var r5 = M2(e4.__v), o6 = false, u4 = function() {
        o6 || (o6 = true, r5 ? r5(i6) : i6());
      };
      t3.__c = t3.componentWillUnmount, t3.componentWillUnmount = function() {
        u4(), t3.__c && t3.__c();
      };
      var i6 = function() {
        var n8;
        if (!--e4.__u) for (e4.__v.__k[0] = e4.state.u, e4.setState({ u: e4.__b = null }); n8 = e4.o.pop(); ) n8.forceUpdate();
      };
      e4.__u++ || e4.setState({ u: e4.__b = e4.__v.__k[0] }), n7.then(u4, u4);
    }, U.prototype.render = function(n7, t3) {
      return this.__b && (this.__v.__k[0] = N2(this.__b), this.__b = null), [h(m, null, t3.u ? null : n7.children), t3.u && n7.fallback];
    };
    P2 = function(n7, t3, e4) {
      if (++e4[1] === e4[0] && n7.l.delete(t3), n7.props.revealOrder && ("t" !== n7.props.revealOrder[0] || !n7.l.size)) for (e4 = n7.i; e4; ) {
        for (; e4.length > 3; ) e4.pop()();
        if (e4[1] < e4[0]) break;
        n7.i = e4 = e4[2];
      }
    };
    (O.prototype = new m()).u = function(n7) {
      var t3 = this, e4 = M2(t3.__v), r5 = t3.l.get(n7);
      return r5[0]++, function(o6) {
        var u4 = function() {
          t3.props.revealOrder ? (r5.push(o6), P2(t3, n7, r5)) : o6();
        };
        e4 ? e4(u4) : u4();
      };
    }, O.prototype.render = function(n7) {
      this.i = null, this.l = /* @__PURE__ */ new Map();
      var t3 = x(n7.children);
      n7.revealOrder && "b" === n7.revealOrder[0] && t3.reverse();
      for (var e4 = t3.length; e4--; ) this.l.set(t3[e4], this.i = [1, 0, this.i]);
      return n7.children;
    }, O.prototype.componentDidUpdate = O.prototype.componentDidMount = function() {
      var n7 = this;
      n7.l.forEach(function(t3, e4) {
        P2(n7, e4, t3);
      });
    };
    W = function() {
      function n7() {
      }
      var t3 = n7.prototype;
      return t3.getChildContext = function() {
        return this.props.context;
      }, t3.render = function(n8) {
        return n8.children;
      }, n7;
    }();
    D2 = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;
    m.prototype.isReactComponent = {};
    H2 = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103;
    Z = n.event;
    n.event = function(n7) {
      Z && (n7 = Z(n7)), n7.persist = function() {
      };
      var t3 = false, e4 = false, r5 = n7.stopPropagation;
      n7.stopPropagation = function() {
        r5.call(n7), t3 = true;
      };
      var o6 = n7.preventDefault;
      return n7.preventDefault = function() {
        o6.call(n7), e4 = true;
      }, n7.isPropagationStopped = function() {
        return t3;
      }, n7.isDefaultPrevented = function() {
        return e4;
      }, n7.nativeEvent = n7;
    };
    $2 = { configurable: true, get: function() {
      return this.class;
    } };
    q2 = n.vnode;
    n.vnode = function(n7) {
      n7.$$typeof = H2;
      var t3 = n7.type, e4 = n7.props;
      if (t3) {
        if (e4.class != e4.className && ($2.enumerable = "className" in e4, null != e4.className && (e4.class = e4.className), Object.defineProperty(e4, "className", $2)), "function" != typeof t3) {
          var r5, o6, u4;
          for (u4 in e4.defaultValue && void 0 !== e4.value && (e4.value || 0 === e4.value || (e4.value = e4.defaultValue), delete e4.defaultValue), Array.isArray(e4.value) && e4.multiple && "select" === t3 && (x(e4.children).forEach(function(n8) {
            -1 != e4.value.indexOf(n8.props.value) && (n8.props.selected = true);
          }), delete e4.value), e4) if (r5 = D2.test(u4)) break;
          if (r5) for (u4 in o6 = n7.props = {}, e4) o6[D2.test(u4) ? u4.replace(/[A-Z0-9]/, "-$&").toLowerCase() : u4] = e4[u4];
        }
        !function(t4) {
          var e5 = n7.type, r6 = n7.props;
          if (r6 && "string" == typeof e5) {
            var o7 = {};
            for (var u5 in r6) /^on(Ani|Tra|Tou)/.test(u5) && (r6[u5.toLowerCase()] = r6[u5], delete r6[u5]), o7[u5.toLowerCase()] = u5;
            if (o7.ondoubleclick && (r6.ondblclick = r6[o7.ondoubleclick], delete r6[o7.ondoubleclick]), o7.onbeforeinput && (r6.onbeforeinput = r6[o7.onbeforeinput], delete r6[o7.onbeforeinput]), o7.onchange && ("textarea" === e5 || "input" === e5.toLowerCase() && !/^fil|che|ra/i.test(r6.type))) {
              var i6 = o7.oninput || "oninput";
              r6[i6] || (r6[i6] = r6[o7.onchange], delete r6[o7.onchange]);
            }
          }
        }(), "function" == typeof t3 && !t3.m && t3.prototype && (I2(t3.prototype, "componentWillMount"), I2(t3.prototype, "componentWillReceiveProps"), I2(t3.prototype, "componentWillUpdate"), t3.m = true);
      }
      q2 && q2(n7);
    };
    B = "16.8.0";
    Y = function(n7, t3) {
      return n7(t3);
    };
    compat_module_default = { useState: m2, useReducer: p2, useEffect: l2, useLayoutEffect: y2, useRef: d2, useImperativeHandle: s2, useMemo: h2, useCallback: T2, useContext: w2, useDebugValue: A2, version: "16.8.0", Children: R, render: T3, hydrate: T3, unmountComponentAtNode: Q, createPortal: z2, createElement: h, createContext: M, createFactory: G, cloneElement: K, createRef: y, Fragment: d, isValidElement: J, findDOMNode: X, Component: m, PureComponent: C2, memo: _3, forwardRef: S, unstable_batchedUpdates: Y, Suspense: U, SuspenseList: O, lazy: L2 };
  }
});

// node_modules/@walletconnect/qrcode-modal/dist/cjs/index.js
var require_cjs3 = __commonJS({
  "node_modules/@walletconnect/qrcode-modal/dist/cjs/index.js"(exports, module) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    function _interopDefault(ex) {
      return ex && typeof ex === "object" && "default" in ex ? ex["default"] : ex;
    }
    var browserUtils = (init_esm2(), __toCommonJS(esm_exports2));
    var QRCode = _interopDefault(require_browser());
    var copy = _interopDefault(require_copy_to_clipboard());
    var React = (init_compat_module(), __toCommonJS(compat_module_exports));
    function open(uri) {
      QRCode.toString(uri, {
        type: "terminal"
      }).then(console.log);
    }
    var WALLETCONNECT_STYLE_SHEET = ':root {\n  --animation-duration: 300ms;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.animated {\n  animation-duration: var(--animation-duration);\n  animation-fill-mode: both;\n}\n\n.fadeIn {\n  animation-name: fadeIn;\n}\n\n.fadeOut {\n  animation-name: fadeOut;\n}\n\n#walletconnect-wrapper {\n  -webkit-user-select: none;\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  pointer-events: none;\n  position: fixed;\n  top: 0;\n  user-select: none;\n  width: 100%;\n  z-index: 99999999999999;\n}\n\n.walletconnect-modal__headerLogo {\n  height: 21px;\n}\n\n.walletconnect-modal__header p {\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n  align-items: flex-start;\n  display: flex;\n  flex: 1;\n  margin-left: 5px;\n}\n\n.walletconnect-modal__close__wrapper {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  z-index: 10000;\n  background: white;\n  border-radius: 26px;\n  padding: 6px;\n  box-sizing: border-box;\n  width: 26px;\n  height: 26px;\n  cursor: pointer;\n}\n\n.walletconnect-modal__close__icon {\n  position: relative;\n  top: 7px;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform: rotate(45deg);\n}\n\n.walletconnect-modal__close__line1 {\n  position: absolute;\n  width: 100%;\n  border: 1px solid rgb(48, 52, 59);\n}\n\n.walletconnect-modal__close__line2 {\n  position: absolute;\n  width: 100%;\n  border: 1px solid rgb(48, 52, 59);\n  transform: rotate(90deg);\n}\n\n.walletconnect-qrcode__base {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  background: rgba(37, 41, 46, 0.95);\n  height: 100%;\n  left: 0;\n  pointer-events: auto;\n  position: fixed;\n  top: 0;\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\n  width: 100%;\n  will-change: opacity;\n  padding: 40px;\n  box-sizing: border-box;\n}\n\n.walletconnect-qrcode__text {\n  color: rgba(60, 66, 82, 0.6);\n  font-size: 16px;\n  font-weight: 600;\n  letter-spacing: 0;\n  line-height: 1.1875em;\n  margin: 10px 0 20px 0;\n  text-align: center;\n  width: 100%;\n}\n\n@media only screen and (max-width: 768px) {\n  .walletconnect-qrcode__text {\n    font-size: 4vw;\n  }\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-qrcode__text {\n    font-size: 14px;\n  }\n}\n\n.walletconnect-qrcode__image {\n  width: calc(100% - 30px);\n  box-sizing: border-box;\n  cursor: none;\n  margin: 0 auto;\n}\n\n.walletconnect-qrcode__notification {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  font-size: 16px;\n  padding: 16px 20px;\n  border-radius: 16px;\n  text-align: center;\n  transition: all 0.1s ease-in-out;\n  background: white;\n  color: black;\n  margin-bottom: -60px;\n  opacity: 0;\n}\n\n.walletconnect-qrcode__notification.notification__show {\n  opacity: 1;\n}\n\n@media only screen and (max-width: 768px) {\n  .walletconnect-modal__header {\n    height: 130px;\n  }\n  .walletconnect-modal__base {\n    overflow: auto;\n  }\n}\n\n@media only screen and (min-device-width: 415px) and (max-width: 768px) {\n  #content {\n    max-width: 768px;\n    box-sizing: border-box;\n  }\n}\n\n@media only screen and (min-width: 375px) and (max-width: 415px) {\n  #content {\n    max-width: 414px;\n    box-sizing: border-box;\n  }\n}\n\n@media only screen and (min-width: 320px) and (max-width: 375px) {\n  #content {\n    max-width: 375px;\n    box-sizing: border-box;\n  }\n}\n\n@media only screen and (max-width: 320px) {\n  #content {\n    max-width: 320px;\n    box-sizing: border-box;\n  }\n}\n\n.walletconnect-modal__base {\n  -webkit-font-smoothing: antialiased;\n  background: #ffffff;\n  border-radius: 24px;\n  box-shadow: 0 10px 50px 5px rgba(0, 0, 0, 0.4);\n  font-family: ui-rounded, "SF Pro Rounded", "SF Pro Text", medium-content-sans-serif-font,\n    -apple-system, BlinkMacSystemFont, ui-sans-serif, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell,\n    "Open Sans", "Helvetica Neue", sans-serif;\n  margin-top: 41px;\n  padding: 24px 24px 22px;\n  pointer-events: auto;\n  position: relative;\n  text-align: center;\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\n  will-change: transform;\n  overflow: visible;\n  transform: translateY(-50%);\n  top: 50%;\n  max-width: 500px;\n  margin: auto;\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-modal__base {\n    padding: 24px 12px;\n  }\n}\n\n.walletconnect-modal__base .hidden {\n  transform: translateY(150%);\n  transition: 0.125s cubic-bezier(0.4, 0, 1, 1);\n}\n\n.walletconnect-modal__header {\n  align-items: center;\n  display: flex;\n  height: 26px;\n  left: 0;\n  justify-content: space-between;\n  position: absolute;\n  top: -42px;\n  width: 100%;\n}\n\n.walletconnect-modal__base .wc-logo {\n  align-items: center;\n  display: flex;\n  height: 26px;\n  margin-top: 15px;\n  padding-bottom: 15px;\n  pointer-events: auto;\n}\n\n.walletconnect-modal__base .wc-logo div {\n  background-color: #3399ff;\n  height: 21px;\n  margin-right: 5px;\n  mask-image: url("images/wc-logo.svg") center no-repeat;\n  width: 32px;\n}\n\n.walletconnect-modal__base .wc-logo p {\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n}\n\n.walletconnect-modal__base h2 {\n  color: rgba(60, 66, 82, 0.6);\n  font-size: 16px;\n  font-weight: 600;\n  letter-spacing: 0;\n  line-height: 1.1875em;\n  margin: 0 0 19px 0;\n  text-align: center;\n  width: 100%;\n}\n\n.walletconnect-modal__base__row {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  align-items: center;\n  border-radius: 20px;\n  cursor: pointer;\n  display: flex;\n  height: 56px;\n  justify-content: space-between;\n  padding: 0 15px;\n  position: relative;\n  margin: 0px 0px 8px;\n  text-align: left;\n  transition: 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  will-change: transform;\n  text-decoration: none;\n}\n\n.walletconnect-modal__base__row:hover {\n  background: rgba(60, 66, 82, 0.06);\n}\n\n.walletconnect-modal__base__row:active {\n  background: rgba(60, 66, 82, 0.06);\n  transform: scale(0.975);\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n.walletconnect-modal__base__row__h3 {\n  color: #25292e;\n  font-size: 20px;\n  font-weight: 700;\n  margin: 0;\n  padding-bottom: 3px;\n}\n\n.walletconnect-modal__base__row__right {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n}\n\n.walletconnect-modal__base__row__right__app-icon {\n  border-radius: 8px;\n  height: 34px;\n  margin: 0 11px 2px 0;\n  width: 34px;\n  background-size: 100%;\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\n}\n\n.walletconnect-modal__base__row__right__caret {\n  height: 18px;\n  opacity: 0.3;\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  width: 8px;\n  will-change: opacity;\n}\n\n.walletconnect-modal__base__row:hover .caret,\n.walletconnect-modal__base__row:active .caret {\n  opacity: 0.6;\n}\n\n.walletconnect-modal__mobile__toggle {\n  width: 80%;\n  display: flex;\n  margin: 0 auto;\n  position: relative;\n  overflow: hidden;\n  border-radius: 8px;\n  margin-bottom: 18px;\n  background: #d4d5d9;\n}\n\n.walletconnect-modal__single_wallet {\n  display: flex;\n  justify-content: center;\n  margin-top: 7px;\n  margin-bottom: 18px;\n}\n\n.walletconnect-modal__single_wallet a {\n  cursor: pointer;\n  color: rgb(64, 153, 255);\n  font-size: 21px;\n  font-weight: 800;\n  text-decoration: none !important;\n  margin: 0 auto;\n}\n\n.walletconnect-modal__mobile__toggle_selector {\n  width: calc(50% - 8px);\n  background: white;\n  position: absolute;\n  border-radius: 5px;\n  height: calc(100% - 8px);\n  top: 4px;\n  transition: all 0.2s ease-in-out;\n  transform: translate3d(4px, 0, 0);\n}\n\n.walletconnect-modal__mobile__toggle.right__selected .walletconnect-modal__mobile__toggle_selector {\n  transform: translate3d(calc(100% + 12px), 0, 0);\n}\n\n.walletconnect-modal__mobile__toggle a {\n  font-size: 12px;\n  width: 50%;\n  text-align: center;\n  padding: 8px;\n  margin: 0;\n  font-weight: 600;\n  z-index: 1;\n}\n\n.walletconnect-modal__footer {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n@media only screen and (max-width: 768px) {\n  .walletconnect-modal__footer {\n    margin-top: 5vw;\n  }\n}\n\n.walletconnect-modal__footer a {\n  cursor: pointer;\n  color: #898d97;\n  font-size: 15px;\n  margin: 0 auto;\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-modal__footer a {\n    font-size: 14px;\n  }\n}\n\n.walletconnect-connect__buttons__wrapper {\n  max-height: 44vh;\n}\n\n.walletconnect-connect__buttons__wrapper__android {\n  margin: 50% 0;\n}\n\n.walletconnect-connect__buttons__wrapper__wrap {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  margin: 10px 0;\n}\n\n@media only screen and (min-width: 768px) {\n  .walletconnect-connect__buttons__wrapper__wrap {\n    margin-top: 40px;\n  }\n}\n\n.walletconnect-connect__button {\n  background-color: rgb(64, 153, 255);\n  padding: 12px;\n  border-radius: 8px;\n  text-decoration: none;\n  color: rgb(255, 255, 255);\n  font-weight: 500;\n}\n\n.walletconnect-connect__button__icon_anchor {\n  cursor: pointer;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin: 8px;\n  width: 42px;\n  justify-self: center;\n  flex-direction: column;\n  text-decoration: none !important;\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-connect__button__icon_anchor {\n    margin: 4px;\n  }\n}\n\n.walletconnect-connect__button__icon {\n  border-radius: 10px;\n  height: 42px;\n  margin: 0;\n  width: 42px;\n  background-size: cover !important;\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\n}\n\n.walletconnect-connect__button__text {\n  color: #424952;\n  font-size: 2.7vw;\n  text-decoration: none !important;\n  padding: 0;\n  margin-top: 1.8vw;\n  font-weight: 600;\n}\n\n@media only screen and (min-width: 768px) {\n  .walletconnect-connect__button__text {\n    font-size: 16px;\n    margin-top: 12px;\n  }\n}\n\n.walletconnect-search__input {\n  border: none;\n  background: #d4d5d9;\n  border-style: none;\n  padding: 8px 16px;\n  outline: none;\n  font-style: normal;\n  font-stretch: normal;\n  font-size: 16px;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: left;\n  border-radius: 8px;\n  width: calc(100% - 16px);\n  margin: 0;\n  margin-bottom: 8px;\n}\n';
    var _iteratorSymbol = typeof Symbol !== "undefined" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";
    var _asyncIteratorSymbol = typeof Symbol !== "undefined" ? Symbol.asyncIterator || (Symbol.asyncIterator = Symbol("Symbol.asyncIterator")) : "@@asyncIterator";
    function _catch(body, recover) {
      try {
        var result = body();
      } catch (e4) {
        return recover(e4);
      }
      if (result && result.then) {
        return result.then(void 0, recover);
      }
      return result;
    }
    var WALLETCONNECT_LOGO_SVG_URL = "data:image/svg+xml,%3Csvg height='185' viewBox='0 0 300 185' width='300' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m61.4385429 36.2562612c48.9112241-47.8881663 128.2119871-47.8881663 177.1232091 0l5.886545 5.7634174c2.445561 2.3944081 2.445561 6.2765112 0 8.6709204l-20.136695 19.715503c-1.222781 1.1972051-3.2053 1.1972051-4.428081 0l-8.100584-7.9311479c-34.121692-33.4079817-89.443886-33.4079817-123.5655788 0l-8.6750562 8.4936051c-1.2227816 1.1972041-3.205301 1.1972041-4.4280806 0l-20.1366949-19.7155031c-2.4455612-2.3944092-2.4455612-6.2765122 0-8.6709204zm218.7677961 40.7737449 17.921697 17.546897c2.445549 2.3943969 2.445563 6.2764769.000031 8.6708899l-80.810171 79.121134c-2.445544 2.394426-6.410582 2.394453-8.85616.000062-.00001-.00001-.000022-.000022-.000032-.000032l-57.354143-56.154572c-.61139-.598602-1.60265-.598602-2.21404 0-.000004.000004-.000007.000008-.000011.000011l-57.3529212 56.154531c-2.4455368 2.394432-6.4105755 2.394472-8.8561612.000087-.0000143-.000014-.0000296-.000028-.0000449-.000044l-80.81241943-79.122185c-2.44556021-2.394408-2.44556021-6.2765115 0-8.6709197l17.92172963-17.5468673c2.4455602-2.3944082 6.4105989-2.3944082 8.8561602 0l57.3549775 56.155357c.6113908.598602 1.602649.598602 2.2140398 0 .0000092-.000009.0000174-.000017.0000265-.000024l57.3521031-56.155333c2.445505-2.3944633 6.410544-2.3945531 8.856161-.0002.000034.0000336.000068.0000673.000101.000101l57.354902 56.155432c.61139.598601 1.60265.598601 2.21404 0l57.353975-56.1543249c2.445561-2.3944092 6.410599-2.3944092 8.85616 0z' fill='%233b99fc'/%3E%3C/svg%3E";
    var WALLETCONNECT_HEADER_TEXT = "WalletConnect";
    var ANIMATION_DURATION = 300;
    var DEFAULT_BUTTON_COLOR = "rgb(64, 153, 255)";
    var WALLETCONNECT_WRAPPER_ID = "walletconnect-wrapper";
    var WALLETCONNECT_STYLE_ID = "walletconnect-style-sheet";
    var WALLETCONNECT_MODAL_ID = "walletconnect-qrcode-modal";
    var WALLETCONNECT_CLOSE_BUTTON_ID = "walletconnect-qrcode-close";
    var WALLETCONNECT_CTA_TEXT_ID = "walletconnect-qrcode-text";
    var WALLETCONNECT_CONNECT_BUTTON_ID = "walletconnect-connect-button";
    function Header(props) {
      return React.createElement("div", {
        className: "walletconnect-modal__header"
      }, React.createElement("img", {
        src: WALLETCONNECT_LOGO_SVG_URL,
        className: "walletconnect-modal__headerLogo"
      }), React.createElement("p", null, WALLETCONNECT_HEADER_TEXT), React.createElement("div", {
        className: "walletconnect-modal__close__wrapper",
        onClick: props.onClose
      }, React.createElement("div", {
        id: WALLETCONNECT_CLOSE_BUTTON_ID,
        className: "walletconnect-modal__close__icon"
      }, React.createElement("div", {
        className: "walletconnect-modal__close__line1"
      }), React.createElement("div", {
        className: "walletconnect-modal__close__line2"
      }))));
    }
    function ConnectButton(props) {
      return React.createElement("a", {
        className: "walletconnect-connect__button",
        href: props.href,
        id: WALLETCONNECT_CONNECT_BUTTON_ID + "-" + props.name,
        onClick: props.onClick,
        rel: "noopener noreferrer",
        style: {
          backgroundColor: props.color
        },
        target: "_blank"
      }, props.name);
    }
    var CARET_SVG_URL = "data:image/svg+xml,%3Csvg fill='none' height='18' viewBox='0 0 8 18' width='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath clip-rule='evenodd' d='m.586301.213898c-.435947.33907-.5144813.967342-.175411 1.403292l4.87831 6.27212c.28087.36111.28087.86677 0 1.22788l-4.878311 6.27211c-.33907.436-.260536 1.0642.175412 1.4033.435949.3391 1.064219.2605 1.403289-.1754l4.87832-6.2721c.84259-1.08336.84259-2.60034 0-3.68367l-4.87832-6.27212c-.33907-.4359474-.96734-.514482-1.403289-.175412z' fill='%233c4252' fill-rule='evenodd'/%3E%3C/svg%3E";
    function WalletButton(props) {
      var color = props.color;
      var href = props.href;
      var name2 = props.name;
      var logo = props.logo;
      var onClick = props.onClick;
      return React.createElement("a", {
        className: "walletconnect-modal__base__row",
        href,
        onClick,
        rel: "noopener noreferrer",
        target: "_blank"
      }, React.createElement("h3", {
        className: "walletconnect-modal__base__row__h3"
      }, name2), React.createElement("div", {
        className: "walletconnect-modal__base__row__right"
      }, React.createElement("div", {
        className: "walletconnect-modal__base__row__right__app-icon",
        style: {
          background: "url('" + logo + "') " + color,
          backgroundSize: "100%"
        }
      }), React.createElement("img", {
        src: CARET_SVG_URL,
        className: "walletconnect-modal__base__row__right__caret"
      })));
    }
    function WalletIcon(props) {
      var color = props.color;
      var href = props.href;
      var name2 = props.name;
      var logo = props.logo;
      var onClick = props.onClick;
      var fontSize = window.innerWidth < 768 ? (name2.length > 8 ? 2.5 : 2.7) + "vw" : "inherit";
      return React.createElement("a", {
        className: "walletconnect-connect__button__icon_anchor",
        href,
        onClick,
        rel: "noopener noreferrer",
        target: "_blank"
      }, React.createElement("div", {
        className: "walletconnect-connect__button__icon",
        style: {
          background: "url('" + logo + "') " + color,
          backgroundSize: "100%"
        }
      }), React.createElement("div", {
        style: {
          fontSize
        },
        className: "walletconnect-connect__button__text"
      }, name2));
    }
    var GRID_MIN_COUNT = 5;
    var LINKS_PER_PAGE = 12;
    function LinkDisplay(props) {
      var android = browserUtils.isAndroid();
      var ref = React.useState("");
      var input = ref[0];
      var setInput = ref[1];
      var ref$1 = React.useState("");
      var filter = ref$1[0];
      var setFilter = ref$1[1];
      var ref$2 = React.useState(1);
      var page = ref$2[0];
      var setPage = ref$2[1];
      var links = filter ? props.links.filter(function(link) {
        return link.name.toLowerCase().includes(filter.toLowerCase());
      }) : props.links;
      var errorMessage = props.errorMessage;
      var grid = filter || links.length > GRID_MIN_COUNT;
      var pages = Math.ceil(links.length / LINKS_PER_PAGE);
      var range = [(page - 1) * LINKS_PER_PAGE + 1, page * LINKS_PER_PAGE];
      var pageLinks = links.length ? links.filter(function(_6, index2) {
        return index2 + 1 >= range[0] && index2 + 1 <= range[1];
      }) : [];
      var hasPaging = !!(!android && pages > 1);
      var filterTimeout = void 0;
      function handleInput(e4) {
        setInput(e4.target.value);
        clearTimeout(filterTimeout);
        if (e4.target.value) {
          filterTimeout = setTimeout(function() {
            setFilter(e4.target.value);
            setPage(1);
          }, 1e3);
        } else {
          setInput("");
          setFilter("");
          setPage(1);
        }
      }
      return React.createElement("div", null, React.createElement("p", {
        id: WALLETCONNECT_CTA_TEXT_ID,
        className: "walletconnect-qrcode__text"
      }, android ? props.text.connect_mobile_wallet : props.text.choose_preferred_wallet), !android && React.createElement("input", {
        className: "walletconnect-search__input",
        placeholder: "Search",
        value: input,
        onChange: handleInput
      }), React.createElement("div", {
        className: "walletconnect-connect__buttons__wrapper" + (android ? "__android" : grid && links.length ? "__wrap" : "")
      }, !android ? pageLinks.length ? pageLinks.map(function(entry) {
        var color = entry.color;
        var name2 = entry.name;
        var shortName = entry.shortName;
        var logo = entry.logo;
        var href = browserUtils.formatIOSMobile(props.uri, entry);
        var handleClickIOS = React.useCallback(function() {
          browserUtils.saveMobileLinkInfo({
            name: name2,
            href
          });
        }, [pageLinks]);
        return !grid ? React.createElement(WalletButton, {
          color,
          href,
          name: name2,
          logo,
          onClick: handleClickIOS
        }) : React.createElement(WalletIcon, {
          color,
          href,
          name: shortName || name2,
          logo,
          onClick: handleClickIOS
        });
      }) : React.createElement(React.Fragment, null, React.createElement("p", null, errorMessage.length ? props.errorMessage : !!props.links.length && !links.length ? props.text.no_wallets_found : props.text.loading)) : React.createElement(ConnectButton, {
        name: props.text.connect,
        color: DEFAULT_BUTTON_COLOR,
        href: props.uri,
        onClick: React.useCallback(function() {
          browserUtils.saveMobileLinkInfo({
            name: "Unknown",
            href: props.uri
          });
        }, [])
      })), hasPaging && React.createElement("div", {
        className: "walletconnect-modal__footer"
      }, Array(pages).fill(0).map(function(_6, index2) {
        var pageNumber = index2 + 1;
        var selected = page === pageNumber;
        return React.createElement("a", {
          style: {
            margin: "auto 10px",
            fontWeight: selected ? "bold" : "normal"
          },
          onClick: function() {
            return setPage(pageNumber);
          }
        }, pageNumber);
      })));
    }
    function Notification(props) {
      var show = !!props.message.trim();
      return React.createElement("div", {
        className: "walletconnect-qrcode__notification" + (show ? " notification__show" : "")
      }, props.message);
    }
    var formatQRCodeImage = function(data) {
      try {
        var result = "";
        return Promise.resolve(QRCode.toString(data, {
          margin: 0,
          type: "svg"
        })).then(function(dataString) {
          if (typeof dataString === "string") {
            result = dataString.replace("<svg", '<svg class="walletconnect-qrcode__image"');
          }
          return result;
        });
      } catch (e4) {
        return Promise.reject(e4);
      }
    };
    function QRCodeDisplay(props) {
      var ref = React.useState("");
      var notification = ref[0];
      var setNotification = ref[1];
      var ref$1 = React.useState("");
      var svg = ref$1[0];
      var setSvg = ref$1[1];
      React.useEffect(function() {
        try {
          return Promise.resolve(formatQRCodeImage(props.uri)).then(function(_formatQRCodeImage) {
            setSvg(_formatQRCodeImage);
          });
        } catch (e4) {
          Promise.reject(e4);
        }
      }, []);
      var copyToClipboard = function() {
        var success = copy(props.uri);
        if (success) {
          setNotification(props.text.copied_to_clipboard);
          setInterval(function() {
            return setNotification("");
          }, 1200);
        } else {
          setNotification("Error");
          setInterval(function() {
            return setNotification("");
          }, 1200);
        }
      };
      return React.createElement("div", null, React.createElement("p", {
        id: WALLETCONNECT_CTA_TEXT_ID,
        className: "walletconnect-qrcode__text"
      }, props.text.scan_qrcode_with_wallet), React.createElement("div", {
        dangerouslySetInnerHTML: {
          __html: svg
        }
      }), React.createElement("div", {
        className: "walletconnect-modal__footer"
      }, React.createElement("a", {
        onClick: copyToClipboard
      }, props.text.copy_to_clipboard)), React.createElement(Notification, {
        message: notification
      }));
    }
    function Modal(props) {
      var android = browserUtils.isAndroid();
      var mobile = browserUtils.isMobile();
      var whitelist = mobile ? props.qrcodeModalOptions && props.qrcodeModalOptions.mobileLinks ? props.qrcodeModalOptions.mobileLinks : void 0 : props.qrcodeModalOptions && props.qrcodeModalOptions.desktopLinks ? props.qrcodeModalOptions.desktopLinks : void 0;
      var ref = React.useState(false);
      var loading = ref[0];
      var setLoading = ref[1];
      var ref$1 = React.useState(false);
      var fetched = ref$1[0];
      var setFetched = ref$1[1];
      var ref$2 = React.useState(!mobile);
      var displayQRCode = ref$2[0];
      var setDisplayQRCode = ref$2[1];
      var displayProps = {
        mobile,
        text: props.text,
        uri: props.uri,
        qrcodeModalOptions: props.qrcodeModalOptions
      };
      var ref$3 = React.useState("");
      var singleLinkHref = ref$3[0];
      var setSingleLinkHref = ref$3[1];
      var ref$4 = React.useState(false);
      var hasSingleLink = ref$4[0];
      var setHasSingleLink = ref$4[1];
      var ref$5 = React.useState([]);
      var links = ref$5[0];
      var setLinks = ref$5[1];
      var ref$6 = React.useState("");
      var errorMessage = ref$6[0];
      var setErrorMessage = ref$6[1];
      var getLinksIfNeeded = function() {
        if (fetched || loading || whitelist && !whitelist.length || links.length > 0) {
          return;
        }
        React.useEffect(function() {
          var initLinks = function() {
            try {
              if (android) {
                return Promise.resolve();
              }
              setLoading(true);
              var _temp = _catch(function() {
                var url = props.qrcodeModalOptions && props.qrcodeModalOptions.registryUrl ? props.qrcodeModalOptions.registryUrl : browserUtils.getWalletRegistryUrl();
                return Promise.resolve(fetch(url)).then(function(registryResponse) {
                  return Promise.resolve(registryResponse.json()).then(function(_registryResponse$jso) {
                    var registry = _registryResponse$jso.listings;
                    var platform = mobile ? "mobile" : "desktop";
                    var _links = browserUtils.getMobileLinkRegistry(browserUtils.formatMobileRegistry(registry, platform), whitelist);
                    setLoading(false);
                    setFetched(true);
                    setErrorMessage(!_links.length ? props.text.no_supported_wallets : "");
                    setLinks(_links);
                    var hasSingleLink2 = _links.length === 1;
                    if (hasSingleLink2) {
                      setSingleLinkHref(browserUtils.formatIOSMobile(props.uri, _links[0]));
                      setDisplayQRCode(true);
                    }
                    setHasSingleLink(hasSingleLink2);
                  });
                });
              }, function(e4) {
                setLoading(false);
                setFetched(true);
                setErrorMessage(props.text.something_went_wrong);
                console.error(e4);
              });
              return Promise.resolve(_temp && _temp.then ? _temp.then(function() {
              }) : void 0);
            } catch (e4) {
              return Promise.reject(e4);
            }
          };
          initLinks();
        });
      };
      getLinksIfNeeded();
      var rightSelected = mobile ? displayQRCode : !displayQRCode;
      return React.createElement("div", {
        id: WALLETCONNECT_MODAL_ID,
        className: "walletconnect-qrcode__base animated fadeIn"
      }, React.createElement("div", {
        className: "walletconnect-modal__base"
      }, React.createElement(Header, {
        onClose: props.onClose
      }), hasSingleLink && displayQRCode ? React.createElement("div", {
        className: "walletconnect-modal__single_wallet"
      }, React.createElement("a", {
        onClick: function() {
          return browserUtils.saveMobileLinkInfo({
            name: links[0].name,
            href: singleLinkHref
          });
        },
        href: singleLinkHref,
        rel: "noopener noreferrer",
        target: "_blank"
      }, props.text.connect_with + " " + (hasSingleLink ? links[0].name : "") + " ›")) : android || loading || !loading && links.length ? React.createElement("div", {
        className: "walletconnect-modal__mobile__toggle" + (rightSelected ? " right__selected" : "")
      }, React.createElement("div", {
        className: "walletconnect-modal__mobile__toggle_selector"
      }), mobile ? React.createElement(React.Fragment, null, React.createElement("a", {
        onClick: function() {
          return setDisplayQRCode(false), getLinksIfNeeded();
        }
      }, props.text.mobile), React.createElement("a", {
        onClick: function() {
          return setDisplayQRCode(true);
        }
      }, props.text.qrcode)) : React.createElement(React.Fragment, null, React.createElement("a", {
        onClick: function() {
          return setDisplayQRCode(true);
        }
      }, props.text.qrcode), React.createElement("a", {
        onClick: function() {
          return setDisplayQRCode(false), getLinksIfNeeded();
        }
      }, props.text.desktop))) : null, React.createElement("div", null, displayQRCode || !android && !loading && !links.length ? React.createElement(QRCodeDisplay, Object.assign({}, displayProps)) : React.createElement(LinkDisplay, Object.assign(
        {},
        displayProps,
        {
          links,
          errorMessage
        }
      )))));
    }
    var de4 = {
      choose_preferred_wallet: "Wähle bevorzugte Wallet",
      connect_mobile_wallet: "Verbinde mit Mobile Wallet",
      scan_qrcode_with_wallet: "Scanne den QR-code mit einer WalletConnect kompatiblen Wallet",
      connect: "Verbinden",
      qrcode: "QR-Code",
      mobile: "Mobile",
      desktop: "Desktop",
      copy_to_clipboard: "In die Zwischenablage kopieren",
      copied_to_clipboard: "In die Zwischenablage kopiert!",
      connect_with: "Verbinden mit Hilfe von",
      loading: "Laden...",
      something_went_wrong: "Etwas ist schief gelaufen",
      no_supported_wallets: "Es gibt noch keine unterstützten Wallet",
      no_wallets_found: "keine Wallet gefunden"
    };
    var en4 = {
      choose_preferred_wallet: "Choose your preferred wallet",
      connect_mobile_wallet: "Connect to Mobile Wallet",
      scan_qrcode_with_wallet: "Scan QR code with a WalletConnect-compatible wallet",
      connect: "Connect",
      qrcode: "QR Code",
      mobile: "Mobile",
      desktop: "Desktop",
      copy_to_clipboard: "Copy to clipboard",
      copied_to_clipboard: "Copied to clipboard!",
      connect_with: "Connect with",
      loading: "Loading...",
      something_went_wrong: "Something went wrong",
      no_supported_wallets: "There are no supported wallets yet",
      no_wallets_found: "No wallets found"
    };
    var es2 = {
      choose_preferred_wallet: "Elige tu billetera preferida",
      connect_mobile_wallet: "Conectar a billetera móvil",
      scan_qrcode_with_wallet: "Escanea el código QR con una billetera compatible con WalletConnect",
      connect: "Conectar",
      qrcode: "Código QR",
      mobile: "Móvil",
      desktop: "Desktop",
      copy_to_clipboard: "Copiar",
      copied_to_clipboard: "Copiado!",
      connect_with: "Conectar mediante",
      loading: "Cargando...",
      something_went_wrong: "Algo salió mal",
      no_supported_wallets: "Todavía no hay billeteras compatibles",
      no_wallets_found: "No se encontraron billeteras"
    };
    var fr4 = {
      choose_preferred_wallet: "Choisissez votre portefeuille préféré",
      connect_mobile_wallet: "Se connecter au portefeuille mobile",
      scan_qrcode_with_wallet: "Scannez le QR code avec un portefeuille compatible WalletConnect",
      connect: "Se connecter",
      qrcode: "QR Code",
      mobile: "Mobile",
      desktop: "Desktop",
      copy_to_clipboard: "Copier",
      copied_to_clipboard: "Copié!",
      connect_with: "Connectez-vous à l'aide de",
      loading: "Chargement...",
      something_went_wrong: "Quelque chose a mal tourné",
      no_supported_wallets: "Il n'y a pas encore de portefeuilles pris en charge",
      no_wallets_found: "Aucun portefeuille trouvé"
    };
    var ko3 = {
      choose_preferred_wallet: "원하는 지갑을 선택하세요",
      connect_mobile_wallet: "모바일 지갑과 연결",
      scan_qrcode_with_wallet: "WalletConnect 지원 지갑에서 QR코드를 스캔하세요",
      connect: "연결",
      qrcode: "QR 코드",
      mobile: "모바일",
      desktop: "데스크탑",
      copy_to_clipboard: "클립보드에 복사",
      copied_to_clipboard: "클립보드에 복사되었습니다!",
      connect_with: "와 연결하다",
      loading: "로드 중...",
      something_went_wrong: "문제가 발생했습니다.",
      no_supported_wallets: "아직 지원되는 지갑이 없습니다",
      no_wallets_found: "지갑을 찾을 수 없습니다"
    };
    var pt3 = {
      choose_preferred_wallet: "Escolha sua carteira preferida",
      connect_mobile_wallet: "Conectar-se à carteira móvel",
      scan_qrcode_with_wallet: "Ler o código QR com uma carteira compatível com WalletConnect",
      connect: "Conectar",
      qrcode: "Código QR",
      mobile: "Móvel",
      desktop: "Desktop",
      copy_to_clipboard: "Copiar",
      copied_to_clipboard: "Copiado!",
      connect_with: "Ligar por meio de",
      loading: "Carregamento...",
      something_went_wrong: "Algo correu mal",
      no_supported_wallets: "Ainda não há carteiras suportadas",
      no_wallets_found: "Nenhuma carteira encontrada"
    };
    var zh = {
      choose_preferred_wallet: "选择你的钱包",
      connect_mobile_wallet: "连接至移动端钱包",
      scan_qrcode_with_wallet: "使用兼容 WalletConnect 的钱包扫描二维码",
      connect: "连接",
      qrcode: "二维码",
      mobile: "移动",
      desktop: "桌面",
      copy_to_clipboard: "复制到剪贴板",
      copied_to_clipboard: "复制到剪贴板成功！",
      connect_with: "通过以下方式连接",
      loading: "正在加载...",
      something_went_wrong: "出了问题",
      no_supported_wallets: "目前还没有支持的钱包",
      no_wallets_found: "没有找到钱包"
    };
    var fa2 = {
      choose_preferred_wallet: "کیف پول مورد نظر خود را انتخاب کنید",
      connect_mobile_wallet: "به کیف پول موبایل وصل شوید",
      scan_qrcode_with_wallet: "کد QR را با یک کیف پول سازگار با WalletConnect اسکن کنید",
      connect: "اتصال",
      qrcode: "کد QR",
      mobile: "سیار",
      desktop: "دسکتاپ",
      copy_to_clipboard: "کپی به کلیپ بورد",
      copied_to_clipboard: "در کلیپ بورد کپی شد!",
      connect_with: "ارتباط با",
      loading: "...بارگذاری",
      something_went_wrong: "مشکلی پیش آمد",
      no_supported_wallets: "هنوز هیچ کیف پول پشتیبانی شده ای وجود ندارد",
      no_wallets_found: "هیچ کیف پولی پیدا نشد"
    };
    var languages = {
      de: de4,
      en: en4,
      es: es2,
      fr: fr4,
      ko: ko3,
      pt: pt3,
      zh,
      fa: fa2
    };
    function injectStyleSheet() {
      var doc = browserUtils.getDocumentOrThrow();
      var prev = doc.getElementById(WALLETCONNECT_STYLE_ID);
      if (prev) {
        doc.head.removeChild(prev);
      }
      var style = doc.createElement("style");
      style.setAttribute("id", WALLETCONNECT_STYLE_ID);
      style.innerText = WALLETCONNECT_STYLE_SHEET;
      doc.head.appendChild(style);
    }
    function renderWrapper() {
      var doc = browserUtils.getDocumentOrThrow();
      var wrapper = doc.createElement("div");
      wrapper.setAttribute("id", WALLETCONNECT_WRAPPER_ID);
      doc.body.appendChild(wrapper);
      return wrapper;
    }
    function triggerCloseAnimation() {
      var doc = browserUtils.getDocumentOrThrow();
      var modal = doc.getElementById(WALLETCONNECT_MODAL_ID);
      if (modal) {
        modal.className = modal.className.replace("fadeIn", "fadeOut");
        setTimeout(function() {
          var wrapper = doc.getElementById(WALLETCONNECT_WRAPPER_ID);
          if (wrapper) {
            doc.body.removeChild(wrapper);
          }
        }, ANIMATION_DURATION);
      }
    }
    function getWrappedCallback(cb) {
      return function() {
        triggerCloseAnimation();
        if (cb) {
          cb();
        }
      };
    }
    function getText() {
      var lang = browserUtils.getNavigatorOrThrow().language.split("-")[0] || "en";
      return languages[lang] || languages["en"];
    }
    function open$1(uri, cb, qrcodeModalOptions) {
      injectStyleSheet();
      var wrapper = renderWrapper();
      React.render(React.createElement(Modal, {
        text: getText(),
        uri,
        onClose: getWrappedCallback(cb),
        qrcodeModalOptions
      }), wrapper);
    }
    function close$1() {
      triggerCloseAnimation();
    }
    var isNode3 = function() {
      return typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined";
    };
    function open$2(uri, cb, qrcodeModalOptions) {
      console.log(uri);
      if (isNode3()) {
        open(uri);
      } else {
        open$1(uri, cb, qrcodeModalOptions);
      }
    }
    function close$2() {
      if (isNode3()) ;
      else {
        close$1();
      }
    }
    var index = {
      open: open$2,
      close: close$2
    };
    module.exports = index;
  }
});

// node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __assign: () => __assign,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __read: () => __read,
  __rest: () => __rest,
  __spread: () => __spread,
  __spreadArrays: () => __spreadArrays2,
  __values: () => __values
});
function __extends(d6, b6) {
  extendStatics(d6, b6);
  function __() {
    this.constructor = d6;
  }
  d6.prototype = b6 === null ? Object.create(b6) : (__.prototype = b6.prototype, new __());
}
function __rest(s5, e4) {
  var t3 = {};
  for (var p6 in s5) if (Object.prototype.hasOwnProperty.call(s5, p6) && e4.indexOf(p6) < 0)
    t3[p6] = s5[p6];
  if (s5 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i6 = 0, p6 = Object.getOwnPropertySymbols(s5); i6 < p6.length; i6++) {
      if (e4.indexOf(p6[i6]) < 0 && Object.prototype.propertyIsEnumerable.call(s5, p6[i6]))
        t3[p6[i6]] = s5[p6[i6]];
    }
  return t3;
}
function __decorate(decorators, target, key, desc) {
  var c8 = arguments.length, r5 = c8 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d6;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r5 = Reflect.decorate(decorators, target, key, desc);
  else for (var i6 = decorators.length - 1; i6 >= 0; i6--) if (d6 = decorators[i6]) r5 = (c8 < 3 ? d6(r5) : c8 > 3 ? d6(target, key, r5) : d6(target, key)) || r5;
  return c8 > 3 && r5 && Object.defineProperty(target, key, r5), r5;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P6, generator) {
  function adopt(value) {
    return value instanceof P6 ? value : new P6(function(resolve) {
      resolve(value);
    });
  }
  return new (P6 || (P6 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e4) {
        reject(e4);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e4) {
        reject(e4);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _6 = { label: 0, sent: function() {
    if (t3[0] & 1) throw t3[1];
    return t3[1];
  }, trys: [], ops: [] }, f8, y7, t3, g5;
  return g5 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g5[Symbol.iterator] = function() {
    return this;
  }), g5;
  function verb(n7) {
    return function(v8) {
      return step([n7, v8]);
    };
  }
  function step(op) {
    if (f8) throw new TypeError("Generator is already executing.");
    while (_6) try {
      if (f8 = 1, y7 && (t3 = op[0] & 2 ? y7["return"] : op[0] ? y7["throw"] || ((t3 = y7["return"]) && t3.call(y7), 0) : y7.next) && !(t3 = t3.call(y7, op[1])).done) return t3;
      if (y7 = 0, t3) op = [op[0] & 2, t3.value];
      switch (op[0]) {
        case 0:
        case 1:
          t3 = op;
          break;
        case 4:
          _6.label++;
          return { value: op[1], done: false };
        case 5:
          _6.label++;
          y7 = op[1];
          op = [0];
          continue;
        case 7:
          op = _6.ops.pop();
          _6.trys.pop();
          continue;
        default:
          if (!(t3 = _6.trys, t3 = t3.length > 0 && t3[t3.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _6 = 0;
            continue;
          }
          if (op[0] === 3 && (!t3 || op[1] > t3[0] && op[1] < t3[3])) {
            _6.label = op[1];
            break;
          }
          if (op[0] === 6 && _6.label < t3[1]) {
            _6.label = t3[1];
            t3 = op;
            break;
          }
          if (t3 && _6.label < t3[2]) {
            _6.label = t3[2];
            _6.ops.push(op);
            break;
          }
          if (t3[2]) _6.ops.pop();
          _6.trys.pop();
          continue;
      }
      op = body.call(thisArg, _6);
    } catch (e4) {
      op = [6, e4];
      y7 = 0;
    } finally {
      f8 = t3 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding(o6, m5, k8, k22) {
  if (k22 === void 0) k22 = k8;
  o6[k22] = m5[k8];
}
function __exportStar(m5, exports) {
  for (var p6 in m5) if (p6 !== "default" && !exports.hasOwnProperty(p6)) exports[p6] = m5[p6];
}
function __values(o6) {
  var s5 = typeof Symbol === "function" && Symbol.iterator, m5 = s5 && o6[s5], i6 = 0;
  if (m5) return m5.call(o6);
  if (o6 && typeof o6.length === "number") return {
    next: function() {
      if (o6 && i6 >= o6.length) o6 = void 0;
      return { value: o6 && o6[i6++], done: !o6 };
    }
  };
  throw new TypeError(s5 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o6, n7) {
  var m5 = typeof Symbol === "function" && o6[Symbol.iterator];
  if (!m5) return o6;
  var i6 = m5.call(o6), r5, ar4 = [], e4;
  try {
    while ((n7 === void 0 || n7-- > 0) && !(r5 = i6.next()).done) ar4.push(r5.value);
  } catch (error) {
    e4 = { error };
  } finally {
    try {
      if (r5 && !r5.done && (m5 = i6["return"])) m5.call(i6);
    } finally {
      if (e4) throw e4.error;
    }
  }
  return ar4;
}
function __spread() {
  for (var ar4 = [], i6 = 0; i6 < arguments.length; i6++)
    ar4 = ar4.concat(__read(arguments[i6]));
  return ar4;
}
function __spreadArrays2() {
  for (var s5 = 0, i6 = 0, il = arguments.length; i6 < il; i6++) s5 += arguments[i6].length;
  for (var r5 = Array(s5), k8 = 0, i6 = 0; i6 < il; i6++)
    for (var a5 = arguments[i6], j5 = 0, jl = a5.length; j5 < jl; j5++, k8++)
      r5[k8] = a5[j5];
  return r5;
}
function __await(v8) {
  return this instanceof __await ? (this.v = v8, this) : new __await(v8);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g5 = generator.apply(thisArg, _arguments || []), i6, q4 = [];
  return i6 = {}, verb("next"), verb("throw"), verb("return"), i6[Symbol.asyncIterator] = function() {
    return this;
  }, i6;
  function verb(n7) {
    if (g5[n7]) i6[n7] = function(v8) {
      return new Promise(function(a5, b6) {
        q4.push([n7, v8, a5, b6]) > 1 || resume(n7, v8);
      });
    };
  }
  function resume(n7, v8) {
    try {
      step(g5[n7](v8));
    } catch (e4) {
      settle(q4[0][3], e4);
    }
  }
  function step(r5) {
    r5.value instanceof __await ? Promise.resolve(r5.value.v).then(fulfill, reject) : settle(q4[0][2], r5);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f8, v8) {
    if (f8(v8), q4.shift(), q4.length) resume(q4[0][0], q4[0][1]);
  }
}
function __asyncDelegator(o6) {
  var i6, p6;
  return i6 = {}, verb("next"), verb("throw", function(e4) {
    throw e4;
  }), verb("return"), i6[Symbol.iterator] = function() {
    return this;
  }, i6;
  function verb(n7, f8) {
    i6[n7] = o6[n7] ? function(v8) {
      return (p6 = !p6) ? { value: __await(o6[n7](v8)), done: n7 === "return" } : f8 ? f8(v8) : v8;
    } : f8;
  }
}
function __asyncValues(o6) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m5 = o6[Symbol.asyncIterator], i6;
  return m5 ? m5.call(o6) : (o6 = typeof __values === "function" ? __values(o6) : o6[Symbol.iterator](), i6 = {}, verb("next"), verb("throw"), verb("return"), i6[Symbol.asyncIterator] = function() {
    return this;
  }, i6);
  function verb(n7) {
    i6[n7] = o6[n7] && function(v8) {
      return new Promise(function(resolve, reject) {
        v8 = o6[n7](v8), settle(resolve, reject, v8.done, v8.value);
      });
    };
  }
  function settle(resolve, reject, d6, v8) {
    Promise.resolve(v8).then(function(v9) {
      resolve({ value: v9, done: d6 });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k8 in mod) if (Object.hasOwnProperty.call(mod, k8)) result[k8] = mod[k8];
  }
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var import_dist34, import_dist35, import_dist36, extendStatics, __assign;
var init_tslib_es6 = __esm({
  "node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js"() {
    import_dist34 = __toESM(require_dist());
    import_dist35 = __toESM(require_dist2());
    import_dist36 = __toESM(require_dist3());
    extendStatics = function(d6, b6) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d7, b7) {
        d7.__proto__ = b7;
      } || function(d7, b7) {
        for (var p6 in b7) if (b7.hasOwnProperty(p6)) d7[p6] = b7[p6];
      };
      return extendStatics(d6, b6);
    };
    __assign = function() {
      __assign = Object.assign || function __assign3(t3) {
        for (var s5, i6 = 1, n7 = arguments.length; i6 < n7; i6++) {
          s5 = arguments[i6];
          for (var p6 in s5) if (Object.prototype.hasOwnProperty.call(s5, p6)) t3[p6] = s5[p6];
        }
        return t3;
      };
      return __assign.apply(this, arguments);
    };
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/delay.js
var require_delay = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/delay.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.delay = void 0;
    function delay(timeout) {
      return new Promise((resolve) => {
        setTimeout(() => {
          resolve(true);
        }, timeout);
      });
    }
    exports.delay = delay;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/misc.js
var require_misc = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/misc.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;
    exports.ONE_HUNDRED = 100;
    exports.ONE_THOUSAND = 1e3;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/time.js
var require_time = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/time.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;
    exports.ONE_SECOND = 1;
    exports.FIVE_SECONDS = 5;
    exports.TEN_SECONDS = 10;
    exports.THIRTY_SECONDS = 30;
    exports.SIXTY_SECONDS = 60;
    exports.ONE_MINUTE = exports.SIXTY_SECONDS;
    exports.FIVE_MINUTES = exports.ONE_MINUTE * 5;
    exports.TEN_MINUTES = exports.ONE_MINUTE * 10;
    exports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;
    exports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;
    exports.ONE_HOUR = exports.SIXTY_MINUTES;
    exports.THREE_HOURS = exports.ONE_HOUR * 3;
    exports.SIX_HOURS = exports.ONE_HOUR * 6;
    exports.TWELVE_HOURS = exports.ONE_HOUR * 12;
    exports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;
    exports.ONE_DAY = exports.TWENTY_FOUR_HOURS;
    exports.THREE_DAYS = exports.ONE_DAY * 3;
    exports.FIVE_DAYS = exports.ONE_DAY * 5;
    exports.SEVEN_DAYS = exports.ONE_DAY * 7;
    exports.THIRTY_DAYS = exports.ONE_DAY * 30;
    exports.ONE_WEEK = exports.SEVEN_DAYS;
    exports.TWO_WEEKS = exports.ONE_WEEK * 2;
    exports.THREE_WEEKS = exports.ONE_WEEK * 3;
    exports.FOUR_WEEKS = exports.ONE_WEEK * 4;
    exports.ONE_YEAR = exports.ONE_DAY * 365;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/index.js
var require_constants = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/index.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_misc(), exports);
    tslib_1.__exportStar(require_time(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/convert.js
var require_convert = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/convert.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromMiliseconds = exports.toMiliseconds = void 0;
    var constants_1 = require_constants();
    function toMiliseconds(seconds) {
      return seconds * constants_1.ONE_THOUSAND;
    }
    exports.toMiliseconds = toMiliseconds;
    function fromMiliseconds(miliseconds) {
      return Math.floor(miliseconds / constants_1.ONE_THOUSAND);
    }
    exports.fromMiliseconds = fromMiliseconds;
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/index.js
var require_utils3 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/index.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_delay(), exports);
    tslib_1.__exportStar(require_convert(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/watch.js
var require_watch = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/watch.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Watch = void 0;
    var Watch = class {
      constructor() {
        this.timestamps = /* @__PURE__ */ new Map();
      }
      start(label) {
        if (this.timestamps.has(label)) {
          throw new Error(`Watch already started for label: ${label}`);
        }
        this.timestamps.set(label, { started: Date.now() });
      }
      stop(label) {
        const timestamp = this.get(label);
        if (typeof timestamp.elapsed !== "undefined") {
          throw new Error(`Watch already stopped for label: ${label}`);
        }
        const elapsed = Date.now() - timestamp.started;
        this.timestamps.set(label, { started: timestamp.started, elapsed });
      }
      get(label) {
        const timestamp = this.timestamps.get(label);
        if (typeof timestamp === "undefined") {
          throw new Error(`No timestamp found for label: ${label}`);
        }
        return timestamp;
      }
      elapsed(label) {
        const timestamp = this.get(label);
        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;
        return elapsed;
      }
    };
    exports.Watch = Watch;
    exports.default = Watch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/watch.js
var require_watch2 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/watch.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IWatch = void 0;
    var IWatch = class {
    };
    exports.IWatch = IWatch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/index.js
var require_types = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/index.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_watch2(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/index.js
var require_cjs4 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/index.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_utils3(), exports);
    tslib_1.__exportStar(require_watch(), exports);
    tslib_1.__exportStar(require_types(), exports);
    tslib_1.__exportStar(require_constants(), exports);
  }
});

// node_modules/quick-format-unescaped/index.js
var require_quick_format_unescaped = __commonJS({
  "node_modules/quick-format-unescaped/index.js"(exports, module) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    function tryStringify(o6) {
      try {
        return JSON.stringify(o6);
      } catch (e4) {
        return '"[Circular]"';
      }
    }
    module.exports = format;
    function format(f8, args, opts) {
      var ss = opts && opts.stringify || tryStringify;
      var offset = 1;
      if (typeof f8 === "object" && f8 !== null) {
        var len = args.length + offset;
        if (len === 1) return f8;
        var objects = new Array(len);
        objects[0] = ss(f8);
        for (var index = 1; index < len; index++) {
          objects[index] = ss(args[index]);
        }
        return objects.join(" ");
      }
      if (typeof f8 !== "string") {
        return f8;
      }
      var argLen = args.length;
      if (argLen === 0) return f8;
      var str = "";
      var a5 = 1 - offset;
      var lastPos = -1;
      var flen = f8 && f8.length || 0;
      for (var i6 = 0; i6 < flen; ) {
        if (f8.charCodeAt(i6) === 37 && i6 + 1 < flen) {
          lastPos = lastPos > -1 ? lastPos : 0;
          switch (f8.charCodeAt(i6 + 1)) {
            case 100:
            // 'd'
            case 102:
              if (a5 >= argLen)
                break;
              if (args[a5] == null) break;
              if (lastPos < i6)
                str += f8.slice(lastPos, i6);
              str += Number(args[a5]);
              lastPos = i6 + 2;
              i6++;
              break;
            case 105:
              if (a5 >= argLen)
                break;
              if (args[a5] == null) break;
              if (lastPos < i6)
                str += f8.slice(lastPos, i6);
              str += Math.floor(Number(args[a5]));
              lastPos = i6 + 2;
              i6++;
              break;
            case 79:
            // 'O'
            case 111:
            // 'o'
            case 106:
              if (a5 >= argLen)
                break;
              if (args[a5] === void 0) break;
              if (lastPos < i6)
                str += f8.slice(lastPos, i6);
              var type = typeof args[a5];
              if (type === "string") {
                str += "'" + args[a5] + "'";
                lastPos = i6 + 2;
                i6++;
                break;
              }
              if (type === "function") {
                str += args[a5].name || "<anonymous>";
                lastPos = i6 + 2;
                i6++;
                break;
              }
              str += ss(args[a5]);
              lastPos = i6 + 2;
              i6++;
              break;
            case 115:
              if (a5 >= argLen)
                break;
              if (lastPos < i6)
                str += f8.slice(lastPos, i6);
              str += String(args[a5]);
              lastPos = i6 + 2;
              i6++;
              break;
            case 37:
              if (lastPos < i6)
                str += f8.slice(lastPos, i6);
              str += "%";
              lastPos = i6 + 2;
              i6++;
              a5--;
              break;
          }
          ++a5;
        }
        ++i6;
      }
      if (lastPos === -1)
        return f8;
      else if (lastPos < flen) {
        str += f8.slice(lastPos);
      }
      return str;
    }
  }
});

// node_modules/pino/browser.js
var require_browser2 = __commonJS({
  "node_modules/pino/browser.js"(exports, module) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var format = require_quick_format_unescaped();
    module.exports = pino;
    var _console = pfGlobalThisOrFallback().console || {};
    var stdSerializers = {
      mapHttpRequest: mock,
      mapHttpResponse: mock,
      wrapRequestSerializer: passthrough,
      wrapResponseSerializer: passthrough,
      wrapErrorSerializer: passthrough,
      req: mock,
      res: mock,
      err: asErrValue
    };
    function shouldSerialize(serialize, serializers) {
      if (Array.isArray(serialize)) {
        const hasToFilter = serialize.filter(function(k8) {
          return k8 !== "!stdSerializers.err";
        });
        return hasToFilter;
      } else if (serialize === true) {
        return Object.keys(serializers);
      }
      return false;
    }
    function pino(opts) {
      opts = opts || {};
      opts.browser = opts.browser || {};
      const transmit2 = opts.browser.transmit;
      if (transmit2 && typeof transmit2.send !== "function") {
        throw Error("pino: transmit option must have a send function");
      }
      const proto = opts.browser.write || _console;
      if (opts.browser.write) opts.browser.asObject = true;
      const serializers = opts.serializers || {};
      const serialize = shouldSerialize(opts.browser.serialize, serializers);
      let stdErrSerialize = opts.browser.serialize;
      if (Array.isArray(opts.browser.serialize) && opts.browser.serialize.indexOf("!stdSerializers.err") > -1) stdErrSerialize = false;
      const levels = ["error", "fatal", "warn", "info", "debug", "trace"];
      if (typeof proto === "function") {
        proto.error = proto.fatal = proto.warn = proto.info = proto.debug = proto.trace = proto;
      }
      if (opts.enabled === false) opts.level = "silent";
      const level = opts.level || "info";
      const logger = Object.create(proto);
      if (!logger.log) logger.log = noop;
      Object.defineProperty(logger, "levelVal", {
        get: getLevelVal
      });
      Object.defineProperty(logger, "level", {
        get: getLevel,
        set: setLevel
      });
      const setOpts = {
        transmit: transmit2,
        serialize,
        asObject: opts.browser.asObject,
        levels,
        timestamp: getTimeFunction(opts)
      };
      logger.levels = pino.levels;
      logger.level = level;
      logger.setMaxListeners = logger.getMaxListeners = logger.emit = logger.addListener = logger.on = logger.prependListener = logger.once = logger.prependOnceListener = logger.removeListener = logger.removeAllListeners = logger.listeners = logger.listenerCount = logger.eventNames = logger.write = logger.flush = noop;
      logger.serializers = serializers;
      logger._serialize = serialize;
      logger._stdErrSerialize = stdErrSerialize;
      logger.child = child;
      if (transmit2) logger._logEvent = createLogEventShape();
      function getLevelVal() {
        return this.level === "silent" ? Infinity : this.levels.values[this.level];
      }
      function getLevel() {
        return this._level;
      }
      function setLevel(level2) {
        if (level2 !== "silent" && !this.levels.values[level2]) {
          throw Error("unknown level " + level2);
        }
        this._level = level2;
        set2(setOpts, logger, "error", "log");
        set2(setOpts, logger, "fatal", "error");
        set2(setOpts, logger, "warn", "error");
        set2(setOpts, logger, "info", "log");
        set2(setOpts, logger, "debug", "log");
        set2(setOpts, logger, "trace", "log");
      }
      function child(bindings, childOptions) {
        if (!bindings) {
          throw new Error("missing bindings for child Pino");
        }
        childOptions = childOptions || {};
        if (serialize && bindings.serializers) {
          childOptions.serializers = bindings.serializers;
        }
        const childOptionsSerializers = childOptions.serializers;
        if (serialize && childOptionsSerializers) {
          var childSerializers = Object.assign({}, serializers, childOptionsSerializers);
          var childSerialize = opts.browser.serialize === true ? Object.keys(childSerializers) : serialize;
          delete bindings.serializers;
          applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize);
        }
        function Child(parent) {
          this._childLevel = (parent._childLevel | 0) + 1;
          this.error = bind(parent, bindings, "error");
          this.fatal = bind(parent, bindings, "fatal");
          this.warn = bind(parent, bindings, "warn");
          this.info = bind(parent, bindings, "info");
          this.debug = bind(parent, bindings, "debug");
          this.trace = bind(parent, bindings, "trace");
          if (childSerializers) {
            this.serializers = childSerializers;
            this._serialize = childSerialize;
          }
          if (transmit2) {
            this._logEvent = createLogEventShape(
              [].concat(parent._logEvent.bindings, bindings)
            );
          }
        }
        Child.prototype = this;
        return new Child(this);
      }
      return logger;
    }
    pino.levels = {
      values: {
        fatal: 60,
        error: 50,
        warn: 40,
        info: 30,
        debug: 20,
        trace: 10
      },
      labels: {
        10: "trace",
        20: "debug",
        30: "info",
        40: "warn",
        50: "error",
        60: "fatal"
      }
    };
    pino.stdSerializers = stdSerializers;
    pino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime });
    function set2(opts, logger, level, fallback2) {
      const proto = Object.getPrototypeOf(logger);
      logger[level] = logger.levelVal > logger.levels.values[level] ? noop : proto[level] ? proto[level] : _console[level] || _console[fallback2] || noop;
      wrap(opts, logger, level);
    }
    function wrap(opts, logger, level) {
      if (!opts.transmit && logger[level] === noop) return;
      logger[level] = /* @__PURE__ */ function(write) {
        return function LOG() {
          const ts2 = opts.timestamp();
          const args = new Array(arguments.length);
          const proto = Object.getPrototypeOf && Object.getPrototypeOf(this) === _console ? _console : this;
          for (var i6 = 0; i6 < args.length; i6++) args[i6] = arguments[i6];
          if (opts.serialize && !opts.asObject) {
            applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize);
          }
          if (opts.asObject) write.call(proto, asObject(this, level, args, ts2));
          else write.apply(proto, args);
          if (opts.transmit) {
            const transmitLevel = opts.transmit.level || logger.level;
            const transmitValue = pino.levels.values[transmitLevel];
            const methodValue = pino.levels.values[level];
            if (methodValue < transmitValue) return;
            transmit(this, {
              ts: ts2,
              methodLevel: level,
              methodValue,
              transmitLevel,
              transmitValue: pino.levels.values[opts.transmit.level || logger.level],
              send: opts.transmit.send,
              val: logger.levelVal
            }, args);
          }
        };
      }(logger[level]);
    }
    function asObject(logger, level, args, ts2) {
      if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize);
      const argsCloned = args.slice();
      let msg = argsCloned[0];
      const o6 = {};
      if (ts2) {
        o6.time = ts2;
      }
      o6.level = pino.levels.values[level];
      let lvl = (logger._childLevel | 0) + 1;
      if (lvl < 1) lvl = 1;
      if (msg !== null && typeof msg === "object") {
        while (lvl-- && typeof argsCloned[0] === "object") {
          Object.assign(o6, argsCloned.shift());
        }
        msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : void 0;
      } else if (typeof msg === "string") msg = format(argsCloned.shift(), argsCloned);
      if (msg !== void 0) o6.msg = msg;
      return o6;
    }
    function applySerializers(args, serialize, serializers, stdErrSerialize) {
      for (const i6 in args) {
        if (stdErrSerialize && args[i6] instanceof Error) {
          args[i6] = pino.stdSerializers.err(args[i6]);
        } else if (typeof args[i6] === "object" && !Array.isArray(args[i6])) {
          for (const k8 in args[i6]) {
            if (serialize && serialize.indexOf(k8) > -1 && k8 in serializers) {
              args[i6][k8] = serializers[k8](args[i6][k8]);
            }
          }
        }
      }
    }
    function bind(parent, bindings, level) {
      return function() {
        const args = new Array(1 + arguments.length);
        args[0] = bindings;
        for (var i6 = 1; i6 < args.length; i6++) {
          args[i6] = arguments[i6 - 1];
        }
        return parent[level].apply(this, args);
      };
    }
    function transmit(logger, opts, args) {
      const send = opts.send;
      const ts2 = opts.ts;
      const methodLevel = opts.methodLevel;
      const methodValue = opts.methodValue;
      const val = opts.val;
      const bindings = logger._logEvent.bindings;
      applySerializers(
        args,
        logger._serialize || Object.keys(logger.serializers),
        logger.serializers,
        logger._stdErrSerialize === void 0 ? true : logger._stdErrSerialize
      );
      logger._logEvent.ts = ts2;
      logger._logEvent.messages = args.filter(function(arg) {
        return bindings.indexOf(arg) === -1;
      });
      logger._logEvent.level.label = methodLevel;
      logger._logEvent.level.value = methodValue;
      send(methodLevel, logger._logEvent, val);
      logger._logEvent = createLogEventShape(bindings);
    }
    function createLogEventShape(bindings) {
      return {
        ts: 0,
        messages: [],
        bindings: bindings || [],
        level: { label: "", value: 0 }
      };
    }
    function asErrValue(err) {
      const obj = {
        type: err.constructor.name,
        msg: err.message,
        stack: err.stack
      };
      for (const key in err) {
        if (obj[key] === void 0) {
          obj[key] = err[key];
        }
      }
      return obj;
    }
    function getTimeFunction(opts) {
      if (typeof opts.timestamp === "function") {
        return opts.timestamp;
      }
      if (opts.timestamp === false) {
        return nullTime;
      }
      return epochTime;
    }
    function mock() {
      return {};
    }
    function passthrough(a5) {
      return a5;
    }
    function noop() {
    }
    function nullTime() {
      return false;
    }
    function epochTime() {
      return Date.now();
    }
    function unixTime() {
      return Math.round(Date.now() / 1e3);
    }
    function isoTime() {
      return new Date(Date.now()).toISOString();
    }
    function pfGlobalThisOrFallback() {
      function defd(o6) {
        return typeof o6 !== "undefined" && o6;
      }
      try {
        if (typeof globalThis !== "undefined") return globalThis;
        Object.defineProperty(Object.prototype, "globalThis", {
          get: function() {
            delete Object.prototype.globalThis;
            return this.globalThis = this;
          },
          configurable: true
        });
        return globalThis;
      } catch (e4) {
        return defd(self) || defd(window) || defd(this) || {};
      }
    }
  }
});

// node_modules/@walletconnect/utils/node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs5 = __commonJS({
  "node_modules/@walletconnect/utils/node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow3(name2) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name2] !== "undefined") {
        res = window[name2];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow3;
    function getFromWindowOrThrow3(name2) {
      const res = getFromWindow3(name2);
      if (!res) {
        throw new Error(`${name2} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow3;
    function getDocumentOrThrow3() {
      return getFromWindowOrThrow3("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow3;
    function getDocument3() {
      return getFromWindow3("document");
    }
    exports.getDocument = getDocument3;
    function getNavigatorOrThrow3() {
      return getFromWindowOrThrow3("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow3;
    function getNavigator3() {
      return getFromWindow3("navigator");
    }
    exports.getNavigator = getNavigator3;
    function getLocationOrThrow3() {
      return getFromWindowOrThrow3("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow3;
    function getLocation3() {
      return getFromWindow3("location");
    }
    exports.getLocation = getLocation3;
    function getCryptoOrThrow3() {
      return getFromWindowOrThrow3("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow3;
    function getCrypto3() {
      return getFromWindow3("crypto");
    }
    exports.getCrypto = getCrypto3;
    function getLocalStorageOrThrow3() {
      return getFromWindowOrThrow3("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow3;
    function getLocalStorage3() {
      return getFromWindow3("localStorage");
    }
    exports.getLocalStorage = getLocalStorage3;
  }
});

// node_modules/@walletconnect/utils/node_modules/@walletconnect/window-metadata/dist/cjs/index.js
var require_cjs6 = __commonJS({
  "node_modules/@walletconnect/utils/node_modules/@walletconnect/window-metadata/dist/cjs/index.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWindowMetadata = void 0;
    var window_getters_1 = require_cjs5();
    function getWindowMetadata2() {
      let doc;
      let loc;
      try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
      } catch (e4) {
        return null;
      }
      function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons2 = [];
        for (let i6 = 0; i6 < links.length; i6++) {
          const link = links[i6];
          const rel = link.getAttribute("rel");
          if (rel) {
            if (rel.toLowerCase().indexOf("icon") > -1) {
              const href = link.getAttribute("href");
              if (href) {
                if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
                  let absoluteHref = loc.protocol + "//" + loc.host;
                  if (href.indexOf("/") === 0) {
                    absoluteHref += href;
                  } else {
                    const path = loc.pathname.split("/");
                    path.pop();
                    const finalPath = path.join("/");
                    absoluteHref += finalPath + "/" + href;
                  }
                  icons2.push(absoluteHref);
                } else if (href.indexOf("//") === 0) {
                  const absoluteUrl = loc.protocol + href;
                  icons2.push(absoluteUrl);
                } else {
                  icons2.push(href);
                }
              }
            }
          }
        }
        return icons2;
      }
      function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i6 = 0; i6 < metaTags.length; i6++) {
          const tag = metaTags[i6];
          const attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => {
            if (attr) {
              return args.includes(attr);
            }
            return false;
          });
          if (attributes.length && attributes) {
            const content = tag.getAttribute("content");
            if (content) {
              return content;
            }
          }
        }
        return "";
      }
      function getName() {
        let name3 = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name3) {
          name3 = doc.title;
        }
        return name3;
      }
      function getDescription() {
        const description2 = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description2;
      }
      const name2 = getName();
      const description = getDescription();
      const url = loc.origin;
      const icons = getIcons();
      const meta = {
        description,
        url,
        icons,
        name: name2
      };
      return meta;
    }
    exports.getWindowMetadata = getWindowMetadata2;
  }
});

// node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js
var tslib_es6_exports2 = {};
__export(tslib_es6_exports2, {
  __assign: () => __assign2,
  __asyncDelegator: () => __asyncDelegator2,
  __asyncGenerator: () => __asyncGenerator2,
  __asyncValues: () => __asyncValues2,
  __await: () => __await2,
  __awaiter: () => __awaiter2,
  __classPrivateFieldGet: () => __classPrivateFieldGet2,
  __classPrivateFieldSet: () => __classPrivateFieldSet2,
  __createBinding: () => __createBinding2,
  __decorate: () => __decorate2,
  __exportStar: () => __exportStar2,
  __extends: () => __extends2,
  __generator: () => __generator2,
  __importDefault: () => __importDefault2,
  __importStar: () => __importStar2,
  __makeTemplateObject: () => __makeTemplateObject2,
  __metadata: () => __metadata2,
  __param: () => __param2,
  __read: () => __read2,
  __rest: () => __rest2,
  __spread: () => __spread2,
  __spreadArrays: () => __spreadArrays3,
  __values: () => __values2
});
function __extends2(d6, b6) {
  extendStatics2(d6, b6);
  function __() {
    this.constructor = d6;
  }
  d6.prototype = b6 === null ? Object.create(b6) : (__.prototype = b6.prototype, new __());
}
function __rest2(s5, e4) {
  var t3 = {};
  for (var p6 in s5) if (Object.prototype.hasOwnProperty.call(s5, p6) && e4.indexOf(p6) < 0)
    t3[p6] = s5[p6];
  if (s5 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i6 = 0, p6 = Object.getOwnPropertySymbols(s5); i6 < p6.length; i6++) {
      if (e4.indexOf(p6[i6]) < 0 && Object.prototype.propertyIsEnumerable.call(s5, p6[i6]))
        t3[p6[i6]] = s5[p6[i6]];
    }
  return t3;
}
function __decorate2(decorators, target, key, desc) {
  var c8 = arguments.length, r5 = c8 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d6;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r5 = Reflect.decorate(decorators, target, key, desc);
  else for (var i6 = decorators.length - 1; i6 >= 0; i6--) if (d6 = decorators[i6]) r5 = (c8 < 3 ? d6(r5) : c8 > 3 ? d6(target, key, r5) : d6(target, key)) || r5;
  return c8 > 3 && r5 && Object.defineProperty(target, key, r5), r5;
}
function __param2(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata2(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter2(thisArg, _arguments, P6, generator) {
  function adopt(value) {
    return value instanceof P6 ? value : new P6(function(resolve) {
      resolve(value);
    });
  }
  return new (P6 || (P6 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e4) {
        reject(e4);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e4) {
        reject(e4);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator2(thisArg, body) {
  var _6 = { label: 0, sent: function() {
    if (t3[0] & 1) throw t3[1];
    return t3[1];
  }, trys: [], ops: [] }, f8, y7, t3, g5;
  return g5 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g5[Symbol.iterator] = function() {
    return this;
  }), g5;
  function verb(n7) {
    return function(v8) {
      return step([n7, v8]);
    };
  }
  function step(op) {
    if (f8) throw new TypeError("Generator is already executing.");
    while (_6) try {
      if (f8 = 1, y7 && (t3 = op[0] & 2 ? y7["return"] : op[0] ? y7["throw"] || ((t3 = y7["return"]) && t3.call(y7), 0) : y7.next) && !(t3 = t3.call(y7, op[1])).done) return t3;
      if (y7 = 0, t3) op = [op[0] & 2, t3.value];
      switch (op[0]) {
        case 0:
        case 1:
          t3 = op;
          break;
        case 4:
          _6.label++;
          return { value: op[1], done: false };
        case 5:
          _6.label++;
          y7 = op[1];
          op = [0];
          continue;
        case 7:
          op = _6.ops.pop();
          _6.trys.pop();
          continue;
        default:
          if (!(t3 = _6.trys, t3 = t3.length > 0 && t3[t3.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _6 = 0;
            continue;
          }
          if (op[0] === 3 && (!t3 || op[1] > t3[0] && op[1] < t3[3])) {
            _6.label = op[1];
            break;
          }
          if (op[0] === 6 && _6.label < t3[1]) {
            _6.label = t3[1];
            t3 = op;
            break;
          }
          if (t3 && _6.label < t3[2]) {
            _6.label = t3[2];
            _6.ops.push(op);
            break;
          }
          if (t3[2]) _6.ops.pop();
          _6.trys.pop();
          continue;
      }
      op = body.call(thisArg, _6);
    } catch (e4) {
      op = [6, e4];
      y7 = 0;
    } finally {
      f8 = t3 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding2(o6, m5, k8, k22) {
  if (k22 === void 0) k22 = k8;
  o6[k22] = m5[k8];
}
function __exportStar2(m5, exports) {
  for (var p6 in m5) if (p6 !== "default" && !exports.hasOwnProperty(p6)) exports[p6] = m5[p6];
}
function __values2(o6) {
  var s5 = typeof Symbol === "function" && Symbol.iterator, m5 = s5 && o6[s5], i6 = 0;
  if (m5) return m5.call(o6);
  if (o6 && typeof o6.length === "number") return {
    next: function() {
      if (o6 && i6 >= o6.length) o6 = void 0;
      return { value: o6 && o6[i6++], done: !o6 };
    }
  };
  throw new TypeError(s5 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read2(o6, n7) {
  var m5 = typeof Symbol === "function" && o6[Symbol.iterator];
  if (!m5) return o6;
  var i6 = m5.call(o6), r5, ar4 = [], e4;
  try {
    while ((n7 === void 0 || n7-- > 0) && !(r5 = i6.next()).done) ar4.push(r5.value);
  } catch (error) {
    e4 = { error };
  } finally {
    try {
      if (r5 && !r5.done && (m5 = i6["return"])) m5.call(i6);
    } finally {
      if (e4) throw e4.error;
    }
  }
  return ar4;
}
function __spread2() {
  for (var ar4 = [], i6 = 0; i6 < arguments.length; i6++)
    ar4 = ar4.concat(__read2(arguments[i6]));
  return ar4;
}
function __spreadArrays3() {
  for (var s5 = 0, i6 = 0, il = arguments.length; i6 < il; i6++) s5 += arguments[i6].length;
  for (var r5 = Array(s5), k8 = 0, i6 = 0; i6 < il; i6++)
    for (var a5 = arguments[i6], j5 = 0, jl = a5.length; j5 < jl; j5++, k8++)
      r5[k8] = a5[j5];
  return r5;
}
function __await2(v8) {
  return this instanceof __await2 ? (this.v = v8, this) : new __await2(v8);
}
function __asyncGenerator2(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g5 = generator.apply(thisArg, _arguments || []), i6, q4 = [];
  return i6 = {}, verb("next"), verb("throw"), verb("return"), i6[Symbol.asyncIterator] = function() {
    return this;
  }, i6;
  function verb(n7) {
    if (g5[n7]) i6[n7] = function(v8) {
      return new Promise(function(a5, b6) {
        q4.push([n7, v8, a5, b6]) > 1 || resume(n7, v8);
      });
    };
  }
  function resume(n7, v8) {
    try {
      step(g5[n7](v8));
    } catch (e4) {
      settle(q4[0][3], e4);
    }
  }
  function step(r5) {
    r5.value instanceof __await2 ? Promise.resolve(r5.value.v).then(fulfill, reject) : settle(q4[0][2], r5);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f8, v8) {
    if (f8(v8), q4.shift(), q4.length) resume(q4[0][0], q4[0][1]);
  }
}
function __asyncDelegator2(o6) {
  var i6, p6;
  return i6 = {}, verb("next"), verb("throw", function(e4) {
    throw e4;
  }), verb("return"), i6[Symbol.iterator] = function() {
    return this;
  }, i6;
  function verb(n7, f8) {
    i6[n7] = o6[n7] ? function(v8) {
      return (p6 = !p6) ? { value: __await2(o6[n7](v8)), done: n7 === "return" } : f8 ? f8(v8) : v8;
    } : f8;
  }
}
function __asyncValues2(o6) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m5 = o6[Symbol.asyncIterator], i6;
  return m5 ? m5.call(o6) : (o6 = typeof __values2 === "function" ? __values2(o6) : o6[Symbol.iterator](), i6 = {}, verb("next"), verb("throw"), verb("return"), i6[Symbol.asyncIterator] = function() {
    return this;
  }, i6);
  function verb(n7) {
    i6[n7] = o6[n7] && function(v8) {
      return new Promise(function(resolve, reject) {
        v8 = o6[n7](v8), settle(resolve, reject, v8.done, v8.value);
      });
    };
  }
  function settle(resolve, reject, d6, v8) {
    Promise.resolve(v8).then(function(v9) {
      resolve({ value: v9, done: d6 });
    }, reject);
  }
}
function __makeTemplateObject2(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar2(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k8 in mod) if (Object.hasOwnProperty.call(mod, k8)) result[k8] = mod[k8];
  }
  result.default = mod;
  return result;
}
function __importDefault2(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet2(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet2(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var import_dist955, import_dist956, import_dist957, extendStatics2, __assign2;
var init_tslib_es62 = __esm({
  "node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js"() {
    import_dist955 = __toESM(require_dist());
    import_dist956 = __toESM(require_dist2());
    import_dist957 = __toESM(require_dist3());
    extendStatics2 = function(d6, b6) {
      extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d7, b7) {
        d7.__proto__ = b7;
      } || function(d7, b7) {
        for (var p6 in b7) if (b7.hasOwnProperty(p6)) d7[p6] = b7[p6];
      };
      return extendStatics2(d6, b6);
    };
    __assign2 = function() {
      __assign2 = Object.assign || function __assign3(t3) {
        for (var s5, i6 = 1, n7 = arguments.length; i6 < n7; i6++) {
          s5 = arguments[i6];
          for (var p6 in s5) if (Object.prototype.hasOwnProperty.call(s5, p6)) t3[p6] = s5[p6];
        }
        return t3;
      };
      return __assign2.apply(this, arguments);
    };
  }
});

// node_modules/@walletconnect/environment/dist/cjs/crypto.js
var require_crypto = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/crypto.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;
    function getBrowerCrypto() {
      return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};
    }
    exports.getBrowerCrypto = getBrowerCrypto;
    function getSubtleCrypto() {
      const browserCrypto = getBrowerCrypto();
      return browserCrypto.subtle || browserCrypto.webkitSubtle;
    }
    exports.getSubtleCrypto = getSubtleCrypto;
    function isBrowserCryptoAvailable() {
      return !!getBrowerCrypto() && !!getSubtleCrypto();
    }
    exports.isBrowserCryptoAvailable = isBrowserCryptoAvailable;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/env.js
var require_env = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/env.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowser = exports.isNode = exports.isReactNative = void 0;
    function isReactNative() {
      return typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative";
    }
    exports.isReactNative = isReactNative;
    function isNode3() {
      return typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined";
    }
    exports.isNode = isNode3;
    function isBrowser2() {
      return !isReactNative() && !isNode3();
    }
    exports.isBrowser = isBrowser2;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/index.js
var require_cjs7 = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/index.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es62(), __toCommonJS(tslib_es6_exports2));
    tslib_1.__exportStar(require_crypto(), exports);
    tslib_1.__exportStar(require_env(), exports);
  }
});

// node_modules/ws/browser.js
var require_browser3 = __commonJS({
  "node_modules/ws/browser.js"(exports, module) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    module.exports = function() {
      throw new Error(
        "ws does not work in the browser. Browser clients must use the native WebSocket object"
      );
    };
  }
});

// node_modules/@walletconnect/core/node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs8 = __commonJS({
  "node_modules/@walletconnect/core/node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow3(name2) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name2] !== "undefined") {
        res = window[name2];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow3;
    function getFromWindowOrThrow3(name2) {
      const res = getFromWindow3(name2);
      if (!res) {
        throw new Error(`${name2} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow3;
    function getDocumentOrThrow3() {
      return getFromWindowOrThrow3("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow3;
    function getDocument3() {
      return getFromWindow3("document");
    }
    exports.getDocument = getDocument3;
    function getNavigatorOrThrow3() {
      return getFromWindowOrThrow3("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow3;
    function getNavigator3() {
      return getFromWindow3("navigator");
    }
    exports.getNavigator = getNavigator3;
    function getLocationOrThrow3() {
      return getFromWindowOrThrow3("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow3;
    function getLocation3() {
      return getFromWindow3("location");
    }
    exports.getLocation = getLocation3;
    function getCryptoOrThrow3() {
      return getFromWindowOrThrow3("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow3;
    function getCrypto3() {
      return getFromWindow3("crypto");
    }
    exports.getCrypto = getCrypto3;
    function getLocalStorageOrThrow3() {
      return getFromWindowOrThrow3("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow3;
    function getLocalStorage3() {
      return getFromWindow3("localStorage");
    }
    exports.getLocalStorage = getLocalStorage3;
  }
});

// node_modules/@jnwng/walletconnect-solana/node_modules/base-x/src/index.js
var require_src = __commonJS({
  "node_modules/@jnwng/walletconnect-solana/node_modules/base-x/src/index.js"(exports, module) {
    "use strict";
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    function base3(ALPHABET) {
      if (ALPHABET.length >= 255) {
        throw new TypeError("Alphabet too long");
      }
      var BASE_MAP = new Uint8Array(256);
      for (var j5 = 0; j5 < BASE_MAP.length; j5++) {
        BASE_MAP[j5] = 255;
      }
      for (var i6 = 0; i6 < ALPHABET.length; i6++) {
        var x6 = ALPHABET.charAt(i6);
        var xc2 = x6.charCodeAt(0);
        if (BASE_MAP[xc2] !== 255) {
          throw new TypeError(x6 + " is ambiguous");
        }
        BASE_MAP[xc2] = i6;
      }
      var BASE = ALPHABET.length;
      var LEADER = ALPHABET.charAt(0);
      var FACTOR = Math.log(BASE) / Math.log(256);
      var iFACTOR = Math.log(256) / Math.log(BASE);
      function encode8(source) {
        if (source instanceof Uint8Array) {
        } else if (ArrayBuffer.isView(source)) {
          source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
        } else if (Array.isArray(source)) {
          source = Uint8Array.from(source);
        }
        if (!(source instanceof Uint8Array)) {
          throw new TypeError("Expected Uint8Array");
        }
        if (source.length === 0) {
          return "";
        }
        var zeroes = 0;
        var length2 = 0;
        var pbegin = 0;
        var pend = source.length;
        while (pbegin !== pend && source[pbegin] === 0) {
          pbegin++;
          zeroes++;
        }
        var size4 = (pend - pbegin) * iFACTOR + 1 >>> 0;
        var b58 = new Uint8Array(size4);
        while (pbegin !== pend) {
          var carry = source[pbegin];
          var i7 = 0;
          for (var it1 = size4 - 1; (carry !== 0 || i7 < length2) && it1 !== -1; it1--, i7++) {
            carry += 256 * b58[it1] >>> 0;
            b58[it1] = carry % BASE >>> 0;
            carry = carry / BASE >>> 0;
          }
          if (carry !== 0) {
            throw new Error("Non-zero carry");
          }
          length2 = i7;
          pbegin++;
        }
        var it22 = size4 - length2;
        while (it22 !== size4 && b58[it22] === 0) {
          it22++;
        }
        var str = LEADER.repeat(zeroes);
        for (; it22 < size4; ++it22) {
          str += ALPHABET.charAt(b58[it22]);
        }
        return str;
      }
      function decodeUnsafe(source) {
        if (typeof source !== "string") {
          throw new TypeError("Expected String");
        }
        if (source.length === 0) {
          return new Uint8Array();
        }
        var psz = 0;
        var zeroes = 0;
        var length2 = 0;
        while (source[psz] === LEADER) {
          zeroes++;
          psz++;
        }
        var size4 = (source.length - psz) * FACTOR + 1 >>> 0;
        var b256 = new Uint8Array(size4);
        while (source[psz]) {
          var charCode = source.charCodeAt(psz);
          if (charCode > 255) {
            return;
          }
          var carry = BASE_MAP[charCode];
          if (carry === 255) {
            return;
          }
          var i7 = 0;
          for (var it3 = size4 - 1; (carry !== 0 || i7 < length2) && it3 !== -1; it3--, i7++) {
            carry += BASE * b256[it3] >>> 0;
            b256[it3] = carry % 256 >>> 0;
            carry = carry / 256 >>> 0;
          }
          if (carry !== 0) {
            throw new Error("Non-zero carry");
          }
          length2 = i7;
          psz++;
        }
        var it4 = size4 - length2;
        while (it4 !== size4 && b256[it4] === 0) {
          it4++;
        }
        var vch = new Uint8Array(zeroes + (size4 - it4));
        var j6 = zeroes;
        while (it4 !== size4) {
          vch[j6++] = b256[it4++];
        }
        return vch;
      }
      function decode7(string2) {
        var buffer = decodeUnsafe(string2);
        if (buffer) {
          return buffer;
        }
        throw new Error("Non-base" + BASE + " character");
      }
      return {
        encode: encode8,
        decodeUnsafe,
        decode: decode7
      };
    }
    module.exports = base3;
  }
});

// node_modules/@jnwng/walletconnect-solana/node_modules/bs58/index.js
var require_bs58 = __commonJS({
  "node_modules/@jnwng/walletconnect-solana/node_modules/bs58/index.js"(exports, module) {
    var import_dist1009 = __toESM(require_dist());
    var import_dist1010 = __toESM(require_dist2());
    var import_dist1011 = __toESM(require_dist3());
    var basex = require_src();
    var ALPHABET = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
    module.exports = basex(ALPHABET);
  }
});

// node_modules/@jnwng/walletconnect-solana/lib/esm/index.js
var import_dist1006 = __toESM(require_dist());
var import_dist1007 = __toESM(require_dist2());
var import_dist1008 = __toESM(require_dist3());

// node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js
var import_dist1003 = __toESM(require_dist(), 1);
var import_dist1004 = __toESM(require_dist2(), 1);
var import_dist1005 = __toESM(require_dist3(), 1);
init_index_browser_esm();
var import_qrcode_modal = __toESM(require_cjs3(), 1);

// node_modules/@walletconnect/sign-client/dist/index.es.js
var import_dist997 = __toESM(require_dist());
var import_dist998 = __toESM(require_dist2());
var import_dist999 = __toESM(require_dist3());

// node_modules/@walletconnect/core/dist/index.es.js
var import_dist991 = __toESM(require_dist());
var import_dist992 = __toESM(require_dist2());
var import_dist993 = __toESM(require_dist3());
var import_events7 = __toESM(require_events());

// node_modules/@walletconnect/heartbeat/dist/index.es.js
var import_dist43 = __toESM(require_dist());
var import_dist44 = __toESM(require_dist2());
var import_dist45 = __toESM(require_dist3());
var import_events = __toESM(require_events());
var import_time = __toESM(require_cjs4());

// node_modules/@walletconnect/events/dist/esm/index.js
var import_dist40 = __toESM(require_dist());
var import_dist41 = __toESM(require_dist2());
var import_dist42 = __toESM(require_dist3());

// node_modules/@walletconnect/events/dist/esm/events.js
var import_dist37 = __toESM(require_dist());
var import_dist38 = __toESM(require_dist2());
var import_dist39 = __toESM(require_dist3());
var IEvents = class {
};

// node_modules/@walletconnect/heartbeat/dist/index.es.js
var n2 = class extends IEvents {
  constructor(e4) {
    super();
  }
};
var s3 = import_time.FIVE_SECONDS;
var r3 = { pulse: "heartbeat_pulse" };
var i3 = class _i3 extends n2 {
  constructor(e4) {
    super(e4), this.events = new import_events.EventEmitter(), this.interval = s3, this.interval = (e4 == null ? void 0 : e4.interval) || s3;
  }
  static async init(e4) {
    const t3 = new _i3(e4);
    return await t3.init(), t3;
  }
  async init() {
    await this.initialize();
  }
  stop() {
    clearInterval(this.intervalRef);
  }
  on(e4, t3) {
    this.events.on(e4, t3);
  }
  once(e4, t3) {
    this.events.once(e4, t3);
  }
  off(e4, t3) {
    this.events.off(e4, t3);
  }
  removeListener(e4, t3) {
    this.events.removeListener(e4, t3);
  }
  async initialize() {
    this.intervalRef = setInterval(() => this.pulse(), (0, import_time.toMiliseconds)(this.interval));
  }
  pulse() {
    this.events.emit(r3.pulse);
  }
};

// node_modules/@walletconnect/keyvaluestorage/dist/index.es.js
var import_dist61 = __toESM(require_dist());
var import_dist62 = __toESM(require_dist2());
var import_dist63 = __toESM(require_dist3());

// node_modules/unstorage/dist/index.mjs
var import_dist52 = __toESM(require_dist(), 1);
var import_dist53 = __toESM(require_dist2(), 1);
var import_dist54 = __toESM(require_dist3(), 1);

// node_modules/destr/dist/index.mjs
var import_dist46 = __toESM(require_dist(), 1);
var import_dist47 = __toESM(require_dist2(), 1);
var import_dist48 = __toESM(require_dist3(), 1);
var suspectProtoRx = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/;
var suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
var JsonSigRx = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
function jsonParseTransform(key, value) {
  if (key === "__proto__" || key === "constructor" && value && typeof value === "object" && "prototype" in value) {
    warnKeyDropped(key);
    return;
  }
  return value;
}
function warnKeyDropped(key) {
  console.warn(`[destr] Dropping "${key}" key to prevent prototype pollution.`);
}
function destr(value, options = {}) {
  if (typeof value !== "string") {
    return value;
  }
  if (value[0] === '"' && value[value.length - 1] === '"' && value.indexOf("\\") === -1) {
    return value.slice(1, -1);
  }
  const _value = value.trim();
  if (_value.length <= 9) {
    switch (_value.toLowerCase()) {
      case "true": {
        return true;
      }
      case "false": {
        return false;
      }
      case "undefined": {
        return void 0;
      }
      case "null": {
        return null;
      }
      case "nan": {
        return Number.NaN;
      }
      case "infinity": {
        return Number.POSITIVE_INFINITY;
      }
      case "-infinity": {
        return Number.NEGATIVE_INFINITY;
      }
    }
  }
  if (!JsonSigRx.test(value)) {
    if (options.strict) {
      throw new SyntaxError("[destr] Invalid JSON");
    }
    return value;
  }
  try {
    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {
      if (options.strict) {
        throw new Error("[destr] Possible prototype pollution");
      }
      return JSON.parse(value, jsonParseTransform);
    }
    return JSON.parse(value);
  } catch (error) {
    if (options.strict) {
      throw error;
    }
    return value;
  }
}

// node_modules/unstorage/dist/shared/unstorage.mNKHTF5Y.mjs
var import_dist49 = __toESM(require_dist(), 1);
var import_dist50 = __toESM(require_dist2(), 1);
var import_dist51 = __toESM(require_dist3(), 1);
function wrapToPromise(value) {
  if (!value || typeof value.then !== "function") {
    return Promise.resolve(value);
  }
  return value;
}
function asyncCall(function_, ...arguments_) {
  try {
    return wrapToPromise(function_(...arguments_));
  } catch (error) {
    return Promise.reject(error);
  }
}
function isPrimitive(value) {
  const type = typeof value;
  return value === null || type !== "object" && type !== "function";
}
function isPureObject(value) {
  const proto = Object.getPrototypeOf(value);
  return !proto || proto.isPrototypeOf(Object);
}
function stringify(value) {
  if (isPrimitive(value)) {
    return String(value);
  }
  if (isPureObject(value) || Array.isArray(value)) {
    return JSON.stringify(value);
  }
  if (typeof value.toJSON === "function") {
    return stringify(value.toJSON());
  }
  throw new Error("[unstorage] Cannot stringify value!");
}
var BASE64_PREFIX = "base64:";
function serializeRaw(value) {
  if (typeof value === "string") {
    return value;
  }
  return BASE64_PREFIX + base64Encode(value);
}
function deserializeRaw(value) {
  if (typeof value !== "string") {
    return value;
  }
  if (!value.startsWith(BASE64_PREFIX)) {
    return value;
  }
  return base64Decode(value.slice(BASE64_PREFIX.length));
}
function base64Decode(input) {
  if (globalThis.Buffer) {
    return Buffer.from(input, "base64");
  }
  return Uint8Array.from(
    globalThis.atob(input),
    (c8) => c8.codePointAt(0)
  );
}
function base64Encode(input) {
  if (globalThis.Buffer) {
    return Buffer.from(input).toString("base64");
  }
  return globalThis.btoa(String.fromCodePoint(...input));
}
function normalizeKey(key) {
  var _a;
  if (!key) {
    return "";
  }
  return ((_a = key.split("?")[0]) == null ? void 0 : _a.replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "")) || "";
}
function joinKeys(...keys2) {
  return normalizeKey(keys2.join(":"));
}
function normalizeBaseKey(base3) {
  base3 = normalizeKey(base3);
  return base3 ? base3 + ":" : "";
}
function filterKeyByDepth(key, depth) {
  if (depth === void 0) {
    return true;
  }
  let substrCount = 0;
  let index = key.indexOf(":");
  while (index > -1) {
    substrCount++;
    index = key.indexOf(":", index + 1);
  }
  return substrCount <= depth;
}
function filterKeyByBase(key, base3) {
  if (base3) {
    return key.startsWith(base3) && key[key.length - 1] !== "$";
  }
  return key[key.length - 1] !== "$";
}

// node_modules/unstorage/dist/index.mjs
function defineDriver(factory) {
  return factory;
}
var DRIVER_NAME = "memory";
var memory = defineDriver(() => {
  const data = /* @__PURE__ */ new Map();
  return {
    name: DRIVER_NAME,
    getInstance: () => data,
    hasItem(key) {
      return data.has(key);
    },
    getItem(key) {
      return data.get(key) ?? null;
    },
    getItemRaw(key) {
      return data.get(key) ?? null;
    },
    setItem(key, value) {
      data.set(key, value);
    },
    setItemRaw(key, value) {
      data.set(key, value);
    },
    removeItem(key) {
      data.delete(key);
    },
    getKeys() {
      return [...data.keys()];
    },
    clear() {
      data.clear();
    },
    dispose() {
      data.clear();
    }
  };
});
function createStorage(options = {}) {
  const context = {
    mounts: { "": options.driver || memory() },
    mountpoints: [""],
    watching: false,
    watchListeners: [],
    unwatch: {}
  };
  const getMount = (key) => {
    for (const base3 of context.mountpoints) {
      if (key.startsWith(base3)) {
        return {
          base: base3,
          relativeKey: key.slice(base3.length),
          driver: context.mounts[base3]
        };
      }
    }
    return {
      base: "",
      relativeKey: key,
      driver: context.mounts[""]
    };
  };
  const getMounts = (base3, includeParent) => {
    return context.mountpoints.filter(
      (mountpoint) => mountpoint.startsWith(base3) || includeParent && base3.startsWith(mountpoint)
    ).map((mountpoint) => ({
      relativeBase: base3.length > mountpoint.length ? base3.slice(mountpoint.length) : void 0,
      mountpoint,
      driver: context.mounts[mountpoint]
    }));
  };
  const onChange = (event, key) => {
    if (!context.watching) {
      return;
    }
    key = normalizeKey(key);
    for (const listener of context.watchListeners) {
      listener(event, key);
    }
  };
  const startWatch = async () => {
    if (context.watching) {
      return;
    }
    context.watching = true;
    for (const mountpoint in context.mounts) {
      context.unwatch[mountpoint] = await watch(
        context.mounts[mountpoint],
        onChange,
        mountpoint
      );
    }
  };
  const stopWatch = async () => {
    if (!context.watching) {
      return;
    }
    for (const mountpoint in context.unwatch) {
      await context.unwatch[mountpoint]();
    }
    context.unwatch = {};
    context.watching = false;
  };
  const runBatch = (items, commonOptions, cb) => {
    const batches = /* @__PURE__ */ new Map();
    const getBatch = (mount) => {
      let batch = batches.get(mount.base);
      if (!batch) {
        batch = {
          driver: mount.driver,
          base: mount.base,
          items: []
        };
        batches.set(mount.base, batch);
      }
      return batch;
    };
    for (const item of items) {
      const isStringItem = typeof item === "string";
      const key = normalizeKey(isStringItem ? item : item.key);
      const value = isStringItem ? void 0 : item.value;
      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };
      const mount = getMount(key);
      getBatch(mount).items.push({
        key,
        value,
        relativeKey: mount.relativeKey,
        options: options2
      });
    }
    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(
      (r5) => r5.flat()
    );
  };
  const storage = {
    // Item
    hasItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.hasItem, relativeKey, opts);
    },
    getItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => destr(value)
      );
    },
    getItems(items, commonOptions = {}) {
      return runBatch(items, commonOptions, (batch) => {
        if (batch.driver.getItems) {
          return asyncCall(
            batch.driver.getItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              options: item.options
            })),
            commonOptions
          ).then(
            (r5) => r5.map((item) => ({
              key: joinKeys(batch.base, item.key),
              value: destr(item.value)
            }))
          );
        }
        return Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.getItem,
              item.relativeKey,
              item.options
            ).then((value) => ({
              key: item.key,
              value: destr(value)
            }));
          })
        );
      });
    },
    getItemRaw(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.getItemRaw) {
        return asyncCall(driver.getItemRaw, relativeKey, opts);
      }
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => deserializeRaw(value)
      );
    },
    async setItem(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.setItem) {
        return;
      }
      await asyncCall(driver.setItem, relativeKey, stringify(value), opts);
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async setItems(items, commonOptions) {
      await runBatch(items, commonOptions, async (batch) => {
        if (batch.driver.setItems) {
          return asyncCall(
            batch.driver.setItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              value: stringify(item.value),
              options: item.options
            })),
            commonOptions
          );
        }
        if (!batch.driver.setItem) {
          return;
        }
        await Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.setItem,
              item.relativeKey,
              stringify(item.value),
              item.options
            );
          })
        );
      });
    },
    async setItemRaw(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key, opts);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.setItemRaw) {
        await asyncCall(driver.setItemRaw, relativeKey, value, opts);
      } else if (driver.setItem) {
        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);
      } else {
        return;
      }
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async removeItem(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { removeMeta: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.removeItem) {
        return;
      }
      await asyncCall(driver.removeItem, relativeKey, opts);
      if (opts.removeMeta || opts.removeMata) {
        await asyncCall(driver.removeItem, relativeKey + "$", opts);
      }
      if (!driver.watch) {
        onChange("remove", key);
      }
    },
    // Meta
    async getMeta(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { nativeOnly: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      const meta = /* @__PURE__ */ Object.create(null);
      if (driver.getMeta) {
        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));
      }
      if (!opts.nativeOnly) {
        const value = await asyncCall(
          driver.getItem,
          relativeKey + "$",
          opts
        ).then((value_) => destr(value_));
        if (value && typeof value === "object") {
          if (typeof value.atime === "string") {
            value.atime = new Date(value.atime);
          }
          if (typeof value.mtime === "string") {
            value.mtime = new Date(value.mtime);
          }
          Object.assign(meta, value);
        }
      }
      return meta;
    },
    setMeta(key, value, opts = {}) {
      return this.setItem(key + "$", value, opts);
    },
    removeMeta(key, opts = {}) {
      return this.removeItem(key + "$", opts);
    },
    // Keys
    async getKeys(base3, opts = {}) {
      var _a;
      base3 = normalizeBaseKey(base3);
      const mounts = getMounts(base3, true);
      let maskedMounts = [];
      const allKeys = [];
      let allMountsSupportMaxDepth = true;
      for (const mount of mounts) {
        if (!((_a = mount.driver.flags) == null ? void 0 : _a.maxDepth)) {
          allMountsSupportMaxDepth = false;
        }
        const rawKeys = await asyncCall(
          mount.driver.getKeys,
          mount.relativeBase,
          opts
        );
        for (const key of rawKeys) {
          const fullKey = mount.mountpoint + normalizeKey(key);
          if (!maskedMounts.some((p6) => fullKey.startsWith(p6))) {
            allKeys.push(fullKey);
          }
        }
        maskedMounts = [
          mount.mountpoint,
          ...maskedMounts.filter((p6) => !p6.startsWith(mount.mountpoint))
        ];
      }
      const shouldFilterByDepth = opts.maxDepth !== void 0 && !allMountsSupportMaxDepth;
      return allKeys.filter(
        (key) => (!shouldFilterByDepth || filterKeyByDepth(key, opts.maxDepth)) && filterKeyByBase(key, base3)
      );
    },
    // Utils
    async clear(base3, opts = {}) {
      base3 = normalizeBaseKey(base3);
      await Promise.all(
        getMounts(base3, false).map(async (m5) => {
          if (m5.driver.clear) {
            return asyncCall(m5.driver.clear, m5.relativeBase, opts);
          }
          if (m5.driver.removeItem) {
            const keys2 = await m5.driver.getKeys(m5.relativeBase || "", opts);
            return Promise.all(
              keys2.map((key) => m5.driver.removeItem(key, opts))
            );
          }
        })
      );
    },
    async dispose() {
      await Promise.all(
        Object.values(context.mounts).map((driver) => dispose(driver))
      );
    },
    async watch(callback) {
      await startWatch();
      context.watchListeners.push(callback);
      return async () => {
        context.watchListeners = context.watchListeners.filter(
          (listener) => listener !== callback
        );
        if (context.watchListeners.length === 0) {
          await stopWatch();
        }
      };
    },
    async unwatch() {
      context.watchListeners = [];
      await stopWatch();
    },
    // Mount
    mount(base3, driver) {
      base3 = normalizeBaseKey(base3);
      if (base3 && context.mounts[base3]) {
        throw new Error(`already mounted at ${base3}`);
      }
      if (base3) {
        context.mountpoints.push(base3);
        context.mountpoints.sort((a5, b6) => b6.length - a5.length);
      }
      context.mounts[base3] = driver;
      if (context.watching) {
        Promise.resolve(watch(driver, onChange, base3)).then((unwatcher) => {
          context.unwatch[base3] = unwatcher;
        }).catch(console.error);
      }
      return storage;
    },
    async unmount(base3, _dispose = true) {
      var _a, _b;
      base3 = normalizeBaseKey(base3);
      if (!base3 || !context.mounts[base3]) {
        return;
      }
      if (context.watching && base3 in context.unwatch) {
        (_b = (_a = context.unwatch)[base3]) == null ? void 0 : _b.call(_a);
        delete context.unwatch[base3];
      }
      if (_dispose) {
        await dispose(context.mounts[base3]);
      }
      context.mountpoints = context.mountpoints.filter((key) => key !== base3);
      delete context.mounts[base3];
    },
    getMount(key = "") {
      key = normalizeKey(key) + ":";
      const m5 = getMount(key);
      return {
        driver: m5.driver,
        base: m5.base
      };
    },
    getMounts(base3 = "", opts = {}) {
      base3 = normalizeKey(base3);
      const mounts = getMounts(base3, opts.parents);
      return mounts.map((m5) => ({
        driver: m5.driver,
        base: m5.mountpoint
      }));
    },
    // Aliases
    keys: (base3, opts = {}) => storage.getKeys(base3, opts),
    get: (key, opts = {}) => storage.getItem(key, opts),
    set: (key, value, opts = {}) => storage.setItem(key, value, opts),
    has: (key, opts = {}) => storage.hasItem(key, opts),
    del: (key, opts = {}) => storage.removeItem(key, opts),
    remove: (key, opts = {}) => storage.removeItem(key, opts)
  };
  return storage;
}
function watch(driver, onChange, base3) {
  return driver.watch ? driver.watch((event, key) => onChange(event, base3 + key)) : () => {
  };
}
async function dispose(driver) {
  if (typeof driver.dispose === "function") {
    await asyncCall(driver.dispose);
  }
}

// node_modules/idb-keyval/dist/index.js
var import_dist55 = __toESM(require_dist());
var import_dist56 = __toESM(require_dist2());
var import_dist57 = __toESM(require_dist3());
function promisifyRequest(request) {
  return new Promise((resolve, reject) => {
    request.oncomplete = request.onsuccess = () => resolve(request.result);
    request.onabort = request.onerror = () => reject(request.error);
  });
}
function createStore(dbName, storeName) {
  const request = indexedDB.open(dbName);
  request.onupgradeneeded = () => request.result.createObjectStore(storeName);
  const dbp = promisifyRequest(request);
  return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));
}
var defaultGetStoreFunc;
function defaultGetStore() {
  if (!defaultGetStoreFunc) {
    defaultGetStoreFunc = createStore("keyval-store", "keyval");
  }
  return defaultGetStoreFunc;
}
function get(key, customStore = defaultGetStore()) {
  return customStore("readonly", (store) => promisifyRequest(store.get(key)));
}
function set(key, value, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.put(value, key);
    return promisifyRequest(store.transaction);
  });
}
function del(key, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.delete(key);
    return promisifyRequest(store.transaction);
  });
}
function clear(customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.clear();
    return promisifyRequest(store.transaction);
  });
}
function eachCursor(store, callback) {
  store.openCursor().onsuccess = function() {
    if (!this.result)
      return;
    callback(this.result);
    this.result.continue();
  };
  return promisifyRequest(store.transaction);
}
function keys(customStore = defaultGetStore()) {
  return customStore("readonly", (store) => {
    if (store.getAllKeys) {
      return promisifyRequest(store.getAllKeys());
    }
    const items = [];
    return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);
  });
}

// node_modules/@walletconnect/keyvaluestorage/node_modules/@walletconnect/safe-json/dist/esm/index.js
var import_dist58 = __toESM(require_dist());
var import_dist59 = __toESM(require_dist2());
var import_dist60 = __toESM(require_dist3());
var JSONStringify = (data) => JSON.stringify(data, (_6, value) => typeof value === "bigint" ? value.toString() + "n" : value);
var JSONParse = (json) => {
  const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
  const serializedData = json.replace(numbersBiggerThanMaxInt, '$1"$2n"$3');
  return JSON.parse(serializedData, (_6, value) => {
    const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
    if (isCustomFormatBigInt)
      return BigInt(value.substring(0, value.length - 1));
    return value;
  });
};
function safeJsonParse3(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSONParse(value);
  } catch (_a) {
    return value;
  }
}
function safeJsonStringify3(value) {
  return typeof value === "string" ? value : JSONStringify(value) || "";
}

// node_modules/@walletconnect/keyvaluestorage/dist/index.es.js
var x3 = "idb-keyval";
var z3 = (i6 = {}) => {
  const t3 = i6.base && i6.base.length > 0 ? `${i6.base}:` : "", e4 = (s5) => t3 + s5;
  let n7;
  return i6.dbName && i6.storeName && (n7 = createStore(i6.dbName, i6.storeName)), { name: x3, options: i6, async hasItem(s5) {
    return !(typeof await get(e4(s5), n7) > "u");
  }, async getItem(s5) {
    return await get(e4(s5), n7) ?? null;
  }, setItem(s5, a5) {
    return set(e4(s5), a5, n7);
  }, removeItem(s5) {
    return del(e4(s5), n7);
  }, getKeys() {
    return keys(n7);
  }, clear() {
    return clear(n7);
  } };
};
var D3 = "WALLET_CONNECT_V2_INDEXED_DB";
var E4 = "keyvaluestorage";
var _4 = class {
  constructor() {
    this.indexedDb = createStorage({ driver: z3({ dbName: D3, storeName: E4 }) });
  }
  async getKeys() {
    return this.indexedDb.getKeys();
  }
  async getEntries() {
    return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t3) => [t3.key, t3.value]);
  }
  async getItem(t3) {
    const e4 = await this.indexedDb.getItem(t3);
    if (e4 !== null) return e4;
  }
  async setItem(t3, e4) {
    await this.indexedDb.setItem(t3, safeJsonStringify3(e4));
  }
  async removeItem(t3) {
    await this.indexedDb.removeItem(t3);
  }
};
var l4 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var c3 = { exports: {} };
(function() {
  let i6;
  function t3() {
  }
  i6 = t3, i6.prototype.getItem = function(e4) {
    return this.hasOwnProperty(e4) ? String(this[e4]) : null;
  }, i6.prototype.setItem = function(e4, n7) {
    this[e4] = String(n7);
  }, i6.prototype.removeItem = function(e4) {
    delete this[e4];
  }, i6.prototype.clear = function() {
    const e4 = this;
    Object.keys(e4).forEach(function(n7) {
      e4[n7] = void 0, delete e4[n7];
    });
  }, i6.prototype.key = function(e4) {
    return e4 = e4 || 0, Object.keys(this)[e4];
  }, i6.prototype.__defineGetter__("length", function() {
    return Object.keys(this).length;
  }), typeof l4 < "u" && l4.localStorage ? c3.exports = l4.localStorage : typeof window < "u" && window.localStorage ? c3.exports = window.localStorage : c3.exports = new t3();
})();
function k3(i6) {
  var t3;
  return [i6[0], safeJsonParse3((t3 = i6[1]) != null ? t3 : "")];
}
var K2 = class {
  constructor() {
    this.localStorage = c3.exports;
  }
  async getKeys() {
    return Object.keys(this.localStorage);
  }
  async getEntries() {
    return Object.entries(this.localStorage).map(k3);
  }
  async getItem(t3) {
    const e4 = this.localStorage.getItem(t3);
    if (e4 !== null) return safeJsonParse3(e4);
  }
  async setItem(t3, e4) {
    this.localStorage.setItem(t3, safeJsonStringify3(e4));
  }
  async removeItem(t3) {
    this.localStorage.removeItem(t3);
  }
};
var N3 = "wc_storage_version";
var y3 = 1;
var O2 = async (i6, t3, e4) => {
  const n7 = N3, s5 = await t3.getItem(n7);
  if (s5 && s5 >= y3) {
    e4(t3);
    return;
  }
  const a5 = await i6.getKeys();
  if (!a5.length) {
    e4(t3);
    return;
  }
  const m5 = [];
  for (; a5.length; ) {
    const r5 = a5.shift();
    if (!r5) continue;
    const o6 = r5.toLowerCase();
    if (o6.includes("wc@") || o6.includes("walletconnect") || o6.includes("wc_") || o6.includes("wallet_connect")) {
      const f8 = await i6.getItem(r5);
      await t3.setItem(r5, f8), m5.push(r5);
    }
  }
  await t3.setItem(n7, y3), e4(t3), j3(i6, m5);
};
var j3 = async (i6, t3) => {
  t3.length && t3.forEach(async (e4) => {
    await i6.removeItem(e4);
  });
};
var h3 = class {
  constructor() {
    this.initialized = false, this.setInitialized = (e4) => {
      this.storage = e4, this.initialized = true;
    };
    const t3 = new K2();
    this.storage = t3;
    try {
      const e4 = new _4();
      O2(t3, e4, this.setInitialized);
    } catch {
      this.initialized = true;
    }
  }
  async getKeys() {
    return await this.initialize(), this.storage.getKeys();
  }
  async getEntries() {
    return await this.initialize(), this.storage.getEntries();
  }
  async getItem(t3) {
    return await this.initialize(), this.storage.getItem(t3);
  }
  async setItem(t3, e4) {
    return await this.initialize(), this.storage.setItem(t3, e4);
  }
  async removeItem(t3) {
    return await this.initialize(), this.storage.removeItem(t3);
  }
  async initialize() {
    this.initialized || await new Promise((t3) => {
      const e4 = setInterval(() => {
        this.initialized && (clearInterval(e4), t3());
      }, 20);
    });
  }
};

// node_modules/@walletconnect/logger/dist/index.es.js
var import_dist67 = __toESM(require_dist());
var import_dist68 = __toESM(require_dist2());
var import_dist69 = __toESM(require_dist3());
var import_pino = __toESM(require_browser2());
var import_pino2 = __toESM(require_browser2());

// node_modules/@walletconnect/logger/node_modules/@walletconnect/safe-json/dist/esm/index.js
var import_dist64 = __toESM(require_dist());
var import_dist65 = __toESM(require_dist2());
var import_dist66 = __toESM(require_dist3());
var JSONStringify2 = (data) => JSON.stringify(data, (_6, value) => typeof value === "bigint" ? value.toString() + "n" : value);
function safeJsonStringify4(value) {
  return typeof value === "string" ? value : JSONStringify2(value) || "";
}

// node_modules/@walletconnect/logger/dist/index.es.js
var c4 = { level: "info" };
var n3 = "custom_context";
var l5 = 1e3 * 1024;
var O3 = class {
  constructor(e4) {
    this.nodeValue = e4, this.sizeInBytes = new TextEncoder().encode(this.nodeValue).length, this.next = null;
  }
  get value() {
    return this.nodeValue;
  }
  get size() {
    return this.sizeInBytes;
  }
};
var d3 = class {
  constructor(e4) {
    this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = e4, this.sizeInBytes = 0;
  }
  append(e4) {
    const t3 = new O3(e4);
    if (t3.size > this.maxSizeInBytes) throw new Error(`[LinkedList] Value too big to insert into list: ${e4} with size ${t3.size}`);
    for (; this.size + t3.size > this.maxSizeInBytes; ) this.shift();
    this.head ? (this.tail && (this.tail.next = t3), this.tail = t3) : (this.head = t3, this.tail = t3), this.lengthInNodes++, this.sizeInBytes += t3.size;
  }
  shift() {
    if (!this.head) return;
    const e4 = this.head;
    this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= e4.size;
  }
  toArray() {
    const e4 = [];
    let t3 = this.head;
    for (; t3 !== null; ) e4.push(t3.value), t3 = t3.next;
    return e4;
  }
  get length() {
    return this.lengthInNodes;
  }
  get size() {
    return this.sizeInBytes;
  }
  toOrderedArray() {
    return Array.from(this);
  }
  [Symbol.iterator]() {
    let e4 = this.head;
    return { next: () => {
      if (!e4) return { done: true, value: null };
      const t3 = e4.value;
      return e4 = e4.next, { done: false, value: t3 };
    } };
  }
};
var L3 = class {
  constructor(e4, t3 = l5) {
    this.level = e4 ?? "error", this.levelValue = import_pino.levels.values[this.level], this.MAX_LOG_SIZE_IN_BYTES = t3, this.logs = new d3(this.MAX_LOG_SIZE_IN_BYTES);
  }
  forwardToConsole(e4, t3) {
    t3 === import_pino.levels.values.error ? console.error(e4) : t3 === import_pino.levels.values.warn ? console.warn(e4) : t3 === import_pino.levels.values.debug ? console.debug(e4) : t3 === import_pino.levels.values.trace ? console.trace(e4) : console.log(e4);
  }
  appendToLogs(e4) {
    this.logs.append(safeJsonStringify4({ timestamp: (/* @__PURE__ */ new Date()).toISOString(), log: e4 }));
    const t3 = typeof e4 == "string" ? JSON.parse(e4).level : e4.level;
    t3 >= this.levelValue && this.forwardToConsole(e4, t3);
  }
  getLogs() {
    return this.logs;
  }
  clearLogs() {
    this.logs = new d3(this.MAX_LOG_SIZE_IN_BYTES);
  }
  getLogArray() {
    return Array.from(this.logs);
  }
  logsToBlob(e4) {
    const t3 = this.getLogArray();
    return t3.push(safeJsonStringify4({ extraMetadata: e4 })), new Blob(t3, { type: "application/json" });
  }
};
var m3 = class {
  constructor(e4, t3 = l5) {
    this.baseChunkLogger = new L3(e4, t3);
  }
  write(e4) {
    this.baseChunkLogger.appendToLogs(e4);
  }
  getLogs() {
    return this.baseChunkLogger.getLogs();
  }
  clearLogs() {
    this.baseChunkLogger.clearLogs();
  }
  getLogArray() {
    return this.baseChunkLogger.getLogArray();
  }
  logsToBlob(e4) {
    return this.baseChunkLogger.logsToBlob(e4);
  }
  downloadLogsBlobInBrowser(e4) {
    const t3 = URL.createObjectURL(this.logsToBlob(e4)), o6 = document.createElement("a");
    o6.href = t3, o6.download = `walletconnect-logs-${(/* @__PURE__ */ new Date()).toISOString()}.txt`, document.body.appendChild(o6), o6.click(), document.body.removeChild(o6), URL.revokeObjectURL(t3);
  }
};
var B2 = class {
  constructor(e4, t3 = l5) {
    this.baseChunkLogger = new L3(e4, t3);
  }
  write(e4) {
    this.baseChunkLogger.appendToLogs(e4);
  }
  getLogs() {
    return this.baseChunkLogger.getLogs();
  }
  clearLogs() {
    this.baseChunkLogger.clearLogs();
  }
  getLogArray() {
    return this.baseChunkLogger.getLogArray();
  }
  logsToBlob(e4) {
    return this.baseChunkLogger.logsToBlob(e4);
  }
};
var x4 = Object.defineProperty;
var S2 = Object.defineProperties;
var _5 = Object.getOwnPropertyDescriptors;
var p3 = Object.getOwnPropertySymbols;
var T4 = Object.prototype.hasOwnProperty;
var z4 = Object.prototype.propertyIsEnumerable;
var f3 = (r5, e4, t3) => e4 in r5 ? x4(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var i4 = (r5, e4) => {
  for (var t3 in e4 || (e4 = {})) T4.call(e4, t3) && f3(r5, t3, e4[t3]);
  if (p3) for (var t3 of p3(e4)) z4.call(e4, t3) && f3(r5, t3, e4[t3]);
  return r5;
};
var g3 = (r5, e4) => S2(r5, _5(e4));
function k4(r5) {
  return g3(i4({}, r5), { level: (r5 == null ? void 0 : r5.level) || c4.level });
}
function v3(r5, e4 = n3) {
  return r5[e4] || "";
}
function b2(r5, e4, t3 = n3) {
  return r5[t3] = e4, r5;
}
function y4(r5, e4 = n3) {
  let t3 = "";
  return typeof r5.bindings > "u" ? t3 = v3(r5, e4) : t3 = r5.bindings().context || "", t3;
}
function w4(r5, e4, t3 = n3) {
  const o6 = y4(r5, t3);
  return o6.trim() ? `${o6}/${e4}` : e4;
}
function E5(r5, e4, t3 = n3) {
  const o6 = w4(r5, e4, t3), a5 = r5.child({ context: o6 });
  return b2(a5, o6, t3);
}
function C3(r5) {
  var e4, t3;
  const o6 = new m3((e4 = r5.opts) == null ? void 0 : e4.level, r5.maxSizeInBytes);
  return { logger: (0, import_pino.default)(g3(i4({}, r5.opts), { level: "trace", browser: g3(i4({}, (t3 = r5.opts) == null ? void 0 : t3.browser), { write: (a5) => o6.write(a5) }) })), chunkLoggerController: o6 };
}
function I3(r5) {
  var e4;
  const t3 = new B2((e4 = r5.opts) == null ? void 0 : e4.level, r5.maxSizeInBytes);
  return { logger: (0, import_pino.default)(g3(i4({}, r5.opts), { level: "trace" }), t3), chunkLoggerController: t3 };
}
function A4(r5) {
  return typeof r5.loggerOverride < "u" && typeof r5.loggerOverride != "string" ? { logger: r5.loggerOverride, chunkLoggerController: null } : typeof window < "u" ? C3(r5) : I3(r5);
}

// node_modules/@walletconnect/core/node_modules/@walletconnect/types/dist/index.es.js
var import_dist70 = __toESM(require_dist());
var import_dist71 = __toESM(require_dist2());
var import_dist72 = __toESM(require_dist3());
var import_events4 = __toESM(require_events());
var a4 = Object.defineProperty;
var u3 = (e4, s5, r5) => s5 in e4 ? a4(e4, s5, { enumerable: true, configurable: true, writable: true, value: r5 }) : e4[s5] = r5;
var c5 = (e4, s5, r5) => u3(e4, typeof s5 != "symbol" ? s5 + "" : s5, r5);
var h5 = class extends IEvents {
  constructor(s5) {
    super(), this.opts = s5, c5(this, "protocol", "wc"), c5(this, "version", 2);
  }
};
var p4 = Object.defineProperty;
var b3 = (e4, s5, r5) => s5 in e4 ? p4(e4, s5, { enumerable: true, configurable: true, writable: true, value: r5 }) : e4[s5] = r5;
var v4 = (e4, s5, r5) => b3(e4, typeof s5 != "symbol" ? s5 + "" : s5, r5);
var I4 = class extends IEvents {
  constructor(s5, r5) {
    super(), this.core = s5, this.logger = r5, v4(this, "records", /* @__PURE__ */ new Map());
  }
};
var y5 = class {
  constructor(s5, r5) {
    this.logger = s5, this.core = r5;
  }
};
var m4 = class extends IEvents {
  constructor(s5, r5) {
    super(), this.relayer = s5, this.logger = r5;
  }
};
var d4 = class extends IEvents {
  constructor(s5) {
    super();
  }
};
var f4 = class {
  constructor(s5, r5, t3, q4) {
    this.core = s5, this.logger = r5, this.name = t3;
  }
};
var P3 = class extends IEvents {
  constructor(s5, r5) {
    super(), this.relayer = s5, this.logger = r5;
  }
};
var S3 = class extends IEvents {
  constructor(s5, r5) {
    super(), this.core = s5, this.logger = r5;
  }
};
var M3 = class {
  constructor(s5, r5, t3) {
    this.core = s5, this.logger = r5, this.store = t3;
  }
};
var O4 = class {
  constructor(s5, r5) {
    this.projectId = s5, this.logger = r5;
  }
};
var R2 = class {
  constructor(s5, r5, t3) {
    this.core = s5, this.logger = r5, this.telemetryEnabled = t3;
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
var import_time4 = __toESM(require_cjs4());

// node_modules/@walletconnect/core/node_modules/@walletconnect/safe-json/dist/esm/index.js
var import_dist73 = __toESM(require_dist());
var import_dist74 = __toESM(require_dist2());
var import_dist75 = __toESM(require_dist3());
var JSONStringify3 = (data) => JSON.stringify(data, (_6, value) => typeof value === "bigint" ? value.toString() + "n" : value);
var JSONParse2 = (json) => {
  const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
  const serializedData = json.replace(numbersBiggerThanMaxInt, '$1"$2n"$3');
  return JSON.parse(serializedData, (_6, value) => {
    const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
    if (isCustomFormatBigInt)
      return BigInt(value.substring(0, value.length - 1));
    return value;
  });
};
function safeJsonParse4(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSONParse2(value);
  } catch (_a) {
    return value;
  }
}
function safeJsonStringify5(value) {
  return typeof value === "string" ? value : JSONStringify3(value) || "";
}

// node_modules/@walletconnect/relay-auth/dist/index.es.js
var import_dist79 = __toESM(require_dist());
var import_dist80 = __toESM(require_dist2());
var import_dist81 = __toESM(require_dist3());
var import_time2 = __toESM(require_cjs4());

// node_modules/@walletconnect/relay-auth/node_modules/@walletconnect/safe-json/dist/esm/index.js
var import_dist76 = __toESM(require_dist());
var import_dist77 = __toESM(require_dist2());
var import_dist78 = __toESM(require_dist3());
var JSONStringify4 = (data) => JSON.stringify(data, (_6, value) => typeof value === "bigint" ? value.toString() + "n" : value);
var JSONParse3 = (json) => {
  const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
  const serializedData = json.replace(numbersBiggerThanMaxInt, '$1"$2n"$3');
  return JSON.parse(serializedData, (_6, value) => {
    const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
    if (isCustomFormatBigInt)
      return BigInt(value.substring(0, value.length - 1));
    return value;
  });
};
function safeJsonParse5(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSONParse3(value);
  } catch (_a) {
    return value;
  }
}
function safeJsonStringify6(value) {
  return typeof value === "string" ? value : JSONStringify4(value) || "";
}

// node_modules/@walletconnect/relay-auth/dist/index.es.js
function En(t3) {
  return t3 instanceof Uint8Array || ArrayBuffer.isView(t3) && t3.constructor.name === "Uint8Array";
}
function fe(t3, ...e4) {
  if (!En(t3)) throw new Error("Uint8Array expected");
  if (e4.length > 0 && !e4.includes(t3.length)) throw new Error("Uint8Array expected of length " + e4 + ", got length=" + t3.length);
}
function De(t3, e4 = true) {
  if (t3.destroyed) throw new Error("Hash instance has been destroyed");
  if (e4 && t3.finished) throw new Error("Hash#digest() has already been called");
}
function gn(t3, e4) {
  fe(t3);
  const n7 = e4.outputLen;
  if (t3.length < n7) throw new Error("digestInto() expects output buffer of length at least " + n7);
}
var it = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
var _t = (t3) => new DataView(t3.buffer, t3.byteOffset, t3.byteLength);
function yn(t3) {
  if (typeof t3 != "string") throw new Error("utf8ToBytes expected string, got " + typeof t3);
  return new Uint8Array(new TextEncoder().encode(t3));
}
function de(t3) {
  return typeof t3 == "string" && (t3 = yn(t3)), fe(t3), t3;
}
var xn = class {
  clone() {
    return this._cloneInto();
  }
};
function Bn(t3) {
  const e4 = (r5) => t3().update(de(r5)).digest(), n7 = t3();
  return e4.outputLen = n7.outputLen, e4.blockLen = n7.blockLen, e4.create = () => t3(), e4;
}
function he(t3 = 32) {
  if (it && typeof it.getRandomValues == "function") return it.getRandomValues(new Uint8Array(t3));
  if (it && typeof it.randomBytes == "function") return it.randomBytes(t3);
  throw new Error("crypto.getRandomValues must be defined");
}
function Cn(t3, e4, n7, r5) {
  if (typeof t3.setBigUint64 == "function") return t3.setBigUint64(e4, n7, r5);
  const o6 = BigInt(32), s5 = BigInt(4294967295), a5 = Number(n7 >> o6 & s5), u4 = Number(n7 & s5), i6 = r5 ? 4 : 0, D4 = r5 ? 0 : 4;
  t3.setUint32(e4 + i6, a5, r5), t3.setUint32(e4 + D4, u4, r5);
}
var An = class extends xn {
  constructor(e4, n7, r5, o6) {
    super(), this.blockLen = e4, this.outputLen = n7, this.padOffset = r5, this.isLE = o6, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(e4), this.view = _t(this.buffer);
  }
  update(e4) {
    De(this);
    const { view: n7, buffer: r5, blockLen: o6 } = this;
    e4 = de(e4);
    const s5 = e4.length;
    for (let a5 = 0; a5 < s5; ) {
      const u4 = Math.min(o6 - this.pos, s5 - a5);
      if (u4 === o6) {
        const i6 = _t(e4);
        for (; o6 <= s5 - a5; a5 += o6) this.process(i6, a5);
        continue;
      }
      r5.set(e4.subarray(a5, a5 + u4), this.pos), this.pos += u4, a5 += u4, this.pos === o6 && (this.process(n7, 0), this.pos = 0);
    }
    return this.length += e4.length, this.roundClean(), this;
  }
  digestInto(e4) {
    De(this), gn(e4, this), this.finished = true;
    const { buffer: n7, view: r5, blockLen: o6, isLE: s5 } = this;
    let { pos: a5 } = this;
    n7[a5++] = 128, this.buffer.subarray(a5).fill(0), this.padOffset > o6 - a5 && (this.process(r5, 0), a5 = 0);
    for (let l9 = a5; l9 < o6; l9++) n7[l9] = 0;
    Cn(r5, o6 - 8, BigInt(this.length * 8), s5), this.process(r5, 0);
    const u4 = _t(e4), i6 = this.outputLen;
    if (i6 % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
    const D4 = i6 / 4, c8 = this.get();
    if (D4 > c8.length) throw new Error("_sha2: outputLen bigger than state");
    for (let l9 = 0; l9 < D4; l9++) u4.setUint32(4 * l9, c8[l9], s5);
  }
  digest() {
    const { buffer: e4, outputLen: n7 } = this;
    this.digestInto(e4);
    const r5 = e4.slice(0, n7);
    return this.destroy(), r5;
  }
  _cloneInto(e4) {
    e4 || (e4 = new this.constructor()), e4.set(...this.get());
    const { blockLen: n7, buffer: r5, length: o6, finished: s5, destroyed: a5, pos: u4 } = this;
    return e4.length = o6, e4.pos = u4, e4.finished = s5, e4.destroyed = a5, o6 % n7 && e4.buffer.set(r5), e4;
  }
};
var wt = BigInt(2 ** 32 - 1);
var St = BigInt(32);
function le(t3, e4 = false) {
  return e4 ? { h: Number(t3 & wt), l: Number(t3 >> St & wt) } : { h: Number(t3 >> St & wt) | 0, l: Number(t3 & wt) | 0 };
}
function mn(t3, e4 = false) {
  let n7 = new Uint32Array(t3.length), r5 = new Uint32Array(t3.length);
  for (let o6 = 0; o6 < t3.length; o6++) {
    const { h: s5, l: a5 } = le(t3[o6], e4);
    [n7[o6], r5[o6]] = [s5, a5];
  }
  return [n7, r5];
}
var _n = (t3, e4) => BigInt(t3 >>> 0) << St | BigInt(e4 >>> 0);
var Sn = (t3, e4, n7) => t3 >>> n7;
var vn = (t3, e4, n7) => t3 << 32 - n7 | e4 >>> n7;
var In = (t3, e4, n7) => t3 >>> n7 | e4 << 32 - n7;
var Un = (t3, e4, n7) => t3 << 32 - n7 | e4 >>> n7;
var Tn = (t3, e4, n7) => t3 << 64 - n7 | e4 >>> n7 - 32;
var Fn = (t3, e4, n7) => t3 >>> n7 - 32 | e4 << 64 - n7;
var Nn = (t3, e4) => e4;
var Ln = (t3, e4) => t3;
var On = (t3, e4, n7) => t3 << n7 | e4 >>> 32 - n7;
var Hn = (t3, e4, n7) => e4 << n7 | t3 >>> 32 - n7;
var zn = (t3, e4, n7) => e4 << n7 - 32 | t3 >>> 64 - n7;
var Mn = (t3, e4, n7) => t3 << n7 - 32 | e4 >>> 64 - n7;
function qn(t3, e4, n7, r5) {
  const o6 = (e4 >>> 0) + (r5 >>> 0);
  return { h: t3 + n7 + (o6 / 2 ** 32 | 0) | 0, l: o6 | 0 };
}
var $n = (t3, e4, n7) => (t3 >>> 0) + (e4 >>> 0) + (n7 >>> 0);
var kn = (t3, e4, n7, r5) => e4 + n7 + r5 + (t3 / 2 ** 32 | 0) | 0;
var Rn = (t3, e4, n7, r5) => (t3 >>> 0) + (e4 >>> 0) + (n7 >>> 0) + (r5 >>> 0);
var jn = (t3, e4, n7, r5, o6) => e4 + n7 + r5 + o6 + (t3 / 2 ** 32 | 0) | 0;
var Zn = (t3, e4, n7, r5, o6) => (t3 >>> 0) + (e4 >>> 0) + (n7 >>> 0) + (r5 >>> 0) + (o6 >>> 0);
var Gn = (t3, e4, n7, r5, o6, s5) => e4 + n7 + r5 + o6 + s5 + (t3 / 2 ** 32 | 0) | 0;
var x5 = { fromBig: le, split: mn, toBig: _n, shrSH: Sn, shrSL: vn, rotrSH: In, rotrSL: Un, rotrBH: Tn, rotrBL: Fn, rotr32H: Nn, rotr32L: Ln, rotlSH: On, rotlSL: Hn, rotlBH: zn, rotlBL: Mn, add: qn, add3L: $n, add3H: kn, add4L: Rn, add4H: jn, add5H: Gn, add5L: Zn };
var [Vn, Yn] = (() => x5.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((t3) => BigInt(t3))))();
var P4 = new Uint32Array(80);
var Q2 = new Uint32Array(80);
var Jn = class extends An {
  constructor() {
    super(128, 64, 16, false), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
  }
  get() {
    const { Ah: e4, Al: n7, Bh: r5, Bl: o6, Ch: s5, Cl: a5, Dh: u4, Dl: i6, Eh: D4, El: c8, Fh: l9, Fl: p6, Gh: w7, Gl: h7, Hh: g5, Hl: S5 } = this;
    return [e4, n7, r5, o6, s5, a5, u4, i6, D4, c8, l9, p6, w7, h7, g5, S5];
  }
  set(e4, n7, r5, o6, s5, a5, u4, i6, D4, c8, l9, p6, w7, h7, g5, S5) {
    this.Ah = e4 | 0, this.Al = n7 | 0, this.Bh = r5 | 0, this.Bl = o6 | 0, this.Ch = s5 | 0, this.Cl = a5 | 0, this.Dh = u4 | 0, this.Dl = i6 | 0, this.Eh = D4 | 0, this.El = c8 | 0, this.Fh = l9 | 0, this.Fl = p6 | 0, this.Gh = w7 | 0, this.Gl = h7 | 0, this.Hh = g5 | 0, this.Hl = S5 | 0;
  }
  process(e4, n7) {
    for (let d6 = 0; d6 < 16; d6++, n7 += 4) P4[d6] = e4.getUint32(n7), Q2[d6] = e4.getUint32(n7 += 4);
    for (let d6 = 16; d6 < 80; d6++) {
      const m5 = P4[d6 - 15] | 0, F5 = Q2[d6 - 15] | 0, q4 = x5.rotrSH(m5, F5, 1) ^ x5.rotrSH(m5, F5, 8) ^ x5.shrSH(m5, F5, 7), z6 = x5.rotrSL(m5, F5, 1) ^ x5.rotrSL(m5, F5, 8) ^ x5.shrSL(m5, F5, 7), I5 = P4[d6 - 2] | 0, O6 = Q2[d6 - 2] | 0, ot2 = x5.rotrSH(I5, O6, 19) ^ x5.rotrBH(I5, O6, 61) ^ x5.shrSH(I5, O6, 6), tt3 = x5.rotrSL(I5, O6, 19) ^ x5.rotrBL(I5, O6, 61) ^ x5.shrSL(I5, O6, 6), st2 = x5.add4L(z6, tt3, Q2[d6 - 7], Q2[d6 - 16]), at2 = x5.add4H(st2, q4, ot2, P4[d6 - 7], P4[d6 - 16]);
      P4[d6] = at2 | 0, Q2[d6] = st2 | 0;
    }
    let { Ah: r5, Al: o6, Bh: s5, Bl: a5, Ch: u4, Cl: i6, Dh: D4, Dl: c8, Eh: l9, El: p6, Fh: w7, Fl: h7, Gh: g5, Gl: S5, Hh: v8, Hl: L5 } = this;
    for (let d6 = 0; d6 < 80; d6++) {
      const m5 = x5.rotrSH(l9, p6, 14) ^ x5.rotrSH(l9, p6, 18) ^ x5.rotrBH(l9, p6, 41), F5 = x5.rotrSL(l9, p6, 14) ^ x5.rotrSL(l9, p6, 18) ^ x5.rotrBL(l9, p6, 41), q4 = l9 & w7 ^ ~l9 & g5, z6 = p6 & h7 ^ ~p6 & S5, I5 = x5.add5L(L5, F5, z6, Yn[d6], Q2[d6]), O6 = x5.add5H(I5, v8, m5, q4, Vn[d6], P4[d6]), ot2 = I5 | 0, tt3 = x5.rotrSH(r5, o6, 28) ^ x5.rotrBH(r5, o6, 34) ^ x5.rotrBH(r5, o6, 39), st2 = x5.rotrSL(r5, o6, 28) ^ x5.rotrBL(r5, o6, 34) ^ x5.rotrBL(r5, o6, 39), at2 = r5 & s5 ^ r5 & u4 ^ s5 & u4, Ct3 = o6 & a5 ^ o6 & i6 ^ a5 & i6;
      v8 = g5 | 0, L5 = S5 | 0, g5 = w7 | 0, S5 = h7 | 0, w7 = l9 | 0, h7 = p6 | 0, { h: l9, l: p6 } = x5.add(D4 | 0, c8 | 0, O6 | 0, ot2 | 0), D4 = u4 | 0, c8 = i6 | 0, u4 = s5 | 0, i6 = a5 | 0, s5 = r5 | 0, a5 = o6 | 0;
      const At3 = x5.add3L(ot2, st2, Ct3);
      r5 = x5.add3H(At3, O6, tt3, at2), o6 = At3 | 0;
    }
    ({ h: r5, l: o6 } = x5.add(this.Ah | 0, this.Al | 0, r5 | 0, o6 | 0)), { h: s5, l: a5 } = x5.add(this.Bh | 0, this.Bl | 0, s5 | 0, a5 | 0), { h: u4, l: i6 } = x5.add(this.Ch | 0, this.Cl | 0, u4 | 0, i6 | 0), { h: D4, l: c8 } = x5.add(this.Dh | 0, this.Dl | 0, D4 | 0, c8 | 0), { h: l9, l: p6 } = x5.add(this.Eh | 0, this.El | 0, l9 | 0, p6 | 0), { h: w7, l: h7 } = x5.add(this.Fh | 0, this.Fl | 0, w7 | 0, h7 | 0), { h: g5, l: S5 } = x5.add(this.Gh | 0, this.Gl | 0, g5 | 0, S5 | 0), { h: v8, l: L5 } = x5.add(this.Hh | 0, this.Hl | 0, v8 | 0, L5 | 0), this.set(r5, o6, s5, a5, u4, i6, D4, c8, l9, p6, w7, h7, g5, S5, v8, L5);
  }
  roundClean() {
    P4.fill(0), Q2.fill(0);
  }
  destroy() {
    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
};
var Kn = Bn(() => new Jn());
var vt = BigInt(0);
var be = BigInt(1);
var Wn = BigInt(2);
function It(t3) {
  return t3 instanceof Uint8Array || ArrayBuffer.isView(t3) && t3.constructor.name === "Uint8Array";
}
function Ut(t3) {
  if (!It(t3)) throw new Error("Uint8Array expected");
}
function Tt(t3, e4) {
  if (typeof e4 != "boolean") throw new Error(t3 + " boolean expected, got " + e4);
}
var Xn = Array.from({ length: 256 }, (t3, e4) => e4.toString(16).padStart(2, "0"));
function Ft(t3) {
  Ut(t3);
  let e4 = "";
  for (let n7 = 0; n7 < t3.length; n7++) e4 += Xn[t3[n7]];
  return e4;
}
function pe(t3) {
  if (typeof t3 != "string") throw new Error("hex string expected, got " + typeof t3);
  return t3 === "" ? vt : BigInt("0x" + t3);
}
var K3 = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function we(t3) {
  if (t3 >= K3._0 && t3 <= K3._9) return t3 - K3._0;
  if (t3 >= K3.A && t3 <= K3.F) return t3 - (K3.A - 10);
  if (t3 >= K3.a && t3 <= K3.f) return t3 - (K3.a - 10);
}
function Ee(t3) {
  if (typeof t3 != "string") throw new Error("hex string expected, got " + typeof t3);
  const e4 = t3.length, n7 = e4 / 2;
  if (e4 % 2) throw new Error("hex string expected, got unpadded hex of length " + e4);
  const r5 = new Uint8Array(n7);
  for (let o6 = 0, s5 = 0; o6 < n7; o6++, s5 += 2) {
    const a5 = we(t3.charCodeAt(s5)), u4 = we(t3.charCodeAt(s5 + 1));
    if (a5 === void 0 || u4 === void 0) {
      const i6 = t3[s5] + t3[s5 + 1];
      throw new Error('hex string expected, got non-hex character "' + i6 + '" at index ' + s5);
    }
    r5[o6] = a5 * 16 + u4;
  }
  return r5;
}
function Pn(t3) {
  return pe(Ft(t3));
}
function Et(t3) {
  return Ut(t3), pe(Ft(Uint8Array.from(t3).reverse()));
}
function ge(t3, e4) {
  return Ee(t3.toString(16).padStart(e4 * 2, "0"));
}
function Nt(t3, e4) {
  return ge(t3, e4).reverse();
}
function W2(t3, e4, n7) {
  let r5;
  if (typeof e4 == "string") try {
    r5 = Ee(e4);
  } catch (s5) {
    throw new Error(t3 + " must be hex string or Uint8Array, cause: " + s5);
  }
  else if (It(e4)) r5 = Uint8Array.from(e4);
  else throw new Error(t3 + " must be hex string or Uint8Array");
  const o6 = r5.length;
  if (typeof n7 == "number" && o6 !== n7) throw new Error(t3 + " of length " + n7 + " expected, got " + o6);
  return r5;
}
function ye(...t3) {
  let e4 = 0;
  for (let r5 = 0; r5 < t3.length; r5++) {
    const o6 = t3[r5];
    Ut(o6), e4 += o6.length;
  }
  const n7 = new Uint8Array(e4);
  for (let r5 = 0, o6 = 0; r5 < t3.length; r5++) {
    const s5 = t3[r5];
    n7.set(s5, o6), o6 += s5.length;
  }
  return n7;
}
var Lt = (t3) => typeof t3 == "bigint" && vt <= t3;
function Qn(t3, e4, n7) {
  return Lt(t3) && Lt(e4) && Lt(n7) && e4 <= t3 && t3 < n7;
}
function ft(t3, e4, n7, r5) {
  if (!Qn(e4, n7, r5)) throw new Error("expected valid " + t3 + ": " + n7 + " <= n < " + r5 + ", got " + e4);
}
function tr(t3) {
  let e4;
  for (e4 = 0; t3 > vt; t3 >>= be, e4 += 1) ;
  return e4;
}
var er = (t3) => (Wn << BigInt(t3 - 1)) - be;
var nr = { bigint: (t3) => typeof t3 == "bigint", function: (t3) => typeof t3 == "function", boolean: (t3) => typeof t3 == "boolean", string: (t3) => typeof t3 == "string", stringOrUint8Array: (t3) => typeof t3 == "string" || It(t3), isSafeInteger: (t3) => Number.isSafeInteger(t3), array: (t3) => Array.isArray(t3), field: (t3, e4) => e4.Fp.isValid(t3), hash: (t3) => typeof t3 == "function" && Number.isSafeInteger(t3.outputLen) };
function Ot(t3, e4, n7 = {}) {
  const r5 = (o6, s5, a5) => {
    const u4 = nr[s5];
    if (typeof u4 != "function") throw new Error("invalid validator function");
    const i6 = t3[o6];
    if (!(a5 && i6 === void 0) && !u4(i6, t3)) throw new Error("param " + String(o6) + " is invalid. Expected " + s5 + ", got " + i6);
  };
  for (const [o6, s5] of Object.entries(e4)) r5(o6, s5, false);
  for (const [o6, s5] of Object.entries(n7)) r5(o6, s5, true);
  return t3;
}
function xe(t3) {
  const e4 = /* @__PURE__ */ new WeakMap();
  return (n7, ...r5) => {
    const o6 = e4.get(n7);
    if (o6 !== void 0) return o6;
    const s5 = t3(n7, ...r5);
    return e4.set(n7, s5), s5;
  };
}
var M4 = BigInt(0);
var N4 = BigInt(1);
var nt = BigInt(2);
var rr = BigInt(3);
var Ht = BigInt(4);
var Be = BigInt(5);
var Ce = BigInt(8);
function H3(t3, e4) {
  const n7 = t3 % e4;
  return n7 >= M4 ? n7 : e4 + n7;
}
function or(t3, e4, n7) {
  if (e4 < M4) throw new Error("invalid exponent, negatives unsupported");
  if (n7 <= M4) throw new Error("invalid modulus");
  if (n7 === N4) return M4;
  let r5 = N4;
  for (; e4 > M4; ) e4 & N4 && (r5 = r5 * t3 % n7), t3 = t3 * t3 % n7, e4 >>= N4;
  return r5;
}
function J2(t3, e4, n7) {
  let r5 = t3;
  for (; e4-- > M4; ) r5 *= r5, r5 %= n7;
  return r5;
}
function Ae(t3, e4) {
  if (t3 === M4) throw new Error("invert: expected non-zero number");
  if (e4 <= M4) throw new Error("invert: expected positive modulus, got " + e4);
  let n7 = H3(t3, e4), r5 = e4, o6 = M4, s5 = N4;
  for (; n7 !== M4; ) {
    const u4 = r5 / n7, i6 = r5 % n7, D4 = o6 - s5 * u4;
    r5 = n7, n7 = i6, o6 = s5, s5 = D4;
  }
  if (r5 !== N4) throw new Error("invert: does not exist");
  return H3(o6, e4);
}
function sr(t3) {
  const e4 = (t3 - N4) / nt;
  let n7, r5, o6;
  for (n7 = t3 - N4, r5 = 0; n7 % nt === M4; n7 /= nt, r5++) ;
  for (o6 = nt; o6 < t3 && or(o6, e4, t3) !== t3 - N4; o6++) if (o6 > 1e3) throw new Error("Cannot find square root: likely non-prime P");
  if (r5 === 1) {
    const a5 = (t3 + N4) / Ht;
    return function(i6, D4) {
      const c8 = i6.pow(D4, a5);
      if (!i6.eql(i6.sqr(c8), D4)) throw new Error("Cannot find square root");
      return c8;
    };
  }
  const s5 = (n7 + N4) / nt;
  return function(u4, i6) {
    if (u4.pow(i6, e4) === u4.neg(u4.ONE)) throw new Error("Cannot find square root");
    let D4 = r5, c8 = u4.pow(u4.mul(u4.ONE, o6), n7), l9 = u4.pow(i6, s5), p6 = u4.pow(i6, n7);
    for (; !u4.eql(p6, u4.ONE); ) {
      if (u4.eql(p6, u4.ZERO)) return u4.ZERO;
      let w7 = 1;
      for (let g5 = u4.sqr(p6); w7 < D4 && !u4.eql(g5, u4.ONE); w7++) g5 = u4.sqr(g5);
      const h7 = u4.pow(c8, N4 << BigInt(D4 - w7 - 1));
      c8 = u4.sqr(h7), l9 = u4.mul(l9, h7), p6 = u4.mul(p6, c8), D4 = w7;
    }
    return l9;
  };
}
function ir(t3) {
  if (t3 % Ht === rr) {
    const e4 = (t3 + N4) / Ht;
    return function(r5, o6) {
      const s5 = r5.pow(o6, e4);
      if (!r5.eql(r5.sqr(s5), o6)) throw new Error("Cannot find square root");
      return s5;
    };
  }
  if (t3 % Ce === Be) {
    const e4 = (t3 - Be) / Ce;
    return function(r5, o6) {
      const s5 = r5.mul(o6, nt), a5 = r5.pow(s5, e4), u4 = r5.mul(o6, a5), i6 = r5.mul(r5.mul(u4, nt), a5), D4 = r5.mul(u4, r5.sub(i6, r5.ONE));
      if (!r5.eql(r5.sqr(D4), o6)) throw new Error("Cannot find square root");
      return D4;
    };
  }
  return sr(t3);
}
var ur = (t3, e4) => (H3(t3, e4) & N4) === N4;
var cr = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
function ar(t3) {
  const e4 = { ORDER: "bigint", MASK: "bigint", BYTES: "isSafeInteger", BITS: "isSafeInteger" }, n7 = cr.reduce((r5, o6) => (r5[o6] = "function", r5), e4);
  return Ot(t3, n7);
}
function fr(t3, e4, n7) {
  if (n7 < M4) throw new Error("invalid exponent, negatives unsupported");
  if (n7 === M4) return t3.ONE;
  if (n7 === N4) return e4;
  let r5 = t3.ONE, o6 = e4;
  for (; n7 > M4; ) n7 & N4 && (r5 = t3.mul(r5, o6)), o6 = t3.sqr(o6), n7 >>= N4;
  return r5;
}
function Dr(t3, e4) {
  const n7 = new Array(e4.length), r5 = e4.reduce((s5, a5, u4) => t3.is0(a5) ? s5 : (n7[u4] = s5, t3.mul(s5, a5)), t3.ONE), o6 = t3.inv(r5);
  return e4.reduceRight((s5, a5, u4) => t3.is0(a5) ? s5 : (n7[u4] = t3.mul(s5, n7[u4]), t3.mul(s5, a5)), o6), n7;
}
function me(t3, e4) {
  const n7 = e4 !== void 0 ? e4 : t3.toString(2).length, r5 = Math.ceil(n7 / 8);
  return { nBitLength: n7, nByteLength: r5 };
}
function _e(t3, e4, n7 = false, r5 = {}) {
  if (t3 <= M4) throw new Error("invalid field: expected ORDER > 0, got " + t3);
  const { nBitLength: o6, nByteLength: s5 } = me(t3, e4);
  if (s5 > 2048) throw new Error("invalid field: expected ORDER of <= 2048 bytes");
  let a5;
  const u4 = Object.freeze({ ORDER: t3, isLE: n7, BITS: o6, BYTES: s5, MASK: er(o6), ZERO: M4, ONE: N4, create: (i6) => H3(i6, t3), isValid: (i6) => {
    if (typeof i6 != "bigint") throw new Error("invalid field element: expected bigint, got " + typeof i6);
    return M4 <= i6 && i6 < t3;
  }, is0: (i6) => i6 === M4, isOdd: (i6) => (i6 & N4) === N4, neg: (i6) => H3(-i6, t3), eql: (i6, D4) => i6 === D4, sqr: (i6) => H3(i6 * i6, t3), add: (i6, D4) => H3(i6 + D4, t3), sub: (i6, D4) => H3(i6 - D4, t3), mul: (i6, D4) => H3(i6 * D4, t3), pow: (i6, D4) => fr(u4, i6, D4), div: (i6, D4) => H3(i6 * Ae(D4, t3), t3), sqrN: (i6) => i6 * i6, addN: (i6, D4) => i6 + D4, subN: (i6, D4) => i6 - D4, mulN: (i6, D4) => i6 * D4, inv: (i6) => Ae(i6, t3), sqrt: r5.sqrt || ((i6) => (a5 || (a5 = ir(t3)), a5(u4, i6))), invertBatch: (i6) => Dr(u4, i6), cmov: (i6, D4, c8) => c8 ? D4 : i6, toBytes: (i6) => n7 ? Nt(i6, s5) : ge(i6, s5), fromBytes: (i6) => {
    if (i6.length !== s5) throw new Error("Field.fromBytes: expected " + s5 + " bytes, got " + i6.length);
    return n7 ? Et(i6) : Pn(i6);
  } });
  return Object.freeze(u4);
}
var Se = BigInt(0);
var gt = BigInt(1);
function zt(t3, e4) {
  const n7 = e4.negate();
  return t3 ? n7 : e4;
}
function ve(t3, e4) {
  if (!Number.isSafeInteger(t3) || t3 <= 0 || t3 > e4) throw new Error("invalid window size, expected [1.." + e4 + "], got W=" + t3);
}
function Mt(t3, e4) {
  ve(t3, e4);
  const n7 = Math.ceil(e4 / t3) + 1, r5 = 2 ** (t3 - 1);
  return { windows: n7, windowSize: r5 };
}
function dr(t3, e4) {
  if (!Array.isArray(t3)) throw new Error("array expected");
  t3.forEach((n7, r5) => {
    if (!(n7 instanceof e4)) throw new Error("invalid point at index " + r5);
  });
}
function hr(t3, e4) {
  if (!Array.isArray(t3)) throw new Error("array of scalars expected");
  t3.forEach((n7, r5) => {
    if (!e4.isValid(n7)) throw new Error("invalid scalar at index " + r5);
  });
}
var qt = /* @__PURE__ */ new WeakMap();
var Ie = /* @__PURE__ */ new WeakMap();
function $t(t3) {
  return Ie.get(t3) || 1;
}
function lr(t3, e4) {
  return { constTimeNegate: zt, hasPrecomputes(n7) {
    return $t(n7) !== 1;
  }, unsafeLadder(n7, r5, o6 = t3.ZERO) {
    let s5 = n7;
    for (; r5 > Se; ) r5 & gt && (o6 = o6.add(s5)), s5 = s5.double(), r5 >>= gt;
    return o6;
  }, precomputeWindow(n7, r5) {
    const { windows: o6, windowSize: s5 } = Mt(r5, e4), a5 = [];
    let u4 = n7, i6 = u4;
    for (let D4 = 0; D4 < o6; D4++) {
      i6 = u4, a5.push(i6);
      for (let c8 = 1; c8 < s5; c8++) i6 = i6.add(u4), a5.push(i6);
      u4 = i6.double();
    }
    return a5;
  }, wNAF(n7, r5, o6) {
    const { windows: s5, windowSize: a5 } = Mt(n7, e4);
    let u4 = t3.ZERO, i6 = t3.BASE;
    const D4 = BigInt(2 ** n7 - 1), c8 = 2 ** n7, l9 = BigInt(n7);
    for (let p6 = 0; p6 < s5; p6++) {
      const w7 = p6 * a5;
      let h7 = Number(o6 & D4);
      o6 >>= l9, h7 > a5 && (h7 -= c8, o6 += gt);
      const g5 = w7, S5 = w7 + Math.abs(h7) - 1, v8 = p6 % 2 !== 0, L5 = h7 < 0;
      h7 === 0 ? i6 = i6.add(zt(v8, r5[g5])) : u4 = u4.add(zt(L5, r5[S5]));
    }
    return { p: u4, f: i6 };
  }, wNAFUnsafe(n7, r5, o6, s5 = t3.ZERO) {
    const { windows: a5, windowSize: u4 } = Mt(n7, e4), i6 = BigInt(2 ** n7 - 1), D4 = 2 ** n7, c8 = BigInt(n7);
    for (let l9 = 0; l9 < a5; l9++) {
      const p6 = l9 * u4;
      if (o6 === Se) break;
      let w7 = Number(o6 & i6);
      if (o6 >>= c8, w7 > u4 && (w7 -= D4, o6 += gt), w7 === 0) continue;
      let h7 = r5[p6 + Math.abs(w7) - 1];
      w7 < 0 && (h7 = h7.negate()), s5 = s5.add(h7);
    }
    return s5;
  }, getPrecomputes(n7, r5, o6) {
    let s5 = qt.get(r5);
    return s5 || (s5 = this.precomputeWindow(r5, n7), n7 !== 1 && qt.set(r5, o6(s5))), s5;
  }, wNAFCached(n7, r5, o6) {
    const s5 = $t(n7);
    return this.wNAF(s5, this.getPrecomputes(s5, n7, o6), r5);
  }, wNAFCachedUnsafe(n7, r5, o6, s5) {
    const a5 = $t(n7);
    return a5 === 1 ? this.unsafeLadder(n7, r5, s5) : this.wNAFUnsafe(a5, this.getPrecomputes(a5, n7, o6), r5, s5);
  }, setWindowSize(n7, r5) {
    ve(r5, e4), Ie.set(n7, r5), qt.delete(n7);
  } };
}
function br(t3, e4, n7, r5) {
  if (dr(n7, t3), hr(r5, e4), n7.length !== r5.length) throw new Error("arrays of points and scalars must have equal length");
  const o6 = t3.ZERO, s5 = tr(BigInt(n7.length)), a5 = s5 > 12 ? s5 - 3 : s5 > 4 ? s5 - 2 : s5 ? 2 : 1, u4 = (1 << a5) - 1, i6 = new Array(u4 + 1).fill(o6), D4 = Math.floor((e4.BITS - 1) / a5) * a5;
  let c8 = o6;
  for (let l9 = D4; l9 >= 0; l9 -= a5) {
    i6.fill(o6);
    for (let w7 = 0; w7 < r5.length; w7++) {
      const h7 = r5[w7], g5 = Number(h7 >> BigInt(l9) & BigInt(u4));
      i6[g5] = i6[g5].add(n7[w7]);
    }
    let p6 = o6;
    for (let w7 = i6.length - 1, h7 = o6; w7 > 0; w7--) h7 = h7.add(i6[w7]), p6 = p6.add(h7);
    if (c8 = c8.add(p6), l9 !== 0) for (let w7 = 0; w7 < a5; w7++) c8 = c8.double();
  }
  return c8;
}
function pr(t3) {
  return ar(t3.Fp), Ot(t3, { n: "bigint", h: "bigint", Gx: "field", Gy: "field" }, { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }), Object.freeze({ ...me(t3.n, t3.nBitLength), ...t3, p: t3.Fp.ORDER });
}
var G2 = BigInt(0);
var j4 = BigInt(1);
var yt = BigInt(2);
var wr = BigInt(8);
var Er = { zip215: true };
function gr(t3) {
  const e4 = pr(t3);
  return Ot(t3, { hash: "function", a: "bigint", d: "bigint", randomBytes: "function" }, { adjustScalarBytes: "function", domain: "function", uvRatio: "function", mapToCurve: "function" }), Object.freeze({ ...e4 });
}
function yr(t3) {
  const e4 = gr(t3), { Fp: n7, n: r5, prehash: o6, hash: s5, randomBytes: a5, nByteLength: u4, h: i6 } = e4, D4 = yt << BigInt(u4 * 8) - j4, c8 = n7.create, l9 = _e(e4.n, e4.nBitLength), p6 = e4.uvRatio || ((y7, f8) => {
    try {
      return { isValid: true, value: n7.sqrt(y7 * n7.inv(f8)) };
    } catch {
      return { isValid: false, value: G2 };
    }
  }), w7 = e4.adjustScalarBytes || ((y7) => y7), h7 = e4.domain || ((y7, f8, b6) => {
    if (Tt("phflag", b6), f8.length || b6) throw new Error("Contexts/pre-hash are not supported");
    return y7;
  });
  function g5(y7, f8) {
    ft("coordinate " + y7, f8, G2, D4);
  }
  function S5(y7) {
    if (!(y7 instanceof d6)) throw new Error("ExtendedPoint expected");
  }
  const v8 = xe((y7, f8) => {
    const { ex: b6, ey: E8, ez: B4 } = y7, C7 = y7.is0();
    f8 == null && (f8 = C7 ? wr : n7.inv(B4));
    const A6 = c8(b6 * f8), U3 = c8(E8 * f8), _6 = c8(B4 * f8);
    if (C7) return { x: G2, y: j4 };
    if (_6 !== j4) throw new Error("invZ was invalid");
    return { x: A6, y: U3 };
  }), L5 = xe((y7) => {
    const { a: f8, d: b6 } = e4;
    if (y7.is0()) throw new Error("bad point: ZERO");
    const { ex: E8, ey: B4, ez: C7, et: A6 } = y7, U3 = c8(E8 * E8), _6 = c8(B4 * B4), T6 = c8(C7 * C7), $5 = c8(T6 * T6), R4 = c8(U3 * f8), V5 = c8(T6 * c8(R4 + _6)), Y4 = c8($5 + c8(b6 * c8(U3 * _6)));
    if (V5 !== Y4) throw new Error("bad point: equation left != right (1)");
    const Z3 = c8(E8 * B4), X3 = c8(C7 * A6);
    if (Z3 !== X3) throw new Error("bad point: equation left != right (2)");
    return true;
  });
  class d6 {
    constructor(f8, b6, E8, B4) {
      this.ex = f8, this.ey = b6, this.ez = E8, this.et = B4, g5("x", f8), g5("y", b6), g5("z", E8), g5("t", B4), Object.freeze(this);
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    static fromAffine(f8) {
      if (f8 instanceof d6) throw new Error("extended point not allowed");
      const { x: b6, y: E8 } = f8 || {};
      return g5("x", b6), g5("y", E8), new d6(b6, E8, j4, c8(b6 * E8));
    }
    static normalizeZ(f8) {
      const b6 = n7.invertBatch(f8.map((E8) => E8.ez));
      return f8.map((E8, B4) => E8.toAffine(b6[B4])).map(d6.fromAffine);
    }
    static msm(f8, b6) {
      return br(d6, l9, f8, b6);
    }
    _setWindowSize(f8) {
      q4.setWindowSize(this, f8);
    }
    assertValidity() {
      L5(this);
    }
    equals(f8) {
      S5(f8);
      const { ex: b6, ey: E8, ez: B4 } = this, { ex: C7, ey: A6, ez: U3 } = f8, _6 = c8(b6 * U3), T6 = c8(C7 * B4), $5 = c8(E8 * U3), R4 = c8(A6 * B4);
      return _6 === T6 && $5 === R4;
    }
    is0() {
      return this.equals(d6.ZERO);
    }
    negate() {
      return new d6(c8(-this.ex), this.ey, this.ez, c8(-this.et));
    }
    double() {
      const { a: f8 } = e4, { ex: b6, ey: E8, ez: B4 } = this, C7 = c8(b6 * b6), A6 = c8(E8 * E8), U3 = c8(yt * c8(B4 * B4)), _6 = c8(f8 * C7), T6 = b6 + E8, $5 = c8(c8(T6 * T6) - C7 - A6), R4 = _6 + A6, V5 = R4 - U3, Y4 = _6 - A6, Z3 = c8($5 * V5), X3 = c8(R4 * Y4), et2 = c8($5 * Y4), pt3 = c8(V5 * R4);
      return new d6(Z3, X3, pt3, et2);
    }
    add(f8) {
      S5(f8);
      const { a: b6, d: E8 } = e4, { ex: B4, ey: C7, ez: A6, et: U3 } = this, { ex: _6, ey: T6, ez: $5, et: R4 } = f8;
      if (b6 === BigInt(-1)) {
        const re3 = c8((C7 - B4) * (T6 + _6)), oe2 = c8((C7 + B4) * (T6 - _6)), mt3 = c8(oe2 - re3);
        if (mt3 === G2) return this.double();
        const se3 = c8(A6 * yt * R4), ie3 = c8(U3 * yt * $5), ue3 = ie3 + se3, ce3 = oe2 + re3, ae2 = ie3 - se3, Dn2 = c8(ue3 * mt3), dn3 = c8(ce3 * ae2), hn3 = c8(ue3 * ae2), ln3 = c8(mt3 * ce3);
        return new d6(Dn2, dn3, ln3, hn3);
      }
      const V5 = c8(B4 * _6), Y4 = c8(C7 * T6), Z3 = c8(U3 * E8 * R4), X3 = c8(A6 * $5), et2 = c8((B4 + C7) * (_6 + T6) - V5 - Y4), pt3 = X3 - Z3, ee3 = X3 + Z3, ne2 = c8(Y4 - b6 * V5), un3 = c8(et2 * pt3), cn3 = c8(ee3 * ne2), an3 = c8(et2 * ne2), fn3 = c8(pt3 * ee3);
      return new d6(un3, cn3, fn3, an3);
    }
    subtract(f8) {
      return this.add(f8.negate());
    }
    wNAF(f8) {
      return q4.wNAFCached(this, f8, d6.normalizeZ);
    }
    multiply(f8) {
      const b6 = f8;
      ft("scalar", b6, j4, r5);
      const { p: E8, f: B4 } = this.wNAF(b6);
      return d6.normalizeZ([E8, B4])[0];
    }
    multiplyUnsafe(f8, b6 = d6.ZERO) {
      const E8 = f8;
      return ft("scalar", E8, G2, r5), E8 === G2 ? F5 : this.is0() || E8 === j4 ? this : q4.wNAFCachedUnsafe(this, E8, d6.normalizeZ, b6);
    }
    isSmallOrder() {
      return this.multiplyUnsafe(i6).is0();
    }
    isTorsionFree() {
      return q4.unsafeLadder(this, r5).is0();
    }
    toAffine(f8) {
      return v8(this, f8);
    }
    clearCofactor() {
      const { h: f8 } = e4;
      return f8 === j4 ? this : this.multiplyUnsafe(f8);
    }
    static fromHex(f8, b6 = false) {
      const { d: E8, a: B4 } = e4, C7 = n7.BYTES;
      f8 = W2("pointHex", f8, C7), Tt("zip215", b6);
      const A6 = f8.slice(), U3 = f8[C7 - 1];
      A6[C7 - 1] = U3 & -129;
      const _6 = Et(A6), T6 = b6 ? D4 : n7.ORDER;
      ft("pointHex.y", _6, G2, T6);
      const $5 = c8(_6 * _6), R4 = c8($5 - j4), V5 = c8(E8 * $5 - B4);
      let { isValid: Y4, value: Z3 } = p6(R4, V5);
      if (!Y4) throw new Error("Point.fromHex: invalid y coordinate");
      const X3 = (Z3 & j4) === j4, et2 = (U3 & 128) !== 0;
      if (!b6 && Z3 === G2 && et2) throw new Error("Point.fromHex: x=0 and x_0=1");
      return et2 !== X3 && (Z3 = c8(-Z3)), d6.fromAffine({ x: Z3, y: _6 });
    }
    static fromPrivateKey(f8) {
      return O6(f8).point;
    }
    toRawBytes() {
      const { x: f8, y: b6 } = this.toAffine(), E8 = Nt(b6, n7.BYTES);
      return E8[E8.length - 1] |= f8 & j4 ? 128 : 0, E8;
    }
    toHex() {
      return Ft(this.toRawBytes());
    }
  }
  d6.BASE = new d6(e4.Gx, e4.Gy, j4, c8(e4.Gx * e4.Gy)), d6.ZERO = new d6(G2, j4, j4, G2);
  const { BASE: m5, ZERO: F5 } = d6, q4 = lr(d6, u4 * 8);
  function z6(y7) {
    return H3(y7, r5);
  }
  function I5(y7) {
    return z6(Et(y7));
  }
  function O6(y7) {
    const f8 = n7.BYTES;
    y7 = W2("private key", y7, f8);
    const b6 = W2("hashed private key", s5(y7), 2 * f8), E8 = w7(b6.slice(0, f8)), B4 = b6.slice(f8, 2 * f8), C7 = I5(E8), A6 = m5.multiply(C7), U3 = A6.toRawBytes();
    return { head: E8, prefix: B4, scalar: C7, point: A6, pointBytes: U3 };
  }
  function ot2(y7) {
    return O6(y7).pointBytes;
  }
  function tt3(y7 = new Uint8Array(), ...f8) {
    const b6 = ye(...f8);
    return I5(s5(h7(b6, W2("context", y7), !!o6)));
  }
  function st2(y7, f8, b6 = {}) {
    y7 = W2("message", y7), o6 && (y7 = o6(y7));
    const { prefix: E8, scalar: B4, pointBytes: C7 } = O6(f8), A6 = tt3(b6.context, E8, y7), U3 = m5.multiply(A6).toRawBytes(), _6 = tt3(b6.context, U3, C7, y7), T6 = z6(A6 + _6 * B4);
    ft("signature.s", T6, G2, r5);
    const $5 = ye(U3, Nt(T6, n7.BYTES));
    return W2("result", $5, n7.BYTES * 2);
  }
  const at2 = Er;
  function Ct3(y7, f8, b6, E8 = at2) {
    const { context: B4, zip215: C7 } = E8, A6 = n7.BYTES;
    y7 = W2("signature", y7, 2 * A6), f8 = W2("message", f8), b6 = W2("publicKey", b6, A6), C7 !== void 0 && Tt("zip215", C7), o6 && (f8 = o6(f8));
    const U3 = Et(y7.slice(A6, 2 * A6));
    let _6, T6, $5;
    try {
      _6 = d6.fromHex(b6, C7), T6 = d6.fromHex(y7.slice(0, A6), C7), $5 = m5.multiplyUnsafe(U3);
    } catch {
      return false;
    }
    if (!C7 && _6.isSmallOrder()) return false;
    const R4 = tt3(B4, T6.toRawBytes(), _6.toRawBytes(), f8);
    return T6.add(_6.multiplyUnsafe(R4)).subtract($5).clearCofactor().equals(d6.ZERO);
  }
  return m5._setWindowSize(8), { CURVE: e4, getPublicKey: ot2, sign: st2, verify: Ct3, ExtendedPoint: d6, utils: { getExtendedPublicKey: O6, randomPrivateKey: () => a5(n7.BYTES), precompute(y7 = 8, f8 = d6.BASE) {
    return f8._setWindowSize(y7), f8.multiply(BigInt(3)), f8;
  } } };
}
BigInt(0), BigInt(1);
var kt = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949");
var Ue = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");
BigInt(0);
var xr = BigInt(1);
var Te = BigInt(2);
BigInt(3);
var Br = BigInt(5);
var Cr = BigInt(8);
function Ar(t3) {
  const e4 = BigInt(10), n7 = BigInt(20), r5 = BigInt(40), o6 = BigInt(80), s5 = kt, u4 = t3 * t3 % s5 * t3 % s5, i6 = J2(u4, Te, s5) * u4 % s5, D4 = J2(i6, xr, s5) * t3 % s5, c8 = J2(D4, Br, s5) * D4 % s5, l9 = J2(c8, e4, s5) * c8 % s5, p6 = J2(l9, n7, s5) * l9 % s5, w7 = J2(p6, r5, s5) * p6 % s5, h7 = J2(w7, o6, s5) * w7 % s5, g5 = J2(h7, o6, s5) * w7 % s5, S5 = J2(g5, e4, s5) * c8 % s5;
  return { pow_p_5_8: J2(S5, Te, s5) * t3 % s5, b2: u4 };
}
function mr(t3) {
  return t3[0] &= 248, t3[31] &= 127, t3[31] |= 64, t3;
}
function _r(t3, e4) {
  const n7 = kt, r5 = H3(e4 * e4 * e4, n7), o6 = H3(r5 * r5 * e4, n7), s5 = Ar(t3 * o6).pow_p_5_8;
  let a5 = H3(t3 * r5 * s5, n7);
  const u4 = H3(e4 * a5 * a5, n7), i6 = a5, D4 = H3(a5 * Ue, n7), c8 = u4 === t3, l9 = u4 === H3(-t3, n7), p6 = u4 === H3(-t3 * Ue, n7);
  return c8 && (a5 = i6), (l9 || p6) && (a5 = D4), ur(a5, n7) && (a5 = H3(-a5, n7)), { isValid: c8 || l9, value: a5 };
}
var Sr = (() => _e(kt, void 0, true))();
var vr = (() => ({ a: BigInt(-1), d: BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"), Fp: Sr, n: BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"), h: Cr, Gx: BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"), Gy: BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"), hash: Kn, randomBytes: he, adjustScalarBytes: mr, uvRatio: _r }))();
var Rt = (() => yr(vr))();
var jt = "EdDSA";
var Zt = "JWT";
var ut = ".";
var Dt = "base64url";
var Gt = "utf8";
var xt = "utf8";
var Vt = ":";
var Yt = "did";
var Jt = "key";
var dt = "base58btc";
var Kt = "z";
var Wt = "K36";
var Ne = 32;
function Xt(t3) {
  return globalThis.Buffer != null ? new Uint8Array(t3.buffer, t3.byteOffset, t3.byteLength) : t3;
}
function Le(t3 = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? Xt(globalThis.Buffer.allocUnsafe(t3)) : new Uint8Array(t3);
}
function Oe(t3, e4) {
  e4 || (e4 = t3.reduce((o6, s5) => o6 + s5.length, 0));
  const n7 = Le(e4);
  let r5 = 0;
  for (const o6 of t3) n7.set(o6, r5), r5 += o6.length;
  return Xt(n7);
}
function Ir(t3, e4) {
  if (t3.length >= 255) throw new TypeError("Alphabet too long");
  for (var n7 = new Uint8Array(256), r5 = 0; r5 < n7.length; r5++) n7[r5] = 255;
  for (var o6 = 0; o6 < t3.length; o6++) {
    var s5 = t3.charAt(o6), a5 = s5.charCodeAt(0);
    if (n7[a5] !== 255) throw new TypeError(s5 + " is ambiguous");
    n7[a5] = o6;
  }
  var u4 = t3.length, i6 = t3.charAt(0), D4 = Math.log(u4) / Math.log(256), c8 = Math.log(256) / Math.log(u4);
  function l9(h7) {
    if (h7 instanceof Uint8Array || (ArrayBuffer.isView(h7) ? h7 = new Uint8Array(h7.buffer, h7.byteOffset, h7.byteLength) : Array.isArray(h7) && (h7 = Uint8Array.from(h7))), !(h7 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (h7.length === 0) return "";
    for (var g5 = 0, S5 = 0, v8 = 0, L5 = h7.length; v8 !== L5 && h7[v8] === 0; ) v8++, g5++;
    for (var d6 = (L5 - v8) * c8 + 1 >>> 0, m5 = new Uint8Array(d6); v8 !== L5; ) {
      for (var F5 = h7[v8], q4 = 0, z6 = d6 - 1; (F5 !== 0 || q4 < S5) && z6 !== -1; z6--, q4++) F5 += 256 * m5[z6] >>> 0, m5[z6] = F5 % u4 >>> 0, F5 = F5 / u4 >>> 0;
      if (F5 !== 0) throw new Error("Non-zero carry");
      S5 = q4, v8++;
    }
    for (var I5 = d6 - S5; I5 !== d6 && m5[I5] === 0; ) I5++;
    for (var O6 = i6.repeat(g5); I5 < d6; ++I5) O6 += t3.charAt(m5[I5]);
    return O6;
  }
  function p6(h7) {
    if (typeof h7 != "string") throw new TypeError("Expected String");
    if (h7.length === 0) return new Uint8Array();
    var g5 = 0;
    if (h7[g5] !== " ") {
      for (var S5 = 0, v8 = 0; h7[g5] === i6; ) S5++, g5++;
      for (var L5 = (h7.length - g5) * D4 + 1 >>> 0, d6 = new Uint8Array(L5); h7[g5]; ) {
        var m5 = n7[h7.charCodeAt(g5)];
        if (m5 === 255) return;
        for (var F5 = 0, q4 = L5 - 1; (m5 !== 0 || F5 < v8) && q4 !== -1; q4--, F5++) m5 += u4 * d6[q4] >>> 0, d6[q4] = m5 % 256 >>> 0, m5 = m5 / 256 >>> 0;
        if (m5 !== 0) throw new Error("Non-zero carry");
        v8 = F5, g5++;
      }
      if (h7[g5] !== " ") {
        for (var z6 = L5 - v8; z6 !== L5 && d6[z6] === 0; ) z6++;
        for (var I5 = new Uint8Array(S5 + (L5 - z6)), O6 = S5; z6 !== L5; ) I5[O6++] = d6[z6++];
        return I5;
      }
    }
  }
  function w7(h7) {
    var g5 = p6(h7);
    if (g5) return g5;
    throw new Error(`Non-${e4} character`);
  }
  return { encode: l9, decodeUnsafe: p6, decode: w7 };
}
var Ur = Ir;
var Tr = Ur;
var He = (t3) => {
  if (t3 instanceof Uint8Array && t3.constructor.name === "Uint8Array") return t3;
  if (t3 instanceof ArrayBuffer) return new Uint8Array(t3);
  if (ArrayBuffer.isView(t3)) return new Uint8Array(t3.buffer, t3.byteOffset, t3.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Fr = (t3) => new TextEncoder().encode(t3);
var Nr = (t3) => new TextDecoder().decode(t3);
var Lr = class {
  constructor(e4, n7, r5) {
    this.name = e4, this.prefix = n7, this.baseEncode = r5;
  }
  encode(e4) {
    if (e4 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e4)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var Or = class {
  constructor(e4, n7, r5) {
    if (this.name = e4, this.prefix = n7, n7.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = n7.codePointAt(0), this.baseDecode = r5;
  }
  decode(e4) {
    if (typeof e4 == "string") {
      if (e4.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e4)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e4.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e4) {
    return ze(this, e4);
  }
};
var Hr = class {
  constructor(e4) {
    this.decoders = e4;
  }
  or(e4) {
    return ze(this, e4);
  }
  decode(e4) {
    const n7 = e4[0], r5 = this.decoders[n7];
    if (r5) return r5.decode(e4);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e4)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var ze = (t3, e4) => new Hr({ ...t3.decoders || { [t3.prefix]: t3 }, ...e4.decoders || { [e4.prefix]: e4 } });
var zr = class {
  constructor(e4, n7, r5, o6) {
    this.name = e4, this.prefix = n7, this.baseEncode = r5, this.baseDecode = o6, this.encoder = new Lr(e4, n7, r5), this.decoder = new Or(e4, n7, o6);
  }
  encode(e4) {
    return this.encoder.encode(e4);
  }
  decode(e4) {
    return this.decoder.decode(e4);
  }
};
var Bt = ({ name: t3, prefix: e4, encode: n7, decode: r5 }) => new zr(t3, e4, n7, r5);
var ht = ({ prefix: t3, name: e4, alphabet: n7 }) => {
  const { encode: r5, decode: o6 } = Tr(n7, e4);
  return Bt({ prefix: t3, name: e4, encode: r5, decode: (s5) => He(o6(s5)) });
};
var Mr = (t3, e4, n7, r5) => {
  const o6 = {};
  for (let c8 = 0; c8 < e4.length; ++c8) o6[e4[c8]] = c8;
  let s5 = t3.length;
  for (; t3[s5 - 1] === "="; ) --s5;
  const a5 = new Uint8Array(s5 * n7 / 8 | 0);
  let u4 = 0, i6 = 0, D4 = 0;
  for (let c8 = 0; c8 < s5; ++c8) {
    const l9 = o6[t3[c8]];
    if (l9 === void 0) throw new SyntaxError(`Non-${r5} character`);
    i6 = i6 << n7 | l9, u4 += n7, u4 >= 8 && (u4 -= 8, a5[D4++] = 255 & i6 >> u4);
  }
  if (u4 >= n7 || 255 & i6 << 8 - u4) throw new SyntaxError("Unexpected end of data");
  return a5;
};
var qr = (t3, e4, n7) => {
  const r5 = e4[e4.length - 1] === "=", o6 = (1 << n7) - 1;
  let s5 = "", a5 = 0, u4 = 0;
  for (let i6 = 0; i6 < t3.length; ++i6) for (u4 = u4 << 8 | t3[i6], a5 += 8; a5 > n7; ) a5 -= n7, s5 += e4[o6 & u4 >> a5];
  if (a5 && (s5 += e4[o6 & u4 << n7 - a5]), r5) for (; s5.length * n7 & 7; ) s5 += "=";
  return s5;
};
var k5 = ({ name: t3, prefix: e4, bitsPerChar: n7, alphabet: r5 }) => Bt({ prefix: e4, name: t3, encode(o6) {
  return qr(o6, r5, n7);
}, decode(o6) {
  return Mr(o6, r5, n7, t3);
} });
var $r = Bt({ prefix: "\0", name: "identity", encode: (t3) => Nr(t3), decode: (t3) => Fr(t3) });
var kr = Object.freeze({ __proto__: null, identity: $r });
var Rr = k5({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var jr = Object.freeze({ __proto__: null, base2: Rr });
var Zr = k5({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Gr = Object.freeze({ __proto__: null, base8: Zr });
var Vr = ht({ prefix: "9", name: "base10", alphabet: "0123456789" });
var Yr = Object.freeze({ __proto__: null, base10: Vr });
var Jr = k5({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var Kr = k5({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var Wr = Object.freeze({ __proto__: null, base16: Jr, base16upper: Kr });
var Xr = k5({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var Pr = k5({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var Qr = k5({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var to = k5({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var eo = k5({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var no = k5({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var ro = k5({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var oo = k5({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var so = k5({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var io = Object.freeze({ __proto__: null, base32: Xr, base32upper: Pr, base32pad: Qr, base32padupper: to, base32hex: eo, base32hexupper: no, base32hexpad: ro, base32hexpadupper: oo, base32z: so });
var uo = ht({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var co = ht({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var ao = Object.freeze({ __proto__: null, base36: uo, base36upper: co });
var fo = ht({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Do = ht({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var ho = Object.freeze({ __proto__: null, base58btc: fo, base58flickr: Do });
var lo = k5({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var bo = k5({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var po = k5({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var wo = k5({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var Eo = Object.freeze({ __proto__: null, base64: lo, base64pad: bo, base64url: po, base64urlpad: wo });
var Me = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var go = Me.reduce((t3, e4, n7) => (t3[n7] = e4, t3), []);
var yo = Me.reduce((t3, e4, n7) => (t3[e4.codePointAt(0)] = n7, t3), []);
function xo(t3) {
  return t3.reduce((e4, n7) => (e4 += go[n7], e4), "");
}
function Bo(t3) {
  const e4 = [];
  for (const n7 of t3) {
    const r5 = yo[n7.codePointAt(0)];
    if (r5 === void 0) throw new Error(`Non-base256emoji character: ${n7}`);
    e4.push(r5);
  }
  return new Uint8Array(e4);
}
var Co = Bt({ prefix: "🚀", name: "base256emoji", encode: xo, decode: Bo });
var Ao = Object.freeze({ __proto__: null, base256emoji: Co });
var mo = $e;
var qe = 128;
var _o = 127;
var So = ~_o;
var vo = Math.pow(2, 31);
function $e(t3, e4, n7) {
  e4 = e4 || [], n7 = n7 || 0;
  for (var r5 = n7; t3 >= vo; ) e4[n7++] = t3 & 255 | qe, t3 /= 128;
  for (; t3 & So; ) e4[n7++] = t3 & 255 | qe, t3 >>>= 7;
  return e4[n7] = t3 | 0, $e.bytes = n7 - r5 + 1, e4;
}
var Io = Pt;
var Uo = 128;
var ke = 127;
function Pt(t3, r5) {
  var n7 = 0, r5 = r5 || 0, o6 = 0, s5 = r5, a5, u4 = t3.length;
  do {
    if (s5 >= u4) throw Pt.bytes = 0, new RangeError("Could not decode varint");
    a5 = t3[s5++], n7 += o6 < 28 ? (a5 & ke) << o6 : (a5 & ke) * Math.pow(2, o6), o6 += 7;
  } while (a5 >= Uo);
  return Pt.bytes = s5 - r5, n7;
}
var To = Math.pow(2, 7);
var Fo = Math.pow(2, 14);
var No = Math.pow(2, 21);
var Lo = Math.pow(2, 28);
var Oo = Math.pow(2, 35);
var Ho = Math.pow(2, 42);
var zo = Math.pow(2, 49);
var Mo = Math.pow(2, 56);
var qo = Math.pow(2, 63);
var $o = function(t3) {
  return t3 < To ? 1 : t3 < Fo ? 2 : t3 < No ? 3 : t3 < Lo ? 4 : t3 < Oo ? 5 : t3 < Ho ? 6 : t3 < zo ? 7 : t3 < Mo ? 8 : t3 < qo ? 9 : 10;
};
var ko = { encode: mo, decode: Io, encodingLength: $o };
var Re = ko;
var je = (t3, e4, n7 = 0) => (Re.encode(t3, e4, n7), e4);
var Ze = (t3) => Re.encodingLength(t3);
var Qt = (t3, e4) => {
  const n7 = e4.byteLength, r5 = Ze(t3), o6 = r5 + Ze(n7), s5 = new Uint8Array(o6 + n7);
  return je(t3, s5, 0), je(n7, s5, r5), s5.set(e4, o6), new Ro(t3, n7, e4, s5);
};
var Ro = class {
  constructor(e4, n7, r5, o6) {
    this.code = e4, this.size = n7, this.digest = r5, this.bytes = o6;
  }
};
var Ge = ({ name: t3, code: e4, encode: n7 }) => new jo(t3, e4, n7);
var jo = class {
  constructor(e4, n7, r5) {
    this.name = e4, this.code = n7, this.encode = r5;
  }
  digest(e4) {
    if (e4 instanceof Uint8Array) {
      const n7 = this.encode(e4);
      return n7 instanceof Uint8Array ? Qt(this.code, n7) : n7.then((r5) => Qt(this.code, r5));
    } else throw Error("Unknown type, must be binary type");
  }
};
var Ve = (t3) => async (e4) => new Uint8Array(await crypto.subtle.digest(t3, e4));
var Zo = Ge({ name: "sha2-256", code: 18, encode: Ve("SHA-256") });
var Go = Ge({ name: "sha2-512", code: 19, encode: Ve("SHA-512") });
var Vo = Object.freeze({ __proto__: null, sha256: Zo, sha512: Go });
var Ye = 0;
var Yo = "identity";
var Je = He;
var Jo = (t3) => Qt(Ye, Je(t3));
var Ko = { code: Ye, name: Yo, encode: Je, digest: Jo };
var Wo = Object.freeze({ __proto__: null, identity: Ko });
new TextEncoder(), new TextDecoder();
var Ke = { ...kr, ...jr, ...Gr, ...Yr, ...Wr, ...io, ...ao, ...ho, ...Eo, ...Ao };
({ ...Vo, ...Wo });
function We(t3, e4, n7, r5) {
  return { name: t3, prefix: e4, encoder: { name: t3, prefix: e4, encode: n7 }, decoder: { decode: r5 } };
}
var Xe = We("utf8", "u", (t3) => "u" + new TextDecoder("utf8").decode(t3), (t3) => new TextEncoder().encode(t3.substring(1)));
var te = We("ascii", "a", (t3) => {
  let e4 = "a";
  for (let n7 = 0; n7 < t3.length; n7++) e4 += String.fromCharCode(t3[n7]);
  return e4;
}, (t3) => {
  t3 = t3.substring(1);
  const e4 = Le(t3.length);
  for (let n7 = 0; n7 < t3.length; n7++) e4[n7] = t3.charCodeAt(n7);
  return e4;
});
var Pe = { utf8: Xe, "utf-8": Xe, hex: Ke.base16, latin1: te, ascii: te, binary: te, ...Ke };
function ct(t3, e4 = "utf8") {
  const n7 = Pe[e4];
  if (!n7) throw new Error(`Unsupported encoding "${e4}"`);
  return (e4 === "utf8" || e4 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(t3.buffer, t3.byteOffset, t3.byteLength).toString("utf8") : n7.encoder.encode(t3).substring(1);
}
function rt(t3, e4 = "utf8") {
  const n7 = Pe[e4];
  if (!n7) throw new Error(`Unsupported encoding "${e4}"`);
  return (e4 === "utf8" || e4 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? Xt(globalThis.Buffer.from(t3, "utf-8")) : n7.decoder.decode(`${n7.prefix}${t3}`);
}
function lt(t3) {
  return safeJsonParse5(ct(rt(t3, Dt), Gt));
}
function bt(t3) {
  return ct(rt(safeJsonStringify6(t3), Gt), Dt);
}
function Qe(t3) {
  const e4 = rt(Wt, dt), n7 = Kt + ct(Oe([e4, t3]), dt);
  return [Yt, Jt, n7].join(Vt);
}
function en(t3) {
  return ct(t3, Dt);
}
function nn(t3) {
  return rt(t3, Dt);
}
function rn(t3) {
  return rt([bt(t3.header), bt(t3.payload)].join(ut), xt);
}
function on(t3) {
  return [bt(t3.header), bt(t3.payload), en(t3.signature)].join(ut);
}
function sn(t3) {
  const e4 = t3.split(ut), n7 = lt(e4[0]), r5 = lt(e4[1]), o6 = nn(e4[2]), s5 = rt(e4.slice(0, 2).join(ut), xt);
  return { header: n7, payload: r5, signature: o6, data: s5 };
}
function Po(t3 = he(Ne)) {
  const e4 = Rt.getPublicKey(t3);
  return { secretKey: Oe([t3, e4]), publicKey: e4 };
}
async function Qo(t3, e4, n7, r5, o6 = (0, import_time2.fromMiliseconds)(Date.now())) {
  const s5 = { alg: jt, typ: Zt }, a5 = Qe(r5.publicKey), u4 = o6 + n7, i6 = { iss: a5, sub: t3, aud: e4, iat: o6, exp: u4 }, D4 = rn({ header: s5, payload: i6 }), c8 = Rt.sign(D4, r5.secretKey.slice(0, 32));
  return on({ header: s5, payload: i6, signature: c8 });
}

// node_modules/@walletconnect/utils/dist/index.es.js
var import_dist946 = __toESM(require_dist());
var import_dist947 = __toESM(require_dist2());
var import_dist948 = __toESM(require_dist3());

// node_modules/@walletconnect/utils/node_modules/detect-browser/es/index.js
var import_dist82 = __toESM(require_dist());
var import_dist83 = __toESM(require_dist2());
var import_dist84 = __toESM(require_dist3());
var __spreadArray = function(to4, from8, pack) {
  if (pack || arguments.length === 2) for (var i6 = 0, l9 = from8.length, ar4; i6 < l9; i6++) {
    if (ar4 || !(i6 in from8)) {
      if (!ar4) ar4 = Array.prototype.slice.call(from8, 0, i6);
      ar4[i6] = from8[i6];
    }
  }
  return to4.concat(ar4 || Array.prototype.slice.call(from8));
};
var BrowserInfo2 = (
  /** @class */
  /* @__PURE__ */ function() {
    function BrowserInfo3(name2, version3, os2) {
      this.name = name2;
      this.version = version3;
      this.os = os2;
      this.type = "browser";
    }
    return BrowserInfo3;
  }()
);
var NodeInfo2 = (
  /** @class */
  /* @__PURE__ */ function() {
    function NodeInfo3(version3) {
      this.version = version3;
      this.type = "node";
      this.name = "node";
      this.os = process.platform;
    }
    return NodeInfo3;
  }()
);
var SearchBotDeviceInfo2 = (
  /** @class */
  /* @__PURE__ */ function() {
    function SearchBotDeviceInfo3(name2, version3, os2, bot) {
      this.name = name2;
      this.version = version3;
      this.os = os2;
      this.bot = bot;
      this.type = "bot-device";
    }
    return SearchBotDeviceInfo3;
  }()
);
var BotInfo2 = (
  /** @class */
  /* @__PURE__ */ function() {
    function BotInfo3() {
      this.type = "bot";
      this.bot = true;
      this.name = "bot";
      this.version = null;
      this.os = null;
    }
    return BotInfo3;
  }()
);
var ReactNativeInfo2 = (
  /** @class */
  /* @__PURE__ */ function() {
    function ReactNativeInfo3() {
      this.type = "react-native";
      this.name = "react-native";
      this.version = null;
      this.os = null;
    }
    return ReactNativeInfo3;
  }()
);
var SEARCHBOX_UA_REGEX2 = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX2 = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
var REQUIRED_VERSION_PARTS2 = 3;
var userAgentRules2 = [
  ["aol", /AOLShield\/([0-9\._]+)/],
  ["edge", /Edge\/([0-9\._]+)/],
  ["edge-ios", /EdgiOS\/([0-9\._]+)/],
  ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
  ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
  ["samsung", /SamsungBrowser\/([0-9\.]+)/],
  ["silk", /\bSilk\/([0-9._-]+)\b/],
  ["miui", /MiuiBrowser\/([0-9\.]+)$/],
  ["beaker", /BeakerBrowser\/([0-9\.]+)/],
  ["edge-chromium", /EdgA?\/([0-9\.]+)/],
  [
    "chromium-webview",
    /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
  ],
  ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
  ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
  ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
  ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
  ["fxios", /FxiOS\/([0-9\.]+)/],
  ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
  ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
  ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
  ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
  ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
  ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
  ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
  ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
  ["ie", /MSIE\s(7\.0)/],
  ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
  ["android", /Android\s([0-9\.]+)/],
  ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
  ["safari", /Version\/([0-9\._]+).*Safari/],
  ["facebook", /FB[AS]V\/([0-9\.]+)/],
  ["instagram", /Instagram\s([0-9\.]+)/],
  ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
  ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
  ["curl", /^curl\/([0-9\.]+)$/],
  ["searchbot", SEARCHBOX_UA_REGEX2]
];
var operatingSystemRules2 = [
  ["iOS", /iP(hone|od|ad)/],
  ["Android OS", /Android/],
  ["BlackBerry OS", /BlackBerry|BB10/],
  ["Windows Mobile", /IEMobile/],
  ["Amazon OS", /Kindle/],
  ["Windows 3.11", /Win16/],
  ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
  ["Windows 98", /(Windows 98)|(Win98)/],
  ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
  ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
  ["Windows Server 2003", /(Windows NT 5.2)/],
  ["Windows Vista", /(Windows NT 6.0)/],
  ["Windows 7", /(Windows NT 6.1)/],
  ["Windows 8", /(Windows NT 6.2)/],
  ["Windows 8.1", /(Windows NT 6.3)/],
  ["Windows 10", /(Windows NT 10.0)/],
  ["Windows ME", /Windows ME/],
  ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
  ["Open BSD", /OpenBSD/],
  ["Sun OS", /SunOS/],
  ["Chrome OS", /CrOS/],
  ["Linux", /(Linux)|(X11)/],
  ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
  ["QNX", /QNX/],
  ["BeOS", /BeOS/],
  ["OS/2", /OS\/2/]
];
function detect2(userAgent) {
  if (!!userAgent) {
    return parseUserAgent2(userAgent);
  }
  if (typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative") {
    return new ReactNativeInfo2();
  }
  if (typeof navigator !== "undefined") {
    return parseUserAgent2(navigator.userAgent);
  }
  return getNodeVersion2();
}
function matchUserAgent2(ua2) {
  return ua2 !== "" && userAgentRules2.reduce(function(matched, _a) {
    var browser = _a[0], regex = _a[1];
    if (matched) {
      return matched;
    }
    var uaMatch = regex.exec(ua2);
    return !!uaMatch && [browser, uaMatch];
  }, false);
}
function parseUserAgent2(ua2) {
  var matchedRule = matchUserAgent2(ua2);
  if (!matchedRule) {
    return null;
  }
  var name2 = matchedRule[0], match = matchedRule[1];
  if (name2 === "searchbot") {
    return new BotInfo2();
  }
  var versionParts = match[1] && match[1].split(".").join("_").split("_").slice(0, 3);
  if (versionParts) {
    if (versionParts.length < REQUIRED_VERSION_PARTS2) {
      versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts2(REQUIRED_VERSION_PARTS2 - versionParts.length), true);
    }
  } else {
    versionParts = [];
  }
  var version3 = versionParts.join(".");
  var os2 = detectOS3(ua2);
  var searchBotMatch = SEARCHBOT_OS_REGEX2.exec(ua2);
  if (searchBotMatch && searchBotMatch[1]) {
    return new SearchBotDeviceInfo2(name2, version3, os2, searchBotMatch[1]);
  }
  return new BrowserInfo2(name2, version3, os2);
}
function detectOS3(ua2) {
  for (var ii2 = 0, count = operatingSystemRules2.length; ii2 < count; ii2++) {
    var _a = operatingSystemRules2[ii2], os2 = _a[0], regex = _a[1];
    var match = regex.exec(ua2);
    if (match) {
      return os2;
    }
  }
  return null;
}
function getNodeVersion2() {
  var isNode3 = typeof process !== "undefined" && process.version;
  return isNode3 ? new NodeInfo2(process.version.slice(1)) : null;
}
function createVersionParts2(count) {
  var output = [];
  for (var ii2 = 0; ii2 < count; ii2++) {
    output.push("0");
  }
  return output;
}

// node_modules/@walletconnect/utils/dist/index.es.js
var import_time3 = __toESM(require_cjs4());
var import_window_getters = __toESM(require_cjs5());
var import_window_metadata = __toESM(require_cjs6());

// node_modules/viem/_esm/index.js
var import_dist841 = __toESM(require_dist());
var import_dist842 = __toESM(require_dist2());
var import_dist843 = __toESM(require_dist3());

// node_modules/viem/_esm/actions/getContract.js
var import_dist265 = __toESM(require_dist(), 1);
var import_dist266 = __toESM(require_dist2(), 1);
var import_dist267 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/getAction.js
var import_dist85 = __toESM(require_dist(), 1);
var import_dist86 = __toESM(require_dist2(), 1);
var import_dist87 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/createContractEventFilter.js
var import_dist97 = __toESM(require_dist(), 1);
var import_dist98 = __toESM(require_dist2(), 1);
var import_dist99 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/abi/encodeEventTopics.js
var import_dist91 = __toESM(require_dist(), 1);
var import_dist92 = __toESM(require_dist2(), 1);
var import_dist93 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/errors/log.js
var import_dist88 = __toESM(require_dist(), 1);
var import_dist89 = __toESM(require_dist2(), 1);
var import_dist90 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/filters/createFilterRequestScope.js
var import_dist94 = __toESM(require_dist(), 1);
var import_dist95 = __toESM(require_dist2(), 1);
var import_dist96 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/estimateContractGas.js
var import_dist199 = __toESM(require_dist(), 1);
var import_dist200 = __toESM(require_dist2(), 1);
var import_dist201 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/errors/getContractError.js
var import_dist100 = __toESM(require_dist(), 1);
var import_dist101 = __toESM(require_dist2(), 1);
var import_dist102 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/estimateGas.js
var import_dist196 = __toESM(require_dist(), 1);
var import_dist197 = __toESM(require_dist2(), 1);
var import_dist198 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/experimental/eip7702/utils/recoverAuthorizationAddress.js
var import_dist118 = __toESM(require_dist(), 1);
var import_dist119 = __toESM(require_dist2(), 1);
var import_dist120 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/recoverAddress.js
var import_dist109 = __toESM(require_dist(), 1);
var import_dist110 = __toESM(require_dist2(), 1);
var import_dist111 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js
var import_dist103 = __toESM(require_dist(), 1);
var import_dist104 = __toESM(require_dist2(), 1);
var import_dist105 = __toESM(require_dist3(), 1);
function publicKeyToAddress(publicKey) {
  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26);
  return checksumAddress(`0x${address}`);
}

// node_modules/viem/_esm/utils/signature/recoverPublicKey.js
var import_dist106 = __toESM(require_dist(), 1);
var import_dist107 = __toESM(require_dist2(), 1);
var import_dist108 = __toESM(require_dist3(), 1);
async function recoverPublicKey({ hash, signature }) {
  const hashHex = isHex(hash) ? hash : toHex(hash);
  const { secp256k1: secp256k12 } = await import("./secp256k1-5BHJUUB7.js");
  const signature_ = (() => {
    if (typeof signature === "object" && "r" in signature && "s" in signature) {
      const { r: r5, s: s5, v: v8, yParity } = signature;
      const yParityOrV2 = Number(yParity ?? v8);
      const recoveryBit2 = toRecoveryBit(yParityOrV2);
      return new secp256k12.Signature(hexToBigInt(r5), hexToBigInt(s5)).addRecoveryBit(recoveryBit2);
    }
    const signatureHex = isHex(signature) ? signature : toHex(signature);
    const yParityOrV = hexToNumber(`0x${signatureHex.slice(130)}`);
    const recoveryBit = toRecoveryBit(yParityOrV);
    return secp256k12.Signature.fromCompact(signatureHex.substring(2, 130)).addRecoveryBit(recoveryBit);
  })();
  const publicKey = signature_.recoverPublicKey(hashHex.substring(2)).toHex(false);
  return `0x${publicKey}`;
}
function toRecoveryBit(yParityOrV) {
  if (yParityOrV === 0 || yParityOrV === 1)
    return yParityOrV;
  if (yParityOrV === 27)
    return 0;
  if (yParityOrV === 28)
    return 1;
  throw new Error("Invalid yParityOrV value");
}

// node_modules/viem/_esm/utils/signature/recoverAddress.js
async function recoverAddress({ hash, signature }) {
  return publicKeyToAddress(await recoverPublicKey({ hash, signature }));
}

// node_modules/viem/_esm/experimental/eip7702/utils/hashAuthorization.js
var import_dist115 = __toESM(require_dist(), 1);
var import_dist116 = __toESM(require_dist2(), 1);
var import_dist117 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/encoding/toRlp.js
var import_dist112 = __toESM(require_dist(), 1);
var import_dist113 = __toESM(require_dist2(), 1);
var import_dist114 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/errors/getEstimateGasError.js
var import_dist124 = __toESM(require_dist(), 1);
var import_dist125 = __toESM(require_dist2(), 1);
var import_dist126 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/errors/estimateGas.js
var import_dist121 = __toESM(require_dist(), 1);
var import_dist122 = __toESM(require_dist2(), 1);
var import_dist123 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/prepareTransactionRequest.js
var import_dist190 = __toESM(require_dist(), 1);
var import_dist191 = __toESM(require_dist2(), 1);
var import_dist192 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/estimateFeesPerGas.js
var import_dist148 = __toESM(require_dist(), 1);
var import_dist149 = __toESM(require_dist2(), 1);
var import_dist150 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/errors/fee.js
var import_dist127 = __toESM(require_dist(), 1);
var import_dist128 = __toESM(require_dist2(), 1);
var import_dist129 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/estimateMaxPriorityFeePerGas.js
var import_dist145 = __toESM(require_dist(), 1);
var import_dist146 = __toESM(require_dist2(), 1);
var import_dist147 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getBlock.js
var import_dist139 = __toESM(require_dist(), 1);
var import_dist140 = __toESM(require_dist2(), 1);
var import_dist141 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/errors/block.js
var import_dist130 = __toESM(require_dist(), 1);
var import_dist131 = __toESM(require_dist2(), 1);
var import_dist132 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/formatters/block.js
var import_dist136 = __toESM(require_dist(), 1);
var import_dist137 = __toESM(require_dist2(), 1);
var import_dist138 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/formatters/transaction.js
var import_dist133 = __toESM(require_dist(), 1);
var import_dist134 = __toESM(require_dist2(), 1);
var import_dist135 = __toESM(require_dist3(), 1);
var transactionType = {
  "0x0": "legacy",
  "0x1": "eip2930",
  "0x2": "eip1559",
  "0x3": "eip4844",
  "0x4": "eip7702"
};
function formatTransaction(transaction) {
  const transaction_ = {
    ...transaction,
    blockHash: transaction.blockHash ? transaction.blockHash : null,
    blockNumber: transaction.blockNumber ? BigInt(transaction.blockNumber) : null,
    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : void 0,
    gas: transaction.gas ? BigInt(transaction.gas) : void 0,
    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : void 0,
    maxFeePerBlobGas: transaction.maxFeePerBlobGas ? BigInt(transaction.maxFeePerBlobGas) : void 0,
    maxFeePerGas: transaction.maxFeePerGas ? BigInt(transaction.maxFeePerGas) : void 0,
    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas ? BigInt(transaction.maxPriorityFeePerGas) : void 0,
    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : void 0,
    to: transaction.to ? transaction.to : null,
    transactionIndex: transaction.transactionIndex ? Number(transaction.transactionIndex) : null,
    type: transaction.type ? transactionType[transaction.type] : void 0,
    typeHex: transaction.type ? transaction.type : void 0,
    value: transaction.value ? BigInt(transaction.value) : void 0,
    v: transaction.v ? BigInt(transaction.v) : void 0
  };
  if (transaction.authorizationList)
    transaction_.authorizationList = formatAuthorizationList(transaction.authorizationList);
  transaction_.yParity = (() => {
    if (transaction.yParity)
      return Number(transaction.yParity);
    if (typeof transaction_.v === "bigint") {
      if (transaction_.v === 0n || transaction_.v === 27n)
        return 0;
      if (transaction_.v === 1n || transaction_.v === 28n)
        return 1;
      if (transaction_.v >= 35n)
        return transaction_.v % 2n === 0n ? 1 : 0;
    }
    return void 0;
  })();
  if (transaction_.type === "legacy") {
    delete transaction_.accessList;
    delete transaction_.maxFeePerBlobGas;
    delete transaction_.maxFeePerGas;
    delete transaction_.maxPriorityFeePerGas;
    delete transaction_.yParity;
  }
  if (transaction_.type === "eip2930") {
    delete transaction_.maxFeePerBlobGas;
    delete transaction_.maxFeePerGas;
    delete transaction_.maxPriorityFeePerGas;
  }
  if (transaction_.type === "eip1559") {
    delete transaction_.maxFeePerBlobGas;
  }
  return transaction_;
}
var defineTransaction = defineFormatter("transaction", formatTransaction);
function formatAuthorizationList(authorizationList) {
  return authorizationList.map((authorization) => ({
    contractAddress: authorization.address,
    chainId: Number(authorization.chainId),
    nonce: Number(authorization.nonce),
    r: authorization.r,
    s: authorization.s,
    yParity: Number(authorization.yParity)
  }));
}

// node_modules/viem/_esm/utils/formatters/block.js
function formatBlock(block) {
  const transactions = (block.transactions ?? []).map((transaction) => {
    if (typeof transaction === "string")
      return transaction;
    return formatTransaction(transaction);
  });
  return {
    ...block,
    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,
    blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : void 0,
    difficulty: block.difficulty ? BigInt(block.difficulty) : void 0,
    excessBlobGas: block.excessBlobGas ? BigInt(block.excessBlobGas) : void 0,
    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : void 0,
    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : void 0,
    hash: block.hash ? block.hash : null,
    logsBloom: block.logsBloom ? block.logsBloom : null,
    nonce: block.nonce ? block.nonce : null,
    number: block.number ? BigInt(block.number) : null,
    size: block.size ? BigInt(block.size) : void 0,
    timestamp: block.timestamp ? BigInt(block.timestamp) : void 0,
    transactions,
    totalDifficulty: block.totalDifficulty ? BigInt(block.totalDifficulty) : null
  };
}
var defineBlock = defineFormatter("block", formatBlock);

// node_modules/viem/_esm/actions/public/getGasPrice.js
var import_dist142 = __toESM(require_dist(), 1);
var import_dist143 = __toESM(require_dist2(), 1);
var import_dist144 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getTransactionCount.js
var import_dist151 = __toESM(require_dist(), 1);
var import_dist152 = __toESM(require_dist2(), 1);
var import_dist153 = __toESM(require_dist3(), 1);
async function getTransactionCount(client, { address, blockTag = "latest", blockNumber }) {
  const count = await client.request({
    method: "eth_getTransactionCount",
    params: [address, blockNumber ? numberToHex(blockNumber) : blockTag]
  }, { dedupe: Boolean(blockNumber) });
  return hexToNumber(count);
}

// node_modules/viem/_esm/utils/blob/blobsToCommitments.js
var import_dist154 = __toESM(require_dist(), 1);
var import_dist155 = __toESM(require_dist2(), 1);
var import_dist156 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/blob/blobsToProofs.js
var import_dist157 = __toESM(require_dist(), 1);
var import_dist158 = __toESM(require_dist2(), 1);
var import_dist159 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js
var import_dist166 = __toESM(require_dist(), 1);
var import_dist167 = __toESM(require_dist2(), 1);
var import_dist168 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js
var import_dist163 = __toESM(require_dist(), 1);
var import_dist164 = __toESM(require_dist2(), 1);
var import_dist165 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/hash/sha256.js
var import_dist160 = __toESM(require_dist(), 1);
var import_dist161 = __toESM(require_dist2(), 1);
var import_dist162 = __toESM(require_dist3(), 1);
init_sha256();

// node_modules/viem/_esm/utils/blob/toBlobSidecars.js
var import_dist181 = __toESM(require_dist(), 1);
var import_dist182 = __toESM(require_dist2(), 1);
var import_dist183 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/blob/toBlobs.js
var import_dist178 = __toESM(require_dist(), 1);
var import_dist179 = __toESM(require_dist2(), 1);
var import_dist180 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/constants/blob.js
var import_dist169 = __toESM(require_dist(), 1);
var import_dist170 = __toESM(require_dist2(), 1);
var import_dist171 = __toESM(require_dist3(), 1);
var blobsPerTransaction = 6;
var bytesPerFieldElement = 32;
var fieldElementsPerBlob = 4096;
var bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;
var maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction - // terminator byte (0x80).
1 - // zero byte (0x00) appended to each field element.
1 * fieldElementsPerBlob * blobsPerTransaction;

// node_modules/viem/_esm/errors/blob.js
var import_dist175 = __toESM(require_dist(), 1);
var import_dist176 = __toESM(require_dist2(), 1);
var import_dist177 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/constants/kzg.js
var import_dist172 = __toESM(require_dist(), 1);
var import_dist173 = __toESM(require_dist2(), 1);
var import_dist174 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/transaction/getTransactionType.js
var import_dist184 = __toESM(require_dist(), 1);
var import_dist185 = __toESM(require_dist2(), 1);
var import_dist186 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getChainId.js
var import_dist187 = __toESM(require_dist(), 1);
var import_dist188 = __toESM(require_dist2(), 1);
var import_dist189 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getBalance.js
var import_dist193 = __toESM(require_dist(), 1);
var import_dist194 = __toESM(require_dist2(), 1);
var import_dist195 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getContractEvents.js
var import_dist214 = __toESM(require_dist(), 1);
var import_dist215 = __toESM(require_dist2(), 1);
var import_dist216 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getLogs.js
var import_dist211 = __toESM(require_dist(), 1);
var import_dist212 = __toESM(require_dist2(), 1);
var import_dist213 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/abi/parseEventLogs.js
var import_dist205 = __toESM(require_dist(), 1);
var import_dist206 = __toESM(require_dist2(), 1);
var import_dist207 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/abi/decodeEventLog.js
var import_dist202 = __toESM(require_dist(), 1);
var import_dist203 = __toESM(require_dist2(), 1);
var import_dist204 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/formatters/log.js
var import_dist208 = __toESM(require_dist(), 1);
var import_dist209 = __toESM(require_dist2(), 1);
var import_dist210 = __toESM(require_dist3(), 1);
function formatLog(log, { args, eventName } = {}) {
  return {
    ...log,
    blockHash: log.blockHash ? log.blockHash : null,
    blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,
    logIndex: log.logIndex ? Number(log.logIndex) : null,
    transactionHash: log.transactionHash ? log.transactionHash : null,
    transactionIndex: log.transactionIndex ? Number(log.transactionIndex) : null,
    ...eventName ? { args, eventName } : {}
  };
}

// node_modules/viem/_esm/actions/public/readContract.js
var import_dist217 = __toESM(require_dist(), 1);
var import_dist218 = __toESM(require_dist2(), 1);
var import_dist219 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/simulateContract.js
var import_dist220 = __toESM(require_dist(), 1);
var import_dist221 = __toESM(require_dist2(), 1);
var import_dist222 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/watchContractEvent.js
var import_dist244 = __toESM(require_dist(), 1);
var import_dist245 = __toESM(require_dist2(), 1);
var import_dist246 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/observe.js
var import_dist223 = __toESM(require_dist(), 1);
var import_dist224 = __toESM(require_dist2(), 1);
var import_dist225 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/poll.js
var import_dist229 = __toESM(require_dist(), 1);
var import_dist230 = __toESM(require_dist2(), 1);
var import_dist231 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/wait.js
var import_dist226 = __toESM(require_dist(), 1);
var import_dist227 = __toESM(require_dist2(), 1);
var import_dist228 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getBlockNumber.js
var import_dist235 = __toESM(require_dist(), 1);
var import_dist236 = __toESM(require_dist2(), 1);
var import_dist237 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/promise/withCache.js
var import_dist232 = __toESM(require_dist(), 1);
var import_dist233 = __toESM(require_dist2(), 1);
var import_dist234 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getFilterChanges.js
var import_dist238 = __toESM(require_dist(), 1);
var import_dist239 = __toESM(require_dist2(), 1);
var import_dist240 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/uninstallFilter.js
var import_dist241 = __toESM(require_dist(), 1);
var import_dist242 = __toESM(require_dist2(), 1);
var import_dist243 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/writeContract.js
var import_dist262 = __toESM(require_dist(), 1);
var import_dist263 = __toESM(require_dist2(), 1);
var import_dist264 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/errors/account.js
var import_dist247 = __toESM(require_dist(), 1);
var import_dist248 = __toESM(require_dist2(), 1);
var import_dist249 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/sendTransaction.js
var import_dist259 = __toESM(require_dist(), 1);
var import_dist260 = __toESM(require_dist2(), 1);
var import_dist261 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/chain/assertCurrentChain.js
var import_dist250 = __toESM(require_dist(), 1);
var import_dist251 = __toESM(require_dist2(), 1);
var import_dist252 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/errors/getTransactionError.js
var import_dist253 = __toESM(require_dist(), 1);
var import_dist254 = __toESM(require_dist2(), 1);
var import_dist255 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/sendRawTransaction.js
var import_dist256 = __toESM(require_dist(), 1);
var import_dist257 = __toESM(require_dist2(), 1);
var import_dist258 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/sendTransaction.js
var supportsWalletNamespace = new LruMap(128);

// node_modules/viem/_esm/actions/public/getEip712Domain.js
var import_dist271 = __toESM(require_dist(), 1);
var import_dist272 = __toESM(require_dist2(), 1);
var import_dist273 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/errors/eip712.js
var import_dist268 = __toESM(require_dist(), 1);
var import_dist269 = __toESM(require_dist2(), 1);
var import_dist270 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/addChain.js
var import_dist274 = __toESM(require_dist(), 1);
var import_dist275 = __toESM(require_dist2(), 1);
var import_dist276 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/clients/createClient.js
var import_dist280 = __toESM(require_dist(), 1);
var import_dist281 = __toESM(require_dist2(), 1);
var import_dist282 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/uid.js
var import_dist277 = __toESM(require_dist(), 1);
var import_dist278 = __toESM(require_dist2(), 1);
var import_dist279 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/clients/transports/custom.js
var import_dist295 = __toESM(require_dist(), 1);
var import_dist296 = __toESM(require_dist2(), 1);
var import_dist297 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/clients/transports/createTransport.js
var import_dist292 = __toESM(require_dist(), 1);
var import_dist293 = __toESM(require_dist2(), 1);
var import_dist294 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/buildRequest.js
var import_dist289 = __toESM(require_dist(), 1);
var import_dist290 = __toESM(require_dist2(), 1);
var import_dist291 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/promise/withDedupe.js
var import_dist283 = __toESM(require_dist(), 1);
var import_dist284 = __toESM(require_dist2(), 1);
var import_dist285 = __toESM(require_dist3(), 1);
var promiseCache = new LruMap(8192);

// node_modules/viem/_esm/utils/promise/withRetry.js
var import_dist286 = __toESM(require_dist(), 1);
var import_dist287 = __toESM(require_dist2(), 1);
var import_dist288 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/clients/transports/fallback.js
var import_dist298 = __toESM(require_dist(), 1);
var import_dist299 = __toESM(require_dist2(), 1);
var import_dist300 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/clients/transports/http.js
var import_dist313 = __toESM(require_dist(), 1);
var import_dist314 = __toESM(require_dist2(), 1);
var import_dist315 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/errors/transport.js
var import_dist301 = __toESM(require_dist(), 1);
var import_dist302 = __toESM(require_dist2(), 1);
var import_dist303 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/rpc/http.js
var import_dist310 = __toESM(require_dist(), 1);
var import_dist311 = __toESM(require_dist2(), 1);
var import_dist312 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/promise/withTimeout.js
var import_dist304 = __toESM(require_dist(), 1);
var import_dist305 = __toESM(require_dist2(), 1);
var import_dist306 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/rpc/id.js
var import_dist307 = __toESM(require_dist(), 1);
var import_dist308 = __toESM(require_dist2(), 1);
var import_dist309 = __toESM(require_dist3(), 1);
function createIdStore() {
  return {
    current: 0,
    take() {
      return this.current++;
    },
    reset() {
      this.current = 0;
    }
  };
}
var idCache = createIdStore();

// node_modules/viem/_esm/clients/createPublicClient.js
var import_dist667 = __toESM(require_dist(), 1);
var import_dist668 = __toESM(require_dist2(), 1);
var import_dist669 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/clients/decorators/public.js
var import_dist664 = __toESM(require_dist(), 1);
var import_dist665 = __toESM(require_dist2(), 1);
var import_dist666 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/ens/getEnsAddress.js
var import_dist334 = __toESM(require_dist(), 1);
var import_dist335 = __toESM(require_dist2(), 1);
var import_dist336 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/ens/errors.js
var import_dist316 = __toESM(require_dist(), 1);
var import_dist317 = __toESM(require_dist2(), 1);
var import_dist318 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/ens/namehash.js
var import_dist322 = __toESM(require_dist(), 1);
var import_dist323 = __toESM(require_dist2(), 1);
var import_dist324 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/ens/encodedLabelToLabelhash.js
var import_dist319 = __toESM(require_dist(), 1);
var import_dist320 = __toESM(require_dist2(), 1);
var import_dist321 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/ens/packetToBytes.js
var import_dist331 = __toESM(require_dist(), 1);
var import_dist332 = __toESM(require_dist2(), 1);
var import_dist333 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/ens/encodeLabelhash.js
var import_dist325 = __toESM(require_dist(), 1);
var import_dist326 = __toESM(require_dist2(), 1);
var import_dist327 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/ens/labelhash.js
var import_dist328 = __toESM(require_dist(), 1);
var import_dist329 = __toESM(require_dist2(), 1);
var import_dist330 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/ens/getEnsAvatar.js
var import_dist349 = __toESM(require_dist(), 1);
var import_dist350 = __toESM(require_dist2(), 1);
var import_dist351 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/ens/avatar/parseAvatarRecord.js
var import_dist343 = __toESM(require_dist(), 1);
var import_dist344 = __toESM(require_dist2(), 1);
var import_dist345 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/ens/avatar/utils.js
var import_dist340 = __toESM(require_dist(), 1);
var import_dist341 = __toESM(require_dist2(), 1);
var import_dist342 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/errors/ens.js
var import_dist337 = __toESM(require_dist(), 1);
var import_dist338 = __toESM(require_dist2(), 1);
var import_dist339 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/ens/getEnsText.js
var import_dist346 = __toESM(require_dist(), 1);
var import_dist347 = __toESM(require_dist2(), 1);
var import_dist348 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/ens/getEnsName.js
var import_dist352 = __toESM(require_dist(), 1);
var import_dist353 = __toESM(require_dist2(), 1);
var import_dist354 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/ens/getEnsResolver.js
var import_dist355 = __toESM(require_dist(), 1);
var import_dist356 = __toESM(require_dist2(), 1);
var import_dist357 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/createAccessList.js
var import_dist358 = __toESM(require_dist(), 1);
var import_dist359 = __toESM(require_dist2(), 1);
var import_dist360 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/createBlockFilter.js
var import_dist361 = __toESM(require_dist(), 1);
var import_dist362 = __toESM(require_dist2(), 1);
var import_dist363 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/createEventFilter.js
var import_dist364 = __toESM(require_dist(), 1);
var import_dist365 = __toESM(require_dist2(), 1);
var import_dist366 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/createPendingTransactionFilter.js
var import_dist367 = __toESM(require_dist(), 1);
var import_dist368 = __toESM(require_dist2(), 1);
var import_dist369 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getBlobBaseFee.js
var import_dist370 = __toESM(require_dist(), 1);
var import_dist371 = __toESM(require_dist2(), 1);
var import_dist372 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getBlockTransactionCount.js
var import_dist373 = __toESM(require_dist(), 1);
var import_dist374 = __toESM(require_dist2(), 1);
var import_dist375 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getCode.js
var import_dist376 = __toESM(require_dist(), 1);
var import_dist377 = __toESM(require_dist2(), 1);
var import_dist378 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getFeeHistory.js
var import_dist382 = __toESM(require_dist(), 1);
var import_dist383 = __toESM(require_dist2(), 1);
var import_dist384 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/formatters/feeHistory.js
var import_dist379 = __toESM(require_dist(), 1);
var import_dist380 = __toESM(require_dist2(), 1);
var import_dist381 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getFilterLogs.js
var import_dist385 = __toESM(require_dist(), 1);
var import_dist386 = __toESM(require_dist2(), 1);
var import_dist387 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getProof.js
var import_dist532 = __toESM(require_dist(), 1);
var import_dist533 = __toESM(require_dist2(), 1);
var import_dist534 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/formatters/proof.js
var import_dist529 = __toESM(require_dist(), 1);
var import_dist530 = __toESM(require_dist2(), 1);
var import_dist531 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/index.js
var import_dist526 = __toESM(require_dist(), 1);
var import_dist527 = __toESM(require_dist2(), 1);
var import_dist528 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/chain/defineChain.js
var import_dist388 = __toESM(require_dist(), 1);
var import_dist389 = __toESM(require_dist2(), 1);
var import_dist390 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/chain/extractChain.js
var import_dist391 = __toESM(require_dist(), 1);
var import_dist392 = __toESM(require_dist2(), 1);
var import_dist393 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/rpc/compat.js
var import_dist400 = __toESM(require_dist(), 1);
var import_dist401 = __toESM(require_dist2(), 1);
var import_dist402 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/rpc/webSocket.js
var import_dist397 = __toESM(require_dist(), 1);
var import_dist398 = __toESM(require_dist2(), 1);
var import_dist399 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/rpc/socket.js
var import_dist394 = __toESM(require_dist(), 1);
var import_dist395 = __toESM(require_dist2(), 1);
var import_dist396 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/typedData.js
var import_dist409 = __toESM(require_dist(), 1);
var import_dist410 = __toESM(require_dist2(), 1);
var import_dist411 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/errors/typedData.js
var import_dist403 = __toESM(require_dist(), 1);
var import_dist404 = __toESM(require_dist2(), 1);
var import_dist405 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/hashTypedData.js
var import_dist406 = __toESM(require_dist(), 1);
var import_dist407 = __toESM(require_dist2(), 1);
var import_dist408 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/abi/decodeFunctionData.js
var import_dist412 = __toESM(require_dist(), 1);
var import_dist413 = __toESM(require_dist2(), 1);
var import_dist414 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/abi/encodeErrorResult.js
var import_dist415 = __toESM(require_dist(), 1);
var import_dist416 = __toESM(require_dist2(), 1);
var import_dist417 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/abi/encodeFunctionResult.js
var import_dist418 = __toESM(require_dist(), 1);
var import_dist419 = __toESM(require_dist2(), 1);
var import_dist420 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/abi/encodePacked.js
var import_dist421 = __toESM(require_dist(), 1);
var import_dist422 = __toESM(require_dist2(), 1);
var import_dist423 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/address/getContractAddress.js
var import_dist427 = __toESM(require_dist(), 1);
var import_dist428 = __toESM(require_dist2(), 1);
var import_dist429 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/data/isBytes.js
var import_dist424 = __toESM(require_dist(), 1);
var import_dist425 = __toESM(require_dist2(), 1);
var import_dist426 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/formatters/transactionReceipt.js
var import_dist430 = __toESM(require_dist(), 1);
var import_dist431 = __toESM(require_dist2(), 1);
var import_dist432 = __toESM(require_dist3(), 1);
var receiptStatuses = {
  "0x0": "reverted",
  "0x1": "success"
};
function formatTransactionReceipt(transactionReceipt) {
  const receipt = {
    ...transactionReceipt,
    blockNumber: transactionReceipt.blockNumber ? BigInt(transactionReceipt.blockNumber) : null,
    contractAddress: transactionReceipt.contractAddress ? transactionReceipt.contractAddress : null,
    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed ? BigInt(transactionReceipt.cumulativeGasUsed) : null,
    effectiveGasPrice: transactionReceipt.effectiveGasPrice ? BigInt(transactionReceipt.effectiveGasPrice) : null,
    gasUsed: transactionReceipt.gasUsed ? BigInt(transactionReceipt.gasUsed) : null,
    logs: transactionReceipt.logs ? transactionReceipt.logs.map((log) => formatLog(log)) : null,
    to: transactionReceipt.to ? transactionReceipt.to : null,
    transactionIndex: transactionReceipt.transactionIndex ? hexToNumber(transactionReceipt.transactionIndex) : null,
    status: transactionReceipt.status ? receiptStatuses[transactionReceipt.status] : null,
    type: transactionReceipt.type ? transactionType[transactionReceipt.type] || transactionReceipt.type : null
  };
  if (transactionReceipt.blobGasPrice)
    receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);
  if (transactionReceipt.blobGasUsed)
    receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);
  return receipt;
}
var defineTransactionReceipt = defineFormatter("transactionReceipt", formatTransactionReceipt);

// node_modules/viem/_esm/utils/encoding/fromRlp.js
var import_dist433 = __toESM(require_dist(), 1);
var import_dist434 = __toESM(require_dist2(), 1);
var import_dist435 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/hash/toEventSignature.js
var import_dist436 = __toESM(require_dist(), 1);
var import_dist437 = __toESM(require_dist2(), 1);
var import_dist438 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/hash/toFunctionSignature.js
var import_dist439 = __toESM(require_dist(), 1);
var import_dist440 = __toESM(require_dist2(), 1);
var import_dist441 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/hash/toEventHash.js
var import_dist442 = __toESM(require_dist(), 1);
var import_dist443 = __toESM(require_dist2(), 1);
var import_dist444 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/hash/toFunctionHash.js
var import_dist445 = __toESM(require_dist(), 1);
var import_dist446 = __toESM(require_dist2(), 1);
var import_dist447 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/hash/isHash.js
var import_dist448 = __toESM(require_dist(), 1);
var import_dist449 = __toESM(require_dist2(), 1);
var import_dist450 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/hash/ripemd160.js
var import_dist454 = __toESM(require_dist(), 1);
var import_dist455 = __toESM(require_dist2(), 1);
var import_dist456 = __toESM(require_dist3(), 1);

// node_modules/@noble/hashes/esm/ripemd160.js
var import_dist451 = __toESM(require_dist());
var import_dist452 = __toESM(require_dist2());
var import_dist453 = __toESM(require_dist3());
init_md();
init_utils();
var Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);
var Id = new Uint8Array(new Array(16).fill(0).map((_6, i6) => i6));
var Pi = Id.map((i6) => (9 * i6 + 5) % 16);
var idxL = [Id];
var idxR = [Pi];
for (let i6 = 0; i6 < 4; i6++)
  for (let j5 of [idxL, idxR])
    j5.push(j5[i6].map((k8) => Rho[k8]));
var shifts = [
  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5]
].map((i6) => new Uint8Array(i6));
var shiftsL = idxL.map((idx, i6) => idx.map((j5) => shifts[i6][j5]));
var shiftsR = idxR.map((idx, i6) => idx.map((j5) => shifts[i6][j5]));
var Kl = new Uint32Array([
  0,
  1518500249,
  1859775393,
  2400959708,
  2840853838
]);
var Kr2 = new Uint32Array([
  1352829926,
  1548603684,
  1836072691,
  2053994217,
  0
]);
function f5(group, x6, y7, z6) {
  if (group === 0)
    return x6 ^ y7 ^ z6;
  else if (group === 1)
    return x6 & y7 | ~x6 & z6;
  else if (group === 2)
    return (x6 | ~y7) ^ z6;
  else if (group === 3)
    return x6 & z6 | y7 & ~z6;
  else
    return x6 ^ (y7 | ~z6);
}
var R_BUF = new Uint32Array(16);
var RIPEMD160 = class extends HashMD {
  constructor() {
    super(64, 20, 8, true);
    this.h0 = 1732584193 | 0;
    this.h1 = 4023233417 | 0;
    this.h2 = 2562383102 | 0;
    this.h3 = 271733878 | 0;
    this.h4 = 3285377520 | 0;
  }
  get() {
    const { h0, h1, h2: h22, h3: h32, h4: h42 } = this;
    return [h0, h1, h22, h32, h42];
  }
  set(h0, h1, h22, h32, h42) {
    this.h0 = h0 | 0;
    this.h1 = h1 | 0;
    this.h2 = h22 | 0;
    this.h3 = h32 | 0;
    this.h4 = h42 | 0;
  }
  process(view, offset) {
    for (let i6 = 0; i6 < 16; i6++, offset += 4)
      R_BUF[i6] = view.getUint32(offset, true);
    let al = this.h0 | 0, ar4 = al, bl = this.h1 | 0, br4 = bl, cl = this.h2 | 0, cr4 = cl, dl = this.h3 | 0, dr4 = dl, el = this.h4 | 0, er4 = el;
    for (let group = 0; group < 5; group++) {
      const rGroup = 4 - group;
      const hbl = Kl[group], hbr = Kr2[group];
      const rl = idxL[group], rr4 = idxR[group];
      const sl = shiftsL[group], sr4 = shiftsR[group];
      for (let i6 = 0; i6 < 16; i6++) {
        const tl = rotl(al + f5(group, bl, cl, dl) + R_BUF[rl[i6]] + hbl, sl[i6]) + el | 0;
        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl;
      }
      for (let i6 = 0; i6 < 16; i6++) {
        const tr4 = rotl(ar4 + f5(rGroup, br4, cr4, dr4) + R_BUF[rr4[i6]] + hbr, sr4[i6]) + er4 | 0;
        ar4 = er4, er4 = dr4, dr4 = rotl(cr4, 10) | 0, cr4 = br4, br4 = tr4;
      }
    }
    this.set(this.h1 + cl + dr4 | 0, this.h2 + dl + er4 | 0, this.h3 + el + ar4 | 0, this.h4 + al + br4 | 0, this.h0 + bl + cr4 | 0);
  }
  roundClean() {
    R_BUF.fill(0);
  }
  destroy() {
    this.destroyed = true;
    this.buffer.fill(0);
    this.set(0, 0, 0, 0, 0);
  }
};
var ripemd160 = wrapConstructor(() => new RIPEMD160());

// node_modules/viem/_esm/utils/signature/recoverMessageAddress.js
var import_dist466 = __toESM(require_dist(), 1);
var import_dist467 = __toESM(require_dist2(), 1);
var import_dist468 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/hashMessage.js
var import_dist463 = __toESM(require_dist(), 1);
var import_dist464 = __toESM(require_dist2(), 1);
var import_dist465 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/toPrefixedMessage.js
var import_dist460 = __toESM(require_dist(), 1);
var import_dist461 = __toESM(require_dist2(), 1);
var import_dist462 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/constants/strings.js
var import_dist457 = __toESM(require_dist(), 1);
var import_dist458 = __toESM(require_dist2(), 1);
var import_dist459 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/recoverTypedDataAddress.js
var import_dist469 = __toESM(require_dist(), 1);
var import_dist470 = __toESM(require_dist2(), 1);
var import_dist471 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/verifyHash.js
var import_dist472 = __toESM(require_dist(), 1);
var import_dist473 = __toESM(require_dist2(), 1);
var import_dist474 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/verifyMessage.js
var import_dist475 = __toESM(require_dist(), 1);
var import_dist476 = __toESM(require_dist2(), 1);
var import_dist477 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/verifyTypedData.js
var import_dist478 = __toESM(require_dist(), 1);
var import_dist479 = __toESM(require_dist2(), 1);
var import_dist480 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/parseErc6492Signature.js
var import_dist487 = __toESM(require_dist(), 1);
var import_dist488 = __toESM(require_dist2(), 1);
var import_dist489 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/isErc6492Signature.js
var import_dist484 = __toESM(require_dist(), 1);
var import_dist485 = __toESM(require_dist2(), 1);
var import_dist486 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/constants/bytes.js
var import_dist481 = __toESM(require_dist(), 1);
var import_dist482 = __toESM(require_dist2(), 1);
var import_dist483 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/serializeErc6492Signature.js
var import_dist490 = __toESM(require_dist(), 1);
var import_dist491 = __toESM(require_dist2(), 1);
var import_dist492 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/transaction/getSerializedTransactionType.js
var import_dist493 = __toESM(require_dist(), 1);
var import_dist494 = __toESM(require_dist2(), 1);
var import_dist495 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/transaction/assertTransaction.js
var import_dist496 = __toESM(require_dist(), 1);
var import_dist497 = __toESM(require_dist2(), 1);
var import_dist498 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/transaction/parseTransaction.js
var import_dist499 = __toESM(require_dist(), 1);
var import_dist500 = __toESM(require_dist2(), 1);
var import_dist501 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/transaction/serializeTransaction.js
var import_dist508 = __toESM(require_dist(), 1);
var import_dist509 = __toESM(require_dist2(), 1);
var import_dist510 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/experimental/eip7702/utils/serializeAuthorizationList.js
var import_dist502 = __toESM(require_dist(), 1);
var import_dist503 = __toESM(require_dist2(), 1);
var import_dist504 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/transaction/serializeAccessList.js
var import_dist505 = __toESM(require_dist(), 1);
var import_dist506 = __toESM(require_dist2(), 1);
var import_dist507 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/unit/parseUnits.js
var import_dist514 = __toESM(require_dist(), 1);
var import_dist515 = __toESM(require_dist2(), 1);
var import_dist516 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/errors/unit.js
var import_dist511 = __toESM(require_dist(), 1);
var import_dist512 = __toESM(require_dist2(), 1);
var import_dist513 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/unit/parseEther.js
var import_dist517 = __toESM(require_dist(), 1);
var import_dist518 = __toESM(require_dist2(), 1);
var import_dist519 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/unit/parseGwei.js
var import_dist520 = __toESM(require_dist(), 1);
var import_dist521 = __toESM(require_dist2(), 1);
var import_dist522 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/nonceManager.js
var import_dist523 = __toESM(require_dist(), 1);
var import_dist524 = __toESM(require_dist2(), 1);
var import_dist525 = __toESM(require_dist3(), 1);
function createNonceManager(parameters) {
  const { source } = parameters;
  const deltaMap = /* @__PURE__ */ new Map();
  const nonceMap = new LruMap(8192);
  const promiseMap = /* @__PURE__ */ new Map();
  const getKey = ({ address, chainId }) => `${address}.${chainId}`;
  return {
    async consume({ address, chainId, client }) {
      const key = getKey({ address, chainId });
      const promise = this.get({ address, chainId, client });
      this.increment({ address, chainId });
      const nonce = await promise;
      await source.set({ address, chainId }, nonce);
      nonceMap.set(key, nonce);
      return nonce;
    },
    async increment({ address, chainId }) {
      const key = getKey({ address, chainId });
      const delta = deltaMap.get(key) ?? 0;
      deltaMap.set(key, delta + 1);
    },
    async get({ address, chainId, client }) {
      const key = getKey({ address, chainId });
      let promise = promiseMap.get(key);
      if (!promise) {
        promise = (async () => {
          try {
            const nonce = await source.get({ address, chainId, client });
            const previousNonce = nonceMap.get(key) ?? 0;
            if (previousNonce > 0 && nonce <= previousNonce)
              return previousNonce + 1;
            nonceMap.delete(key);
            return nonce;
          } finally {
            this.reset({ address, chainId });
          }
        })();
        promiseMap.set(key, promise);
      }
      const delta = deltaMap.get(key) ?? 0;
      return delta + await promise;
    },
    reset({ address, chainId }) {
      const key = getKey({ address, chainId });
      deltaMap.delete(key);
      promiseMap.delete(key);
    }
  };
}
function jsonRpc() {
  return {
    async get(parameters) {
      const { address, client } = parameters;
      return getTransactionCount(client, {
        address,
        blockTag: "pending"
      });
    },
    set() {
    }
  };
}
var nonceManager = createNonceManager({
  source: jsonRpc()
});

// node_modules/viem/_esm/actions/public/getStorageAt.js
var import_dist535 = __toESM(require_dist(), 1);
var import_dist536 = __toESM(require_dist2(), 1);
var import_dist537 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getTransaction.js
var import_dist538 = __toESM(require_dist(), 1);
var import_dist539 = __toESM(require_dist2(), 1);
var import_dist540 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getTransactionConfirmations.js
var import_dist541 = __toESM(require_dist(), 1);
var import_dist542 = __toESM(require_dist2(), 1);
var import_dist543 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/getTransactionReceipt.js
var import_dist544 = __toESM(require_dist(), 1);
var import_dist545 = __toESM(require_dist2(), 1);
var import_dist546 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/multicall.js
var import_dist547 = __toESM(require_dist(), 1);
var import_dist548 = __toESM(require_dist2(), 1);
var import_dist549 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/simulateBlocks.js
var import_dist580 = __toESM(require_dist(), 1);
var import_dist581 = __toESM(require_dist2(), 1);
var import_dist582 = __toESM(require_dist3(), 1);

// node_modules/ox/_esm/core/BlockOverrides.js
var import_dist577 = __toESM(require_dist());
var import_dist578 = __toESM(require_dist2());
var import_dist579 = __toESM(require_dist3());

// node_modules/ox/_esm/core/Hex.js
var import_dist571 = __toESM(require_dist(), 1);
var import_dist572 = __toESM(require_dist2(), 1);
var import_dist573 = __toESM(require_dist3(), 1);
init_utils2();

// node_modules/ox/_esm/core/Bytes.js
var import_dist568 = __toESM(require_dist(), 1);
var import_dist569 = __toESM(require_dist2(), 1);
var import_dist570 = __toESM(require_dist3(), 1);
init_utils2();

// node_modules/ox/_esm/core/Errors.js
var import_dist556 = __toESM(require_dist(), 1);
var import_dist557 = __toESM(require_dist2(), 1);
var import_dist558 = __toESM(require_dist3(), 1);

// node_modules/ox/_esm/core/internal/errors.js
var import_dist553 = __toESM(require_dist(), 1);
var import_dist554 = __toESM(require_dist2(), 1);
var import_dist555 = __toESM(require_dist3(), 1);

// node_modules/ox/_esm/core/version.js
var import_dist550 = __toESM(require_dist(), 1);
var import_dist551 = __toESM(require_dist2(), 1);
var import_dist552 = __toESM(require_dist3(), 1);
var version = "0.1.1";

// node_modules/ox/_esm/core/internal/errors.js
function getVersion() {
  return version;
}

// node_modules/ox/_esm/core/Errors.js
var BaseError2 = class _BaseError extends Error {
  constructor(shortMessage, options = {}) {
    const details = (() => {
      var _a;
      if (options.cause instanceof _BaseError) {
        if (options.cause.details)
          return options.cause.details;
        if (options.cause.shortMessage)
          return options.cause.shortMessage;
      }
      if ((_a = options.cause) == null ? void 0 : _a.message)
        return options.cause.message;
      return options.details;
    })();
    const docsPath = (() => {
      if (options.cause instanceof _BaseError)
        return options.cause.docsPath || options.docsPath;
      return options.docsPath;
    })();
    const docsBaseUrl = "https://oxlib.sh";
    const docs = `${docsBaseUrl}${docsPath ?? ""}`;
    const message = [
      shortMessage || "An error occurred.",
      ...options.metaMessages ? ["", ...options.metaMessages] : [],
      ...details || docsPath ? [
        "",
        details ? `Details: ${details}` : void 0,
        docsPath ? `See: ${docs}` : void 0
      ] : []
    ].filter((x6) => typeof x6 === "string").join("\n");
    super(message, options.cause ? { cause: options.cause } : void 0);
    Object.defineProperty(this, "details", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "docs", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "docsPath", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "shortMessage", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "cause", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "BaseError"
    });
    Object.defineProperty(this, "version", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: `ox@${getVersion()}`
    });
    this.cause = options.cause;
    this.details = details;
    this.docs = docs;
    this.docsPath = docsPath;
    this.shortMessage = shortMessage;
  }
  walk(fn3) {
    return walk(this, fn3);
  }
};
function walk(err, fn3) {
  if (fn3 == null ? void 0 : fn3(err))
    return err;
  if (err && typeof err === "object" && "cause" in err && err.cause)
    return walk(err.cause, fn3);
  return fn3 ? null : err;
}

// node_modules/ox/_esm/core/Json.js
var import_dist559 = __toESM(require_dist(), 1);
var import_dist560 = __toESM(require_dist2(), 1);
var import_dist561 = __toESM(require_dist3(), 1);

// node_modules/ox/_esm/core/internal/bytes.js
var import_dist562 = __toESM(require_dist(), 1);
var import_dist563 = __toESM(require_dist2(), 1);
var import_dist564 = __toESM(require_dist3(), 1);
function assertSize(bytes, size_) {
  if (size2(bytes) > size_)
    throw new SizeOverflowError({
      givenSize: size2(bytes),
      maxSize: size_
    });
}
var charCodeMap = {
  zero: 48,
  nine: 57,
  A: 65,
  F: 70,
  a: 97,
  f: 102
};
function charCodeToBase16(char) {
  if (char >= charCodeMap.zero && char <= charCodeMap.nine)
    return char - charCodeMap.zero;
  if (char >= charCodeMap.A && char <= charCodeMap.F)
    return char - (charCodeMap.A - 10);
  if (char >= charCodeMap.a && char <= charCodeMap.f)
    return char - (charCodeMap.a - 10);
  return void 0;
}
function pad2(bytes, options = {}) {
  const { dir, size: size4 = 32 } = options;
  if (size4 === 0)
    return bytes;
  if (bytes.length > size4)
    throw new SizeExceedsPaddingSizeError({
      size: bytes.length,
      targetSize: size4,
      type: "Bytes"
    });
  const paddedBytes = new Uint8Array(size4);
  for (let i6 = 0; i6 < size4; i6++) {
    const padEnd = dir === "right";
    paddedBytes[padEnd ? i6 : size4 - i6 - 1] = bytes[padEnd ? i6 : bytes.length - i6 - 1];
  }
  return paddedBytes;
}

// node_modules/ox/_esm/core/internal/hex.js
var import_dist565 = __toESM(require_dist(), 1);
var import_dist566 = __toESM(require_dist2(), 1);
var import_dist567 = __toESM(require_dist3(), 1);
function assertSize2(hex, size_) {
  if (size3(hex) > size_)
    throw new SizeOverflowError2({
      givenSize: size3(hex),
      maxSize: size_
    });
}
function pad3(hex_, options = {}) {
  const { dir, size: size4 = 32 } = options;
  if (size4 === 0)
    return hex_;
  const hex = hex_.replace("0x", "");
  if (hex.length > size4 * 2)
    throw new SizeExceedsPaddingSizeError2({
      size: Math.ceil(hex.length / 2),
      targetSize: size4,
      type: "Hex"
    });
  return `0x${hex[dir === "right" ? "padEnd" : "padStart"](size4 * 2, "0")}`;
}

// node_modules/ox/_esm/core/Bytes.js
var decoder = new TextDecoder();
var encoder = new TextEncoder();
function from(value) {
  if (value instanceof Uint8Array)
    return value;
  if (typeof value === "string")
    return fromHex2(value);
  return fromArray(value);
}
function fromArray(value) {
  return value instanceof Uint8Array ? value : new Uint8Array(value);
}
function fromHex2(value, options = {}) {
  const { size: size4 } = options;
  let hex = value;
  if (size4) {
    assertSize2(value, size4);
    hex = padRight(value, size4);
  }
  let hexString = hex.slice(2);
  if (hexString.length % 2)
    hexString = `0${hexString}`;
  const length2 = hexString.length / 2;
  const bytes = new Uint8Array(length2);
  for (let index = 0, j5 = 0; index < length2; index++) {
    const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j5++));
    const nibbleRight = charCodeToBase16(hexString.charCodeAt(j5++));
    if (nibbleLeft === void 0 || nibbleRight === void 0) {
      throw new BaseError2(`Invalid byte sequence ("${hexString[j5 - 2]}${hexString[j5 - 1]}" in "${hexString}").`);
    }
    bytes[index] = nibbleLeft * 16 + nibbleRight;
  }
  return bytes;
}
function fromString(value, options = {}) {
  const { size: size4 } = options;
  const bytes = encoder.encode(value);
  if (typeof size4 === "number") {
    assertSize(bytes, size4);
    return padRight2(bytes, size4);
  }
  return bytes;
}
function padRight2(value, size4) {
  return pad2(value, { dir: "right", size: size4 });
}
function size2(value) {
  return value.length;
}
var SizeOverflowError = class extends BaseError2 {
  constructor({ givenSize, maxSize }) {
    super(`Size cannot exceed \`${maxSize}\` bytes. Given size: \`${givenSize}\` bytes.`);
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "Bytes.SizeOverflowError"
    });
  }
};
var SizeExceedsPaddingSizeError = class extends BaseError2 {
  constructor({ size: size4, targetSize, type }) {
    super(`${type.charAt(0).toUpperCase()}${type.slice(1).toLowerCase()} size (\`${size4}\`) exceeds padding size (\`${targetSize}\`).`);
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "Bytes.SizeExceedsPaddingSizeError"
    });
  }
};

// node_modules/ox/_esm/core/Hex.js
var encoder2 = new TextEncoder();
var hexes = Array.from({ length: 256 }, (_v, i6) => i6.toString(16).padStart(2, "0"));
function concat2(...values) {
  return `0x${values.reduce((acc, x6) => acc + x6.replace("0x", ""), "")}`;
}
function fromBoolean(value, options = {}) {
  const hex = `0x${Number(value)}`;
  if (typeof options.size === "number") {
    assertSize2(hex, options.size);
    return padLeft(hex, options.size);
  }
  return hex;
}
function fromBytes2(value, options = {}) {
  let string2 = "";
  for (let i6 = 0; i6 < value.length; i6++)
    string2 += hexes[value[i6]];
  const hex = `0x${string2}`;
  if (typeof options.size === "number") {
    assertSize2(hex, options.size);
    return padRight(hex, options.size);
  }
  return hex;
}
function fromNumber(value, options = {}) {
  const { signed, size: size4 } = options;
  const value_ = BigInt(value);
  let maxValue;
  if (size4) {
    if (signed)
      maxValue = (1n << BigInt(size4) * 8n - 1n) - 1n;
    else
      maxValue = 2n ** (BigInt(size4) * 8n) - 1n;
  } else if (typeof value === "number") {
    maxValue = BigInt(Number.MAX_SAFE_INTEGER);
  }
  const minValue = typeof maxValue === "bigint" && signed ? -maxValue - 1n : 0;
  if (maxValue && value_ > maxValue || value_ < minValue) {
    const suffix = typeof value === "bigint" ? "n" : "";
    throw new IntegerOutOfRangeError({
      max: maxValue ? `${maxValue}${suffix}` : void 0,
      min: `${minValue}${suffix}`,
      signed,
      size: size4,
      value: `${value}${suffix}`
    });
  }
  const stringValue = (signed && value_ < 0 ? (1n << BigInt(size4 * 8)) + BigInt(value_) : value_).toString(16);
  const hex = `0x${stringValue}`;
  if (size4)
    return padLeft(hex, size4);
  return hex;
}
function fromString2(value, options = {}) {
  return fromBytes2(encoder2.encode(value), options);
}
function padLeft(value, size4) {
  return pad3(value, { dir: "left", size: size4 });
}
function padRight(value, size4) {
  return pad3(value, { dir: "right", size: size4 });
}
function size3(value) {
  return Math.ceil((value.length - 2) / 2);
}
var IntegerOutOfRangeError = class extends BaseError2 {
  constructor({ max, min, signed, size: size4, value }) {
    super(`Number \`${value}\` is not in safe${size4 ? ` ${size4 * 8}-bit` : ""}${signed ? " signed" : " unsigned"} integer range ${max ? `(\`${min}\` to \`${max}\`)` : `(above \`${min}\`)`}`);
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "Hex.IntegerOutOfRangeError"
    });
  }
};
var SizeOverflowError2 = class extends BaseError2 {
  constructor({ givenSize, maxSize }) {
    super(`Size cannot exceed \`${maxSize}\` bytes. Given size: \`${givenSize}\` bytes.`);
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "Hex.SizeOverflowError"
    });
  }
};
var SizeExceedsPaddingSizeError2 = class extends BaseError2 {
  constructor({ size: size4, targetSize, type }) {
    super(`${type.charAt(0).toUpperCase()}${type.slice(1).toLowerCase()} size (\`${size4}\`) exceeds padding size (\`${targetSize}\`).`);
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "Hex.SizeExceedsPaddingSizeError"
    });
  }
};

// node_modules/ox/_esm/core/Withdrawal.js
var import_dist574 = __toESM(require_dist(), 1);
var import_dist575 = __toESM(require_dist2(), 1);
var import_dist576 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/simulateCalls.js
var import_dist625 = __toESM(require_dist(), 1);
var import_dist626 = __toESM(require_dist2(), 1);
var import_dist627 = __toESM(require_dist3(), 1);

// node_modules/ox/_esm/core/AbiConstructor.js
var import_dist616 = __toESM(require_dist());
var import_dist617 = __toESM(require_dist2());
var import_dist618 = __toESM(require_dist3());

// node_modules/ox/_esm/core/AbiItem.js
var import_dist601 = __toESM(require_dist(), 1);
var import_dist602 = __toESM(require_dist2(), 1);
var import_dist603 = __toESM(require_dist3(), 1);

// node_modules/ox/_esm/core/Hash.js
var import_dist583 = __toESM(require_dist(), 1);
var import_dist584 = __toESM(require_dist2(), 1);
var import_dist585 = __toESM(require_dist3(), 1);
init_sha3();
init_sha256();
function keccak2562(value, options = {}) {
  const { as = typeof value === "string" ? "Hex" : "Bytes" } = options;
  const bytes = keccak_256(from(value));
  if (as === "Bytes")
    return bytes;
  return fromBytes2(bytes);
}

// node_modules/ox/_esm/core/internal/abiItem.js
var import_dist598 = __toESM(require_dist(), 1);
var import_dist599 = __toESM(require_dist2(), 1);
var import_dist600 = __toESM(require_dist3(), 1);

// node_modules/ox/_esm/core/Address.js
var import_dist595 = __toESM(require_dist(), 1);
var import_dist596 = __toESM(require_dist2(), 1);
var import_dist597 = __toESM(require_dist3(), 1);

// node_modules/ox/_esm/core/Caches.js
var import_dist589 = __toESM(require_dist(), 1);
var import_dist590 = __toESM(require_dist2(), 1);
var import_dist591 = __toESM(require_dist3(), 1);

// node_modules/ox/_esm/core/internal/lru.js
var import_dist586 = __toESM(require_dist(), 1);
var import_dist587 = __toESM(require_dist2(), 1);
var import_dist588 = __toESM(require_dist3(), 1);
var LruMap2 = class extends Map {
  constructor(size4) {
    super();
    Object.defineProperty(this, "maxSize", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    this.maxSize = size4;
  }
  get(key) {
    const value = super.get(key);
    if (super.has(key) && value !== void 0) {
      this.delete(key);
      super.set(key, value);
    }
    return value;
  }
  set(key, value) {
    super.set(key, value);
    if (this.maxSize && this.size > this.maxSize) {
      const firstKey = this.keys().next().value;
      if (firstKey)
        this.delete(firstKey);
    }
    return this;
  }
};

// node_modules/ox/_esm/core/Caches.js
var caches = {
  checksum: new LruMap2(8192)
};
var checksum = caches.checksum;

// node_modules/ox/_esm/core/PublicKey.js
var import_dist592 = __toESM(require_dist(), 1);
var import_dist593 = __toESM(require_dist2(), 1);
var import_dist594 = __toESM(require_dist3(), 1);

// node_modules/ox/_esm/core/Address.js
var addressRegex = /^0x[a-fA-F0-9]{40}$/;
function assert(value, options = {}) {
  const { strict = true } = options;
  if (!addressRegex.test(value))
    throw new InvalidAddressError2({
      address: value,
      cause: new InvalidInputError()
    });
  if (strict) {
    if (value.toLowerCase() === value)
      return;
    if (checksum2(value) !== value)
      throw new InvalidAddressError2({
        address: value,
        cause: new InvalidChecksumError()
      });
  }
}
function checksum2(address) {
  if (checksum.has(address))
    return checksum.get(address);
  assert(address, { strict: false });
  const hexAddress = address.substring(2).toLowerCase();
  const hash = keccak2562(fromString(hexAddress), { as: "Bytes" });
  const characters = hexAddress.split("");
  for (let i6 = 0; i6 < 40; i6 += 2) {
    if (hash[i6 >> 1] >> 4 >= 8 && characters[i6]) {
      characters[i6] = characters[i6].toUpperCase();
    }
    if ((hash[i6 >> 1] & 15) >= 8 && characters[i6 + 1]) {
      characters[i6 + 1] = characters[i6 + 1].toUpperCase();
    }
  }
  const result = `0x${characters.join("")}`;
  checksum.set(address, result);
  return result;
}
var InvalidAddressError2 = class extends BaseError2 {
  constructor({ address, cause }) {
    super(`Address "${address}" is invalid.`, {
      cause
    });
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "Address.InvalidAddressError"
    });
  }
};
var InvalidInputError = class extends BaseError2 {
  constructor() {
    super("Address is not a 20 byte (40 hexadecimal character) value.");
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "Address.InvalidInputError"
    });
  }
};
var InvalidChecksumError = class extends BaseError2 {
  constructor() {
    super("Address does not match its checksum counterpart.");
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "Address.InvalidChecksumError"
    });
  }
};

// node_modules/ox/_esm/core/AbiParameters.js
var import_dist613 = __toESM(require_dist(), 1);
var import_dist614 = __toESM(require_dist2(), 1);
var import_dist615 = __toESM(require_dist3(), 1);

// node_modules/ox/_esm/core/Solidity.js
var import_dist604 = __toESM(require_dist(), 1);
var import_dist605 = __toESM(require_dist2(), 1);
var import_dist606 = __toESM(require_dist3(), 1);
var arrayRegex2 = /^(.*)\[([0-9]*)\]$/;
var bytesRegex2 = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;
var integerRegex2 = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;
var maxInt8 = 2n ** (8n - 1n) - 1n;
var maxInt16 = 2n ** (16n - 1n) - 1n;
var maxInt24 = 2n ** (24n - 1n) - 1n;
var maxInt32 = 2n ** (32n - 1n) - 1n;
var maxInt40 = 2n ** (40n - 1n) - 1n;
var maxInt48 = 2n ** (48n - 1n) - 1n;
var maxInt56 = 2n ** (56n - 1n) - 1n;
var maxInt64 = 2n ** (64n - 1n) - 1n;
var maxInt72 = 2n ** (72n - 1n) - 1n;
var maxInt80 = 2n ** (80n - 1n) - 1n;
var maxInt88 = 2n ** (88n - 1n) - 1n;
var maxInt96 = 2n ** (96n - 1n) - 1n;
var maxInt104 = 2n ** (104n - 1n) - 1n;
var maxInt112 = 2n ** (112n - 1n) - 1n;
var maxInt120 = 2n ** (120n - 1n) - 1n;
var maxInt128 = 2n ** (128n - 1n) - 1n;
var maxInt136 = 2n ** (136n - 1n) - 1n;
var maxInt144 = 2n ** (144n - 1n) - 1n;
var maxInt152 = 2n ** (152n - 1n) - 1n;
var maxInt160 = 2n ** (160n - 1n) - 1n;
var maxInt168 = 2n ** (168n - 1n) - 1n;
var maxInt176 = 2n ** (176n - 1n) - 1n;
var maxInt184 = 2n ** (184n - 1n) - 1n;
var maxInt192 = 2n ** (192n - 1n) - 1n;
var maxInt200 = 2n ** (200n - 1n) - 1n;
var maxInt208 = 2n ** (208n - 1n) - 1n;
var maxInt216 = 2n ** (216n - 1n) - 1n;
var maxInt224 = 2n ** (224n - 1n) - 1n;
var maxInt232 = 2n ** (232n - 1n) - 1n;
var maxInt240 = 2n ** (240n - 1n) - 1n;
var maxInt248 = 2n ** (248n - 1n) - 1n;
var maxInt256 = 2n ** (256n - 1n) - 1n;
var minInt8 = -(2n ** (8n - 1n));
var minInt16 = -(2n ** (16n - 1n));
var minInt24 = -(2n ** (24n - 1n));
var minInt32 = -(2n ** (32n - 1n));
var minInt40 = -(2n ** (40n - 1n));
var minInt48 = -(2n ** (48n - 1n));
var minInt56 = -(2n ** (56n - 1n));
var minInt64 = -(2n ** (64n - 1n));
var minInt72 = -(2n ** (72n - 1n));
var minInt80 = -(2n ** (80n - 1n));
var minInt88 = -(2n ** (88n - 1n));
var minInt96 = -(2n ** (96n - 1n));
var minInt104 = -(2n ** (104n - 1n));
var minInt112 = -(2n ** (112n - 1n));
var minInt120 = -(2n ** (120n - 1n));
var minInt128 = -(2n ** (128n - 1n));
var minInt136 = -(2n ** (136n - 1n));
var minInt144 = -(2n ** (144n - 1n));
var minInt152 = -(2n ** (152n - 1n));
var minInt160 = -(2n ** (160n - 1n));
var minInt168 = -(2n ** (168n - 1n));
var minInt176 = -(2n ** (176n - 1n));
var minInt184 = -(2n ** (184n - 1n));
var minInt192 = -(2n ** (192n - 1n));
var minInt200 = -(2n ** (200n - 1n));
var minInt208 = -(2n ** (208n - 1n));
var minInt216 = -(2n ** (216n - 1n));
var minInt224 = -(2n ** (224n - 1n));
var minInt232 = -(2n ** (232n - 1n));
var minInt240 = -(2n ** (240n - 1n));
var minInt248 = -(2n ** (248n - 1n));
var minInt256 = -(2n ** (256n - 1n));
var maxUint8 = 2n ** 8n - 1n;
var maxUint16 = 2n ** 16n - 1n;
var maxUint24 = 2n ** 24n - 1n;
var maxUint32 = 2n ** 32n - 1n;
var maxUint40 = 2n ** 40n - 1n;
var maxUint48 = 2n ** 48n - 1n;
var maxUint56 = 2n ** 56n - 1n;
var maxUint64 = 2n ** 64n - 1n;
var maxUint72 = 2n ** 72n - 1n;
var maxUint80 = 2n ** 80n - 1n;
var maxUint88 = 2n ** 88n - 1n;
var maxUint96 = 2n ** 96n - 1n;
var maxUint104 = 2n ** 104n - 1n;
var maxUint112 = 2n ** 112n - 1n;
var maxUint120 = 2n ** 120n - 1n;
var maxUint128 = 2n ** 128n - 1n;
var maxUint136 = 2n ** 136n - 1n;
var maxUint144 = 2n ** 144n - 1n;
var maxUint152 = 2n ** 152n - 1n;
var maxUint160 = 2n ** 160n - 1n;
var maxUint168 = 2n ** 168n - 1n;
var maxUint176 = 2n ** 176n - 1n;
var maxUint184 = 2n ** 184n - 1n;
var maxUint192 = 2n ** 192n - 1n;
var maxUint200 = 2n ** 200n - 1n;
var maxUint208 = 2n ** 208n - 1n;
var maxUint216 = 2n ** 216n - 1n;
var maxUint224 = 2n ** 224n - 1n;
var maxUint232 = 2n ** 232n - 1n;
var maxUint240 = 2n ** 240n - 1n;
var maxUint248 = 2n ** 248n - 1n;
var maxUint2562 = 2n ** 256n - 1n;

// node_modules/ox/_esm/core/internal/abiParameters.js
var import_dist607 = __toESM(require_dist(), 1);
var import_dist608 = __toESM(require_dist2(), 1);
var import_dist609 = __toESM(require_dist3(), 1);

// node_modules/ox/_esm/core/internal/cursor.js
var import_dist610 = __toESM(require_dist(), 1);
var import_dist611 = __toESM(require_dist2(), 1);
var import_dist612 = __toESM(require_dist3(), 1);
var staticCursor = {
  bytes: new Uint8Array(),
  dataView: new DataView(new ArrayBuffer(0)),
  position: 0,
  positionReadCount: /* @__PURE__ */ new Map(),
  recursiveReadCount: 0,
  recursiveReadLimit: Number.POSITIVE_INFINITY,
  assertReadLimit() {
    if (this.recursiveReadCount >= this.recursiveReadLimit)
      throw new RecursiveReadLimitExceededError({
        count: this.recursiveReadCount + 1,
        limit: this.recursiveReadLimit
      });
  },
  assertPosition(position) {
    if (position < 0 || position > this.bytes.length - 1)
      throw new PositionOutOfBoundsError2({
        length: this.bytes.length,
        position
      });
  },
  decrementPosition(offset) {
    if (offset < 0)
      throw new NegativeOffsetError({ offset });
    const position = this.position - offset;
    this.assertPosition(position);
    this.position = position;
  },
  getReadCount(position) {
    return this.positionReadCount.get(position || this.position) || 0;
  },
  incrementPosition(offset) {
    if (offset < 0)
      throw new NegativeOffsetError({ offset });
    const position = this.position + offset;
    this.assertPosition(position);
    this.position = position;
  },
  inspectByte(position_) {
    const position = position_ ?? this.position;
    this.assertPosition(position);
    return this.bytes[position];
  },
  inspectBytes(length2, position_) {
    const position = position_ ?? this.position;
    this.assertPosition(position + length2 - 1);
    return this.bytes.subarray(position, position + length2);
  },
  inspectUint8(position_) {
    const position = position_ ?? this.position;
    this.assertPosition(position);
    return this.bytes[position];
  },
  inspectUint16(position_) {
    const position = position_ ?? this.position;
    this.assertPosition(position + 1);
    return this.dataView.getUint16(position);
  },
  inspectUint24(position_) {
    const position = position_ ?? this.position;
    this.assertPosition(position + 2);
    return (this.dataView.getUint16(position) << 8) + this.dataView.getUint8(position + 2);
  },
  inspectUint32(position_) {
    const position = position_ ?? this.position;
    this.assertPosition(position + 3);
    return this.dataView.getUint32(position);
  },
  pushByte(byte) {
    this.assertPosition(this.position);
    this.bytes[this.position] = byte;
    this.position++;
  },
  pushBytes(bytes) {
    this.assertPosition(this.position + bytes.length - 1);
    this.bytes.set(bytes, this.position);
    this.position += bytes.length;
  },
  pushUint8(value) {
    this.assertPosition(this.position);
    this.bytes[this.position] = value;
    this.position++;
  },
  pushUint16(value) {
    this.assertPosition(this.position + 1);
    this.dataView.setUint16(this.position, value);
    this.position += 2;
  },
  pushUint24(value) {
    this.assertPosition(this.position + 2);
    this.dataView.setUint16(this.position, value >> 8);
    this.dataView.setUint8(this.position + 2, value & ~4294967040);
    this.position += 3;
  },
  pushUint32(value) {
    this.assertPosition(this.position + 3);
    this.dataView.setUint32(this.position, value);
    this.position += 4;
  },
  readByte() {
    this.assertReadLimit();
    this._touch();
    const value = this.inspectByte();
    this.position++;
    return value;
  },
  readBytes(length2, size4) {
    this.assertReadLimit();
    this._touch();
    const value = this.inspectBytes(length2);
    this.position += size4 ?? length2;
    return value;
  },
  readUint8() {
    this.assertReadLimit();
    this._touch();
    const value = this.inspectUint8();
    this.position += 1;
    return value;
  },
  readUint16() {
    this.assertReadLimit();
    this._touch();
    const value = this.inspectUint16();
    this.position += 2;
    return value;
  },
  readUint24() {
    this.assertReadLimit();
    this._touch();
    const value = this.inspectUint24();
    this.position += 3;
    return value;
  },
  readUint32() {
    this.assertReadLimit();
    this._touch();
    const value = this.inspectUint32();
    this.position += 4;
    return value;
  },
  get remaining() {
    return this.bytes.length - this.position;
  },
  setPosition(position) {
    const oldPosition = this.position;
    this.assertPosition(position);
    this.position = position;
    return () => this.position = oldPosition;
  },
  _touch() {
    if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)
      return;
    const count = this.getReadCount();
    this.positionReadCount.set(this.position, count + 1);
    if (count > 0)
      this.recursiveReadCount++;
  }
};
var NegativeOffsetError = class extends BaseError2 {
  constructor({ offset }) {
    super(`Offset \`${offset}\` cannot be negative.`);
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "Cursor.NegativeOffsetError"
    });
  }
};
var PositionOutOfBoundsError2 = class extends BaseError2 {
  constructor({ length: length2, position }) {
    super(`Position \`${position}\` is out of bounds (\`0 < position < ${length2}\`).`);
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "Cursor.PositionOutOfBoundsError"
    });
  }
};
var RecursiveReadLimitExceededError = class extends BaseError2 {
  constructor({ count, limit }) {
    super(`Recursive read limit of \`${limit}\` exceeded (recursive read count: \`${count}\`).`);
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "Cursor.RecursiveReadLimitExceededError"
    });
  }
};

// node_modules/ox/_esm/core/AbiParameters.js
function encodePacked2(types, values) {
  if (types.length !== values.length)
    throw new LengthMismatchError({
      expectedLength: types.length,
      givenLength: values.length
    });
  const data = [];
  for (let i6 = 0; i6 < types.length; i6++) {
    const type = types[i6];
    const value = values[i6];
    data.push(encodePacked2.encode(type, value));
  }
  return concat2(...data);
}
(function(encodePacked3) {
  function encode8(type, value, isArray = false) {
    if (type === "address") {
      const address = value;
      assert(address);
      return padLeft(address.toLowerCase(), isArray ? 32 : 0);
    }
    if (type === "string")
      return fromString2(value);
    if (type === "bytes")
      return value;
    if (type === "bool")
      return padLeft(fromBoolean(value), isArray ? 32 : 1);
    const intMatch = type.match(integerRegex2);
    if (intMatch) {
      const [_type, baseType, bits = "256"] = intMatch;
      const size4 = Number.parseInt(bits) / 8;
      return fromNumber(value, {
        size: isArray ? 32 : size4,
        signed: baseType === "int"
      });
    }
    const bytesMatch = type.match(bytesRegex2);
    if (bytesMatch) {
      const [_type, size4] = bytesMatch;
      if (Number.parseInt(size4) !== (value.length - 2) / 2)
        throw new BytesSizeMismatchError2({
          expectedSize: Number.parseInt(size4),
          value
        });
      return padRight(value, isArray ? 32 : 0);
    }
    const arrayMatch = type.match(arrayRegex2);
    if (arrayMatch && Array.isArray(value)) {
      const [_type, childType] = arrayMatch;
      const data = [];
      for (let i6 = 0; i6 < value.length; i6++) {
        data.push(encode8(childType, value[i6], true));
      }
      if (data.length === 0)
        return "0x";
      return concat2(...data);
    }
    throw new InvalidTypeError(type);
  }
  encodePacked3.encode = encode8;
})(encodePacked2 || (encodePacked2 = {}));
var BytesSizeMismatchError2 = class extends BaseError2 {
  constructor({ expectedSize, value }) {
    super(`Size of bytes "${value}" (bytes${size3(value)}) does not match expected size (bytes${expectedSize}).`);
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "AbiParameters.BytesSizeMismatchError"
    });
  }
};
var LengthMismatchError = class extends BaseError2 {
  constructor({ expectedLength, givenLength }) {
    super([
      "ABI encoding parameters/values length mismatch.",
      `Expected length (parameters): ${expectedLength}`,
      `Given length (values): ${givenLength}`
    ].join("\n"));
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "AbiParameters.LengthMismatchError"
    });
  }
};
var InvalidTypeError = class extends BaseError2 {
  constructor(type) {
    super(`Type \`${type}\` is not a valid ABI Type.`);
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: "AbiParameters.InvalidTypeError"
    });
  }
};

// node_modules/ox/_esm/core/AbiFunction.js
var import_dist619 = __toESM(require_dist());
var import_dist620 = __toESM(require_dist2());
var import_dist621 = __toESM(require_dist3());

// node_modules/viem/_esm/constants/address.js
var import_dist622 = __toESM(require_dist(), 1);
var import_dist623 = __toESM(require_dist2(), 1);
var import_dist624 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/verifyMessage.js
var import_dist634 = __toESM(require_dist(), 1);
var import_dist635 = __toESM(require_dist2(), 1);
var import_dist636 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/verifyHash.js
var import_dist631 = __toESM(require_dist(), 1);
var import_dist632 = __toESM(require_dist2(), 1);
var import_dist633 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/serializeSignature.js
var import_dist628 = __toESM(require_dist(), 1);
var import_dist629 = __toESM(require_dist2(), 1);
var import_dist630 = __toESM(require_dist3(), 1);
init_secp256k1();

// node_modules/viem/_esm/actions/public/verifyTypedData.js
var import_dist637 = __toESM(require_dist(), 1);
var import_dist638 = __toESM(require_dist2(), 1);
var import_dist639 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/waitForTransactionReceipt.js
var import_dist643 = __toESM(require_dist(), 1);
var import_dist644 = __toESM(require_dist2(), 1);
var import_dist645 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/watchBlockNumber.js
var import_dist640 = __toESM(require_dist(), 1);
var import_dist641 = __toESM(require_dist2(), 1);
var import_dist642 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/watchBlocks.js
var import_dist646 = __toESM(require_dist(), 1);
var import_dist647 = __toESM(require_dist2(), 1);
var import_dist648 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/watchEvent.js
var import_dist649 = __toESM(require_dist(), 1);
var import_dist650 = __toESM(require_dist2(), 1);
var import_dist651 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/public/watchPendingTransactions.js
var import_dist652 = __toESM(require_dist(), 1);
var import_dist653 = __toESM(require_dist2(), 1);
var import_dist654 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/siwe/verifySiweMessage.js
var import_dist661 = __toESM(require_dist(), 1);
var import_dist662 = __toESM(require_dist2(), 1);
var import_dist663 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/siwe/parseSiweMessage.js
var import_dist655 = __toESM(require_dist(), 1);
var import_dist656 = __toESM(require_dist2(), 1);
var import_dist657 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/siwe/validateSiweMessage.js
var import_dist658 = __toESM(require_dist(), 1);
var import_dist659 = __toESM(require_dist2(), 1);
var import_dist660 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/clients/createTestClient.js
var import_dist763 = __toESM(require_dist(), 1);
var import_dist764 = __toESM(require_dist2(), 1);
var import_dist765 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/clients/decorators/test.js
var import_dist760 = __toESM(require_dist(), 1);
var import_dist761 = __toESM(require_dist2(), 1);
var import_dist762 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/dropTransaction.js
var import_dist670 = __toESM(require_dist(), 1);
var import_dist671 = __toESM(require_dist2(), 1);
var import_dist672 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/dumpState.js
var import_dist673 = __toESM(require_dist(), 1);
var import_dist674 = __toESM(require_dist2(), 1);
var import_dist675 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/getAutomine.js
var import_dist676 = __toESM(require_dist(), 1);
var import_dist677 = __toESM(require_dist2(), 1);
var import_dist678 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/getTxpoolContent.js
var import_dist679 = __toESM(require_dist(), 1);
var import_dist680 = __toESM(require_dist2(), 1);
var import_dist681 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/getTxpoolStatus.js
var import_dist682 = __toESM(require_dist(), 1);
var import_dist683 = __toESM(require_dist2(), 1);
var import_dist684 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/impersonateAccount.js
var import_dist685 = __toESM(require_dist(), 1);
var import_dist686 = __toESM(require_dist2(), 1);
var import_dist687 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/increaseTime.js
var import_dist688 = __toESM(require_dist(), 1);
var import_dist689 = __toESM(require_dist2(), 1);
var import_dist690 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/inspectTxpool.js
var import_dist691 = __toESM(require_dist(), 1);
var import_dist692 = __toESM(require_dist2(), 1);
var import_dist693 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/loadState.js
var import_dist694 = __toESM(require_dist(), 1);
var import_dist695 = __toESM(require_dist2(), 1);
var import_dist696 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/mine.js
var import_dist697 = __toESM(require_dist(), 1);
var import_dist698 = __toESM(require_dist2(), 1);
var import_dist699 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/removeBlockTimestampInterval.js
var import_dist700 = __toESM(require_dist(), 1);
var import_dist701 = __toESM(require_dist2(), 1);
var import_dist702 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/reset.js
var import_dist703 = __toESM(require_dist(), 1);
var import_dist704 = __toESM(require_dist2(), 1);
var import_dist705 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/revert.js
var import_dist706 = __toESM(require_dist(), 1);
var import_dist707 = __toESM(require_dist2(), 1);
var import_dist708 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/sendUnsignedTransaction.js
var import_dist709 = __toESM(require_dist(), 1);
var import_dist710 = __toESM(require_dist2(), 1);
var import_dist711 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setAutomine.js
var import_dist712 = __toESM(require_dist(), 1);
var import_dist713 = __toESM(require_dist2(), 1);
var import_dist714 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setBalance.js
var import_dist715 = __toESM(require_dist(), 1);
var import_dist716 = __toESM(require_dist2(), 1);
var import_dist717 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setBlockGasLimit.js
var import_dist718 = __toESM(require_dist(), 1);
var import_dist719 = __toESM(require_dist2(), 1);
var import_dist720 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setBlockTimestampInterval.js
var import_dist721 = __toESM(require_dist(), 1);
var import_dist722 = __toESM(require_dist2(), 1);
var import_dist723 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setCode.js
var import_dist724 = __toESM(require_dist(), 1);
var import_dist725 = __toESM(require_dist2(), 1);
var import_dist726 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setCoinbase.js
var import_dist727 = __toESM(require_dist(), 1);
var import_dist728 = __toESM(require_dist2(), 1);
var import_dist729 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setIntervalMining.js
var import_dist730 = __toESM(require_dist(), 1);
var import_dist731 = __toESM(require_dist2(), 1);
var import_dist732 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setLoggingEnabled.js
var import_dist733 = __toESM(require_dist(), 1);
var import_dist734 = __toESM(require_dist2(), 1);
var import_dist735 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setMinGasPrice.js
var import_dist736 = __toESM(require_dist(), 1);
var import_dist737 = __toESM(require_dist2(), 1);
var import_dist738 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setNextBlockBaseFeePerGas.js
var import_dist739 = __toESM(require_dist(), 1);
var import_dist740 = __toESM(require_dist2(), 1);
var import_dist741 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setNextBlockTimestamp.js
var import_dist742 = __toESM(require_dist(), 1);
var import_dist743 = __toESM(require_dist2(), 1);
var import_dist744 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setNonce.js
var import_dist745 = __toESM(require_dist(), 1);
var import_dist746 = __toESM(require_dist2(), 1);
var import_dist747 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setRpcUrl.js
var import_dist748 = __toESM(require_dist(), 1);
var import_dist749 = __toESM(require_dist2(), 1);
var import_dist750 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/setStorageAt.js
var import_dist751 = __toESM(require_dist(), 1);
var import_dist752 = __toESM(require_dist2(), 1);
var import_dist753 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/snapshot.js
var import_dist754 = __toESM(require_dist(), 1);
var import_dist755 = __toESM(require_dist2(), 1);
var import_dist756 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/test/stopImpersonatingAccount.js
var import_dist757 = __toESM(require_dist(), 1);
var import_dist758 = __toESM(require_dist2(), 1);
var import_dist759 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/clients/decorators/wallet.js
var import_dist796 = __toESM(require_dist(), 1);
var import_dist797 = __toESM(require_dist2(), 1);
var import_dist798 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/deployContract.js
var import_dist766 = __toESM(require_dist(), 1);
var import_dist767 = __toESM(require_dist2(), 1);
var import_dist768 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/getAddresses.js
var import_dist769 = __toESM(require_dist(), 1);
var import_dist770 = __toESM(require_dist2(), 1);
var import_dist771 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/getPermissions.js
var import_dist772 = __toESM(require_dist(), 1);
var import_dist773 = __toESM(require_dist2(), 1);
var import_dist774 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/requestAddresses.js
var import_dist775 = __toESM(require_dist(), 1);
var import_dist776 = __toESM(require_dist2(), 1);
var import_dist777 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/requestPermissions.js
var import_dist778 = __toESM(require_dist(), 1);
var import_dist779 = __toESM(require_dist2(), 1);
var import_dist780 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/signMessage.js
var import_dist781 = __toESM(require_dist(), 1);
var import_dist782 = __toESM(require_dist2(), 1);
var import_dist783 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/signTransaction.js
var import_dist784 = __toESM(require_dist(), 1);
var import_dist785 = __toESM(require_dist2(), 1);
var import_dist786 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/signTypedData.js
var import_dist787 = __toESM(require_dist(), 1);
var import_dist788 = __toESM(require_dist2(), 1);
var import_dist789 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/switchChain.js
var import_dist790 = __toESM(require_dist(), 1);
var import_dist791 = __toESM(require_dist2(), 1);
var import_dist792 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/actions/wallet/watchAsset.js
var import_dist793 = __toESM(require_dist(), 1);
var import_dist794 = __toESM(require_dist2(), 1);
var import_dist795 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/clients/createWalletClient.js
var import_dist799 = __toESM(require_dist(), 1);
var import_dist800 = __toESM(require_dist2(), 1);
var import_dist801 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/clients/transports/webSocket.js
var import_dist802 = __toESM(require_dist(), 1);
var import_dist803 = __toESM(require_dist2(), 1);
var import_dist804 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/types/eip1193.js
var import_dist805 = __toESM(require_dist(), 1);
var import_dist806 = __toESM(require_dist2(), 1);
var import_dist807 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/abi/decodeDeployData.js
var import_dist808 = __toESM(require_dist(), 1);
var import_dist809 = __toESM(require_dist2(), 1);
var import_dist810 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/compactSignatureToSignature.js
var import_dist811 = __toESM(require_dist(), 1);
var import_dist812 = __toESM(require_dist2(), 1);
var import_dist813 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/parseCompactSignature.js
var import_dist814 = __toESM(require_dist(), 1);
var import_dist815 = __toESM(require_dist2(), 1);
var import_dist816 = __toESM(require_dist3(), 1);
init_secp256k1();

// node_modules/viem/_esm/utils/signature/parseSignature.js
var import_dist817 = __toESM(require_dist(), 1);
var import_dist818 = __toESM(require_dist2(), 1);
var import_dist819 = __toESM(require_dist3(), 1);
init_secp256k1();

// node_modules/viem/_esm/utils/signature/recoverTransactionAddress.js
var import_dist820 = __toESM(require_dist(), 1);
var import_dist821 = __toESM(require_dist2(), 1);
var import_dist822 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/signatureToCompactSignature.js
var import_dist823 = __toESM(require_dist(), 1);
var import_dist824 = __toESM(require_dist2(), 1);
var import_dist825 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/signature/serializeCompactSignature.js
var import_dist826 = __toESM(require_dist(), 1);
var import_dist827 = __toESM(require_dist2(), 1);
var import_dist828 = __toESM(require_dist3(), 1);
init_secp256k1();

// node_modules/viem/_esm/utils/blob/sidecarsToVersionedHashes.js
var import_dist829 = __toESM(require_dist(), 1);
var import_dist830 = __toESM(require_dist2(), 1);
var import_dist831 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/blob/fromBlobs.js
var import_dist832 = __toESM(require_dist(), 1);
var import_dist833 = __toESM(require_dist2(), 1);
var import_dist834 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/kzg/defineKzg.js
var import_dist835 = __toESM(require_dist(), 1);
var import_dist836 = __toESM(require_dist2(), 1);
var import_dist837 = __toESM(require_dist3(), 1);

// node_modules/viem/_esm/utils/kzg/setupKzg.js
var import_dist838 = __toESM(require_dist(), 1);
var import_dist839 = __toESM(require_dist2(), 1);
var import_dist840 = __toESM(require_dist3(), 1);

// node_modules/uint8arrays/esm/src/index.js
var import_dist940 = __toESM(require_dist());
var import_dist941 = __toESM(require_dist2());
var import_dist942 = __toESM(require_dist3());

// node_modules/uint8arrays/esm/src/compare.js
var import_dist844 = __toESM(require_dist(), 1);
var import_dist845 = __toESM(require_dist2(), 1);
var import_dist846 = __toESM(require_dist3(), 1);

// node_modules/uint8arrays/esm/src/concat.js
var import_dist850 = __toESM(require_dist(), 1);
var import_dist851 = __toESM(require_dist2(), 1);
var import_dist852 = __toESM(require_dist3(), 1);

// node_modules/uint8arrays/esm/src/alloc.js
var import_dist847 = __toESM(require_dist(), 1);
var import_dist848 = __toESM(require_dist2(), 1);
var import_dist849 = __toESM(require_dist3(), 1);
function allocUnsafe(size4 = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return globalThis.Buffer.allocUnsafe(size4);
  }
  return new Uint8Array(size4);
}

// node_modules/uint8arrays/esm/src/concat.js
function concat3(arrays, length2) {
  if (!length2) {
    length2 = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output = allocUnsafe(length2);
  let offset = 0;
  for (const arr of arrays) {
    output.set(arr, offset);
    offset += arr.length;
  }
  return output;
}

// node_modules/uint8arrays/esm/src/equals.js
var import_dist853 = __toESM(require_dist(), 1);
var import_dist854 = __toESM(require_dist2(), 1);
var import_dist855 = __toESM(require_dist3(), 1);

// node_modules/uint8arrays/esm/src/from-string.js
var import_dist931 = __toESM(require_dist(), 1);
var import_dist932 = __toESM(require_dist2(), 1);
var import_dist933 = __toESM(require_dist3(), 1);

// node_modules/uint8arrays/esm/src/util/bases.js
var import_dist928 = __toESM(require_dist(), 1);
var import_dist929 = __toESM(require_dist2(), 1);
var import_dist930 = __toESM(require_dist3(), 1);

// node_modules/multiformats/esm/src/basics.js
var import_dist925 = __toESM(require_dist());
var import_dist926 = __toESM(require_dist2());
var import_dist927 = __toESM(require_dist3());

// node_modules/multiformats/esm/src/bases/identity.js
var identity_exports = {};
__export(identity_exports, {
  identity: () => identity
});
var import_dist865 = __toESM(require_dist(), 1);
var import_dist866 = __toESM(require_dist2(), 1);
var import_dist867 = __toESM(require_dist3(), 1);

// node_modules/multiformats/esm/src/bases/base.js
var import_dist862 = __toESM(require_dist(), 1);
var import_dist863 = __toESM(require_dist2(), 1);
var import_dist864 = __toESM(require_dist3(), 1);

// node_modules/multiformats/esm/vendor/base-x.js
var import_dist856 = __toESM(require_dist(), 1);
var import_dist857 = __toESM(require_dist2(), 1);
var import_dist858 = __toESM(require_dist3(), 1);
function base(ALPHABET, name2) {
  if (ALPHABET.length >= 255) {
    throw new TypeError("Alphabet too long");
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j5 = 0; j5 < BASE_MAP.length; j5++) {
    BASE_MAP[j5] = 255;
  }
  for (var i6 = 0; i6 < ALPHABET.length; i6++) {
    var x6 = ALPHABET.charAt(i6);
    var xc2 = x6.charCodeAt(0);
    if (BASE_MAP[xc2] !== 255) {
      throw new TypeError(x6 + " is ambiguous");
    }
    BASE_MAP[xc2] = i6;
  }
  var BASE = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE);
  function encode8(source) {
    if (source instanceof Uint8Array) ;
    else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError("Expected Uint8Array");
    }
    if (source.length === 0) {
      return "";
    }
    var zeroes = 0;
    var length2 = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size4 = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size4);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i7 = 0;
      for (var it1 = size4 - 1; (carry !== 0 || i7 < length2) && it1 !== -1; it1--, i7++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE >>> 0;
        carry = carry / BASE >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i7;
      pbegin++;
    }
    var it22 = size4 - length2;
    while (it22 !== size4 && b58[it22] === 0) {
      it22++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it22 < size4; ++it22) {
      str += ALPHABET.charAt(b58[it22]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== "string") {
      throw new TypeError("Expected String");
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === " ") {
      return;
    }
    var zeroes = 0;
    var length2 = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size4 = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size4);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i7 = 0;
      for (var it3 = size4 - 1; (carry !== 0 || i7 < length2) && it3 !== -1; it3--, i7++) {
        carry += BASE * b256[it3] >>> 0;
        b256[it3] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i7;
      psz++;
    }
    if (source[psz] === " ") {
      return;
    }
    var it4 = size4 - length2;
    while (it4 !== size4 && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size4 - it4));
    var j6 = zeroes;
    while (it4 !== size4) {
      vch[j6++] = b256[it4++];
    }
    return vch;
  }
  function decode7(string2) {
    var buffer = decodeUnsafe(string2);
    if (buffer) {
      return buffer;
    }
    throw new Error(`Non-${name2} character`);
  }
  return {
    encode: encode8,
    decodeUnsafe,
    decode: decode7
  };
}
var src = base;
var _brrp__multiformats_scope_baseX = src;
var base_x_default = _brrp__multiformats_scope_baseX;

// node_modules/multiformats/esm/src/bytes.js
var import_dist859 = __toESM(require_dist(), 1);
var import_dist860 = __toESM(require_dist2(), 1);
var import_dist861 = __toESM(require_dist3(), 1);
var empty = new Uint8Array(0);
var equals = (aa2, bb) => {
  if (aa2 === bb)
    return true;
  if (aa2.byteLength !== bb.byteLength) {
    return false;
  }
  for (let ii2 = 0; ii2 < aa2.byteLength; ii2++) {
    if (aa2[ii2] !== bb[ii2]) {
      return false;
    }
  }
  return true;
};
var coerce = (o6) => {
  if (o6 instanceof Uint8Array && o6.constructor.name === "Uint8Array")
    return o6;
  if (o6 instanceof ArrayBuffer)
    return new Uint8Array(o6);
  if (ArrayBuffer.isView(o6)) {
    return new Uint8Array(o6.buffer, o6.byteOffset, o6.byteLength);
  }
  throw new Error("Unknown type, must be binary type");
};
var fromString3 = (str) => new TextEncoder().encode(str);
var toString2 = (b6) => new TextDecoder().decode(b6);

// node_modules/multiformats/esm/src/bases/base.js
var Encoder = class {
  constructor(name2, prefix, baseEncode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  encode(bytes) {
    if (bytes instanceof Uint8Array) {
      return `${this.prefix}${this.baseEncode(bytes)}`;
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};
var Decoder = class {
  constructor(name2, prefix, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === void 0) {
      throw new Error("Invalid prefix character");
    }
    this.prefixCodePoint = prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  decode(text) {
    if (typeof text === "string") {
      if (text.codePointAt(0) !== this.prefixCodePoint) {
        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      }
      return this.baseDecode(text.slice(this.prefix.length));
    } else {
      throw Error("Can only multibase decode strings");
    }
  }
  or(decoder2) {
    return or2(this, decoder2);
  }
};
var ComposedDecoder = class {
  constructor(decoders) {
    this.decoders = decoders;
  }
  or(decoder2) {
    return or2(this, decoder2);
  }
  decode(input) {
    const prefix = input[0];
    const decoder2 = this.decoders[prefix];
    if (decoder2) {
      return decoder2.decode(input);
    } else {
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
};
var or2 = (left, right) => new ComposedDecoder({
  ...left.decoders || { [left.prefix]: left },
  ...right.decoders || { [right.prefix]: right }
});
var Codec = class {
  constructor(name2, prefix, baseEncode, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder(name2, prefix, baseEncode);
    this.decoder = new Decoder(name2, prefix, baseDecode);
  }
  encode(input) {
    return this.encoder.encode(input);
  }
  decode(input) {
    return this.decoder.decode(input);
  }
};
var from6 = ({ name: name2, prefix, encode: encode8, decode: decode7 }) => new Codec(name2, prefix, encode8, decode7);
var baseX = ({ prefix, name: name2, alphabet: alphabet2 }) => {
  const { encode: encode8, decode: decode7 } = base_x_default(alphabet2, name2);
  return from6({
    prefix,
    name: name2,
    encode: encode8,
    decode: (text) => coerce(decode7(text))
  });
};
var decode2 = (string2, alphabet2, bitsPerChar, name2) => {
  const codes = {};
  for (let i6 = 0; i6 < alphabet2.length; ++i6) {
    codes[alphabet2[i6]] = i6;
  }
  let end = string2.length;
  while (string2[end - 1] === "=") {
    --end;
  }
  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i6 = 0; i6 < end; ++i6) {
    const value = codes[string2[i6]];
    if (value === void 0) {
      throw new SyntaxError(`Non-${name2} character`);
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
    throw new SyntaxError("Unexpected end of data");
  }
  return out;
};
var encode4 = (data, alphabet2, bitsPerChar) => {
  const pad4 = alphabet2[alphabet2.length - 1] === "=";
  const mask = (1 << bitsPerChar) - 1;
  let out = "";
  let bits = 0;
  let buffer = 0;
  for (let i6 = 0; i6 < data.length; ++i6) {
    buffer = buffer << 8 | data[i6];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet2[mask & buffer >> bits];
    }
  }
  if (bits) {
    out += alphabet2[mask & buffer << bitsPerChar - bits];
  }
  if (pad4) {
    while (out.length * bitsPerChar & 7) {
      out += "=";
    }
  }
  return out;
};
var rfc4648 = ({ name: name2, prefix, bitsPerChar, alphabet: alphabet2 }) => {
  return from6({
    prefix,
    name: name2,
    encode(input) {
      return encode4(input, alphabet2, bitsPerChar);
    },
    decode(input) {
      return decode2(input, alphabet2, bitsPerChar, name2);
    }
  });
};

// node_modules/multiformats/esm/src/bases/identity.js
var identity = from6({
  prefix: "\0",
  name: "identity",
  encode: (buf) => toString2(buf),
  decode: (str) => fromString3(str)
});

// node_modules/multiformats/esm/src/bases/base2.js
var base2_exports = {};
__export(base2_exports, {
  base2: () => base2
});
var import_dist868 = __toESM(require_dist(), 1);
var import_dist869 = __toESM(require_dist2(), 1);
var import_dist870 = __toESM(require_dist3(), 1);
var base2 = rfc4648({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});

// node_modules/multiformats/esm/src/bases/base8.js
var base8_exports = {};
__export(base8_exports, {
  base8: () => base8
});
var import_dist871 = __toESM(require_dist(), 1);
var import_dist872 = __toESM(require_dist2(), 1);
var import_dist873 = __toESM(require_dist3(), 1);
var base8 = rfc4648({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});

// node_modules/multiformats/esm/src/bases/base10.js
var base10_exports = {};
__export(base10_exports, {
  base10: () => base10
});
var import_dist874 = __toESM(require_dist(), 1);
var import_dist875 = __toESM(require_dist2(), 1);
var import_dist876 = __toESM(require_dist3(), 1);
var base10 = baseX({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});

// node_modules/multiformats/esm/src/bases/base16.js
var base16_exports = {};
__export(base16_exports, {
  base16: () => base16,
  base16upper: () => base16upper
});
var import_dist877 = __toESM(require_dist(), 1);
var import_dist878 = __toESM(require_dist2(), 1);
var import_dist879 = __toESM(require_dist3(), 1);
var base16 = rfc4648({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
});
var base16upper = rfc4648({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
});

// node_modules/multiformats/esm/src/bases/base32.js
var base32_exports = {};
__export(base32_exports, {
  base32: () => base32,
  base32hex: () => base32hex,
  base32hexpad: () => base32hexpad,
  base32hexpadupper: () => base32hexpadupper,
  base32hexupper: () => base32hexupper,
  base32pad: () => base32pad,
  base32padupper: () => base32padupper,
  base32upper: () => base32upper,
  base32z: () => base32z
});
var import_dist880 = __toESM(require_dist(), 1);
var import_dist881 = __toESM(require_dist2(), 1);
var import_dist882 = __toESM(require_dist3(), 1);
var base32 = rfc4648({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
var base32upper = rfc4648({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
var base32pad = rfc4648({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
var base32padupper = rfc4648({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
var base32hex = rfc4648({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
var base32hexupper = rfc4648({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
var base32hexpad = rfc4648({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
var base32hexpadupper = rfc4648({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
var base32z = rfc4648({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});

// node_modules/multiformats/esm/src/bases/base36.js
var base36_exports = {};
__export(base36_exports, {
  base36: () => base36,
  base36upper: () => base36upper
});
var import_dist883 = __toESM(require_dist(), 1);
var import_dist884 = __toESM(require_dist2(), 1);
var import_dist885 = __toESM(require_dist3(), 1);
var base36 = baseX({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
});
var base36upper = baseX({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base58.js
var base58_exports = {};
__export(base58_exports, {
  base58btc: () => base58btc,
  base58flickr: () => base58flickr
});
var import_dist886 = __toESM(require_dist(), 1);
var import_dist887 = __toESM(require_dist2(), 1);
var import_dist888 = __toESM(require_dist3(), 1);
var base58btc = baseX({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
var base58flickr = baseX({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base64.js
var base64_exports = {};
__export(base64_exports, {
  base64: () => base64,
  base64pad: () => base64pad,
  base64url: () => base64url,
  base64urlpad: () => base64urlpad
});
var import_dist889 = __toESM(require_dist(), 1);
var import_dist890 = __toESM(require_dist2(), 1);
var import_dist891 = __toESM(require_dist3(), 1);
var base64 = rfc4648({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
});
var base64pad = rfc4648({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
});
var base64url = rfc4648({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
});
var base64urlpad = rfc4648({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
});

// node_modules/multiformats/esm/src/bases/base256emoji.js
var base256emoji_exports = {};
__export(base256emoji_exports, {
  base256emoji: () => base256emoji
});
var import_dist892 = __toESM(require_dist(), 1);
var import_dist893 = __toESM(require_dist2(), 1);
var import_dist894 = __toESM(require_dist3(), 1);
var alphabet = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var alphabetBytesToChars = alphabet.reduce((p6, c8, i6) => {
  p6[i6] = c8;
  return p6;
}, []);
var alphabetCharsToBytes = alphabet.reduce((p6, c8, i6) => {
  p6[c8.codePointAt(0)] = i6;
  return p6;
}, []);
function encode5(data) {
  return data.reduce((p6, c8) => {
    p6 += alphabetBytesToChars[c8];
    return p6;
  }, "");
}
function decode3(str) {
  const byts = [];
  for (const char of str) {
    const byt = alphabetCharsToBytes[char.codePointAt(0)];
    if (byt === void 0) {
      throw new Error(`Non-base256emoji character: ${char}`);
    }
    byts.push(byt);
  }
  return new Uint8Array(byts);
}
var base256emoji = from6({
  prefix: "🚀",
  name: "base256emoji",
  encode: encode5,
  decode: decode3
});

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha2_browser_exports = {};
__export(sha2_browser_exports, {
  sha256: () => sha2563,
  sha512: () => sha512
});
var import_dist907 = __toESM(require_dist(), 1);
var import_dist908 = __toESM(require_dist2(), 1);
var import_dist909 = __toESM(require_dist3(), 1);

// node_modules/multiformats/esm/src/hashes/hasher.js
var import_dist904 = __toESM(require_dist(), 1);
var import_dist905 = __toESM(require_dist2(), 1);
var import_dist906 = __toESM(require_dist3(), 1);

// node_modules/multiformats/esm/src/hashes/digest.js
var import_dist901 = __toESM(require_dist(), 1);
var import_dist902 = __toESM(require_dist2(), 1);
var import_dist903 = __toESM(require_dist3(), 1);

// node_modules/multiformats/esm/src/varint.js
var import_dist898 = __toESM(require_dist(), 1);
var import_dist899 = __toESM(require_dist2(), 1);
var import_dist900 = __toESM(require_dist3(), 1);

// node_modules/multiformats/esm/vendor/varint.js
var import_dist895 = __toESM(require_dist(), 1);
var import_dist896 = __toESM(require_dist2(), 1);
var import_dist897 = __toESM(require_dist3(), 1);
var encode_1 = encode6;
var MSB = 128;
var REST = 127;
var MSBALL = ~REST;
var INT = Math.pow(2, 31);
function encode6(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT) {
    out[offset++] = num & 255 | MSB;
    num /= 128;
  }
  while (num & MSBALL) {
    out[offset++] = num & 255 | MSB;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode6.bytes = offset - oldOffset + 1;
  return out;
}
var decode4 = read;
var MSB$1 = 128;
var REST$1 = 127;
function read(buf, offset) {
  var res = 0, offset = offset || 0, shift = 0, counter = offset, b6, l9 = buf.length;
  do {
    if (counter >= l9) {
      read.bytes = 0;
      throw new RangeError("Could not decode varint");
    }
    b6 = buf[counter++];
    res += shift < 28 ? (b6 & REST$1) << shift : (b6 & REST$1) * Math.pow(2, shift);
    shift += 7;
  } while (b6 >= MSB$1);
  read.bytes = counter - offset;
  return res;
}
var N1 = Math.pow(2, 7);
var N22 = Math.pow(2, 14);
var N32 = Math.pow(2, 21);
var N42 = Math.pow(2, 28);
var N5 = Math.pow(2, 35);
var N6 = Math.pow(2, 42);
var N7 = Math.pow(2, 49);
var N8 = Math.pow(2, 56);
var N9 = Math.pow(2, 63);
var length = function(value) {
  return value < N1 ? 1 : value < N22 ? 2 : value < N32 ? 3 : value < N42 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
};
var varint = {
  encode: encode_1,
  decode: decode4,
  encodingLength: length
};
var _brrp_varint = varint;
var varint_default = _brrp_varint;

// node_modules/multiformats/esm/src/varint.js
var decode5 = (data, offset = 0) => {
  const code2 = varint_default.decode(data, offset);
  return [
    code2,
    varint_default.decode.bytes
  ];
};
var encodeTo = (int, target, offset = 0) => {
  varint_default.encode(int, target, offset);
  return target;
};
var encodingLength = (int) => {
  return varint_default.encodingLength(int);
};

// node_modules/multiformats/esm/src/hashes/digest.js
var create2 = (code2, digest2) => {
  const size4 = digest2.byteLength;
  const sizeOffset = encodingLength(code2);
  const digestOffset = sizeOffset + encodingLength(size4);
  const bytes = new Uint8Array(digestOffset + size4);
  encodeTo(code2, bytes, 0);
  encodeTo(size4, bytes, sizeOffset);
  bytes.set(digest2, digestOffset);
  return new Digest(code2, size4, digest2, bytes);
};
var decode6 = (multihash) => {
  const bytes = coerce(multihash);
  const [code2, sizeOffset] = decode5(bytes);
  const [size4, digestOffset] = decode5(bytes.subarray(sizeOffset));
  const digest2 = bytes.subarray(sizeOffset + digestOffset);
  if (digest2.byteLength !== size4) {
    throw new Error("Incorrect length");
  }
  return new Digest(code2, size4, digest2, bytes);
};
var equals2 = (a5, b6) => {
  if (a5 === b6) {
    return true;
  } else {
    return a5.code === b6.code && a5.size === b6.size && equals(a5.bytes, b6.bytes);
  }
};
var Digest = class {
  constructor(code2, size4, digest2, bytes) {
    this.code = code2;
    this.size = size4;
    this.digest = digest2;
    this.bytes = bytes;
  }
};

// node_modules/multiformats/esm/src/hashes/hasher.js
var from7 = ({ name: name2, code: code2, encode: encode8 }) => new Hasher(name2, code2, encode8);
var Hasher = class {
  constructor(name2, code2, encode8) {
    this.name = name2;
    this.code = code2;
    this.encode = encode8;
  }
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? create2(this.code, result) : result.then((digest2) => create2(this.code, digest2));
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha = (name2) => async (data) => new Uint8Array(await crypto.subtle.digest(name2, data));
var sha2563 = from7({
  name: "sha2-256",
  code: 18,
  encode: sha("SHA-256")
});
var sha512 = from7({
  name: "sha2-512",
  code: 19,
  encode: sha("SHA-512")
});

// node_modules/multiformats/esm/src/hashes/identity.js
var identity_exports2 = {};
__export(identity_exports2, {
  identity: () => identity2
});
var import_dist910 = __toESM(require_dist(), 1);
var import_dist911 = __toESM(require_dist2(), 1);
var import_dist912 = __toESM(require_dist3(), 1);
var code = 0;
var name = "identity";
var encode7 = coerce;
var digest = (input) => create2(code, encode7(input));
var identity2 = {
  code,
  name,
  encode: encode7,
  digest
};

// node_modules/multiformats/esm/src/codecs/raw.js
var import_dist913 = __toESM(require_dist(), 1);
var import_dist914 = __toESM(require_dist2(), 1);
var import_dist915 = __toESM(require_dist3(), 1);

// node_modules/multiformats/esm/src/codecs/json.js
var import_dist916 = __toESM(require_dist(), 1);
var import_dist917 = __toESM(require_dist2(), 1);
var import_dist918 = __toESM(require_dist3(), 1);
var textEncoder = new TextEncoder();
var textDecoder = new TextDecoder();

// node_modules/multiformats/esm/src/index.js
var import_dist922 = __toESM(require_dist(), 1);
var import_dist923 = __toESM(require_dist2(), 1);
var import_dist924 = __toESM(require_dist3(), 1);

// node_modules/multiformats/esm/src/cid.js
var import_dist919 = __toESM(require_dist(), 1);
var import_dist920 = __toESM(require_dist2(), 1);
var import_dist921 = __toESM(require_dist3(), 1);
var CID = class _CID {
  constructor(version3, code2, multihash, bytes) {
    this.code = code2;
    this.version = version3;
    this.multihash = multihash;
    this.bytes = bytes;
    this.byteOffset = bytes.byteOffset;
    this.byteLength = bytes.byteLength;
    this.asCID = this;
    this._baseCache = /* @__PURE__ */ new Map();
    Object.defineProperties(this, {
      byteOffset: hidden,
      byteLength: hidden,
      code: readonly,
      version: readonly,
      multihash: readonly,
      bytes: readonly,
      _baseCache: hidden,
      asCID: hidden
    });
  }
  toV0() {
    switch (this.version) {
      case 0: {
        return this;
      }
      default: {
        const { code: code2, multihash } = this;
        if (code2 !== DAG_PB_CODE) {
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        }
        if (multihash.code !== SHA_256_CODE) {
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        }
        return _CID.createV0(multihash);
      }
    }
  }
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: code2, digest: digest2 } = this.multihash;
        const multihash = create2(code2, digest2);
        return _CID.createV1(this.code, multihash);
      }
      case 1: {
        return this;
      }
      default: {
        throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
      }
    }
  }
  equals(other) {
    return other && this.code === other.code && this.version === other.version && equals2(this.multihash, other.multihash);
  }
  toString(base3) {
    const { bytes, version: version3, _baseCache } = this;
    switch (version3) {
      case 0:
        return toStringV0(bytes, _baseCache, base3 || base58btc.encoder);
      default:
        return toStringV1(bytes, _baseCache, base3 || base32.encoder);
    }
  }
  toJSON() {
    return {
      code: this.code,
      version: this.version,
      hash: this.multihash.bytes
    };
  }
  get [Symbol.toStringTag]() {
    return "CID";
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return "CID(" + this.toString() + ")";
  }
  static isCID(value) {
    deprecate(/^0\.0/, IS_CID_DEPRECATION);
    return !!(value && (value[cidSymbol] || value.asCID === value));
  }
  get toBaseEncodedString() {
    throw new Error("Deprecated, use .toString()");
  }
  get codec() {
    throw new Error('"codec" property is deprecated, use integer "code" property instead');
  }
  get buffer() {
    throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead");
  }
  get multibaseName() {
    throw new Error('"multibaseName" property is deprecated');
  }
  get prefix() {
    throw new Error('"prefix" property is deprecated');
  }
  static asCID(value) {
    if (value instanceof _CID) {
      return value;
    } else if (value != null && value.asCID === value) {
      const { version: version3, code: code2, multihash, bytes } = value;
      return new _CID(version3, code2, multihash, bytes || encodeCID(version3, code2, multihash.bytes));
    } else if (value != null && value[cidSymbol] === true) {
      const { version: version3, multihash, code: code2 } = value;
      const digest2 = decode6(multihash);
      return _CID.create(version3, code2, digest2);
    } else {
      return null;
    }
  }
  static create(version3, code2, digest2) {
    if (typeof code2 !== "number") {
      throw new Error("String codecs are no longer supported");
    }
    switch (version3) {
      case 0: {
        if (code2 !== DAG_PB_CODE) {
          throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);
        } else {
          return new _CID(version3, code2, digest2, digest2.bytes);
        }
      }
      case 1: {
        const bytes = encodeCID(version3, code2, digest2.bytes);
        return new _CID(version3, code2, digest2, bytes);
      }
      default: {
        throw new Error("Invalid version");
      }
    }
  }
  static createV0(digest2) {
    return _CID.create(0, DAG_PB_CODE, digest2);
  }
  static createV1(code2, digest2) {
    return _CID.create(1, code2, digest2);
  }
  static decode(bytes) {
    const [cid, remainder] = _CID.decodeFirst(bytes);
    if (remainder.length) {
      throw new Error("Incorrect length");
    }
    return cid;
  }
  static decodeFirst(bytes) {
    const specs = _CID.inspectBytes(bytes);
    const prefixSize = specs.size - specs.multihashSize;
    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
    if (multihashBytes.byteLength !== specs.multihashSize) {
      throw new Error("Incorrect length");
    }
    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
    const digest2 = new Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
    const cid = specs.version === 0 ? _CID.createV0(digest2) : _CID.createV1(specs.codec, digest2);
    return [
      cid,
      bytes.subarray(specs.size)
    ];
  }
  static inspectBytes(initialBytes) {
    let offset = 0;
    const next = () => {
      const [i6, length2] = decode5(initialBytes.subarray(offset));
      offset += length2;
      return i6;
    };
    let version3 = next();
    let codec = DAG_PB_CODE;
    if (version3 === 18) {
      version3 = 0;
      offset = 0;
    } else if (version3 === 1) {
      codec = next();
    }
    if (version3 !== 0 && version3 !== 1) {
      throw new RangeError(`Invalid CID version ${version3}`);
    }
    const prefixSize = offset;
    const multihashCode = next();
    const digestSize = next();
    const size4 = offset + digestSize;
    const multihashSize = size4 - prefixSize;
    return {
      version: version3,
      codec,
      multihashCode,
      digestSize,
      multihashSize,
      size: size4
    };
  }
  static parse(source, base3) {
    const [prefix, bytes] = parseCIDtoBytes(source, base3);
    const cid = _CID.decode(bytes);
    cid._baseCache.set(prefix, source);
    return cid;
  }
};
var parseCIDtoBytes = (source, base3) => {
  switch (source[0]) {
    case "Q": {
      const decoder2 = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder2.decode(`${base58btc.prefix}${source}`)
      ];
    }
    case base58btc.prefix: {
      const decoder2 = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder2.decode(source)
      ];
    }
    case base32.prefix: {
      const decoder2 = base3 || base32;
      return [
        base32.prefix,
        decoder2.decode(source)
      ];
    }
    default: {
      if (base3 == null) {
        throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
      }
      return [
        source[0],
        base3.decode(source)
      ];
    }
  }
};
var toStringV0 = (bytes, cache, base3) => {
  const { prefix } = base3;
  if (prefix !== base58btc.prefix) {
    throw Error(`Cannot string encode V0 in ${base3.name} encoding`);
  }
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes).slice(1);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var toStringV1 = (bytes, cache, base3) => {
  const { prefix } = base3;
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var DAG_PB_CODE = 112;
var SHA_256_CODE = 18;
var encodeCID = (version3, code2, multihash) => {
  const codeOffset = encodingLength(version3);
  const hashOffset = codeOffset + encodingLength(code2);
  const bytes = new Uint8Array(hashOffset + multihash.byteLength);
  encodeTo(version3, bytes, 0);
  encodeTo(code2, bytes, codeOffset);
  bytes.set(multihash, hashOffset);
  return bytes;
};
var cidSymbol = Symbol.for("@ipld/js-cid/CID");
var readonly = {
  writable: false,
  configurable: false,
  enumerable: true
};
var hidden = {
  writable: false,
  enumerable: false,
  configurable: false
};
var version2 = "0.0.0-dev";
var deprecate = (range, message) => {
  if (range.test(version2)) {
    console.warn(message);
  } else {
    throw new Error(message);
  }
};
var IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;

// node_modules/multiformats/esm/src/basics.js
var bases = {
  ...identity_exports,
  ...base2_exports,
  ...base8_exports,
  ...base10_exports,
  ...base16_exports,
  ...base32_exports,
  ...base36_exports,
  ...base58_exports,
  ...base64_exports,
  ...base256emoji_exports
};
var hashes = {
  ...sha2_browser_exports,
  ...identity_exports2
};

// node_modules/uint8arrays/esm/src/util/bases.js
function createCodec(name2, prefix, encode8, decode7) {
  return {
    name: name2,
    prefix,
    encoder: {
      name: name2,
      prefix,
      encode: encode8
    },
    decoder: { decode: decode7 }
  };
}
var string = createCodec("utf8", "u", (buf) => {
  const decoder2 = new TextDecoder("utf8");
  return "u" + decoder2.decode(buf);
}, (str) => {
  const encoder3 = new TextEncoder();
  return encoder3.encode(str.substring(1));
});
var ascii = createCodec("ascii", "a", (buf) => {
  let string2 = "a";
  for (let i6 = 0; i6 < buf.length; i6++) {
    string2 += String.fromCharCode(buf[i6]);
  }
  return string2;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe(str.length);
  for (let i6 = 0; i6 < str.length; i6++) {
    buf[i6] = str.charCodeAt(i6);
  }
  return buf;
});
var BASES = {
  utf8: string,
  "utf-8": string,
  hex: bases.base16,
  latin1: ascii,
  ascii,
  binary: ascii,
  ...bases
};
var bases_default = BASES;

// node_modules/uint8arrays/esm/src/from-string.js
function fromString4(string2, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(string2, "utf8");
  }
  return base3.decoder.decode(`${base3.prefix}${string2}`);
}

// node_modules/uint8arrays/esm/src/to-string.js
var import_dist934 = __toESM(require_dist(), 1);
var import_dist935 = __toESM(require_dist2(), 1);
var import_dist936 = __toESM(require_dist3(), 1);
function toString3(array, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString("utf8");
  }
  return base3.encoder.encode(array).substring(1);
}

// node_modules/uint8arrays/esm/src/xor.js
var import_dist937 = __toESM(require_dist(), 1);
var import_dist938 = __toESM(require_dist2(), 1);
var import_dist939 = __toESM(require_dist3(), 1);

// node_modules/@walletconnect/relay-api/dist/index.es.js
var import_dist943 = __toESM(require_dist());
var import_dist944 = __toESM(require_dist2());
var import_dist945 = __toESM(require_dist3());
var C4 = { waku: { publish: "waku_publish", batchPublish: "waku_batchPublish", subscribe: "waku_subscribe", batchSubscribe: "waku_batchSubscribe", subscription: "waku_subscription", unsubscribe: "waku_unsubscribe", batchUnsubscribe: "waku_batchUnsubscribe", batchFetchMessages: "waku_batchFetchMessages" }, irn: { publish: "irn_publish", batchPublish: "irn_batchPublish", subscribe: "irn_subscribe", batchSubscribe: "irn_batchSubscribe", subscription: "irn_subscription", unsubscribe: "irn_unsubscribe", batchUnsubscribe: "irn_batchUnsubscribe", batchFetchMessages: "irn_batchFetchMessages" }, iridium: { publish: "iridium_publish", batchPublish: "iridium_batchPublish", subscribe: "iridium_subscribe", batchSubscribe: "iridium_batchSubscribe", subscription: "iridium_subscription", unsubscribe: "iridium_unsubscribe", batchUnsubscribe: "iridium_batchUnsubscribe", batchFetchMessages: "iridium_batchFetchMessages" } };

// node_modules/@walletconnect/utils/dist/index.es.js
var se = ":";
function Ie2(t3) {
  const [e4, n7] = t3.split(se);
  return { namespace: e4, reference: n7 };
}
function Ne2(t3) {
  const [e4, n7, r5] = t3.split(se);
  return { namespace: e4, reference: n7, address: r5 };
}
function ce(t3, e4) {
  return t3.includes(":") ? [t3] : e4.chains || [];
}
var Zo2 = Object.defineProperty;
var Yo2 = Object.defineProperties;
var Go2 = Object.getOwnPropertyDescriptors;
var Tn2 = Object.getOwnPropertySymbols;
var Wo2 = Object.prototype.hasOwnProperty;
var Xo = Object.prototype.propertyIsEnumerable;
var Rn2 = (t3, e4, n7) => e4 in t3 ? Zo2(t3, e4, { enumerable: true, configurable: true, writable: true, value: n7 }) : t3[e4] = n7;
var _n2 = (t3, e4) => {
  for (var n7 in e4 || (e4 = {})) Wo2.call(e4, n7) && Rn2(t3, n7, e4[n7]);
  if (Tn2) for (var n7 of Tn2(e4)) Xo.call(e4, n7) && Rn2(t3, n7, e4[n7]);
  return t3;
};
var Jo2 = (t3, e4) => Yo2(t3, Go2(e4));
var $n2 = "ReactNative";
var Y2 = { reactNative: "react-native", node: "node", browser: "browser", unknown: "unknown" };
var jn2 = "js";
function Re2() {
  return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
}
function pt() {
  return !(0, import_window_getters.getDocument)() && !!(0, import_window_getters.getNavigator)() && navigator.product === $n2;
}
function ei() {
  return pt() && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u" && (global == null ? void 0 : global.Platform.OS) === "android";
}
function ni() {
  return pt() && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u" && (global == null ? void 0 : global.Platform.OS) === "ios";
}
function Yt2() {
  return !Re2() && !!(0, import_window_getters.getNavigator)() && !!(0, import_window_getters.getDocument)();
}
function xt2() {
  return pt() ? Y2.reactNative : Re2() ? Y2.node : Yt2() ? Y2.browser : Y2.unknown;
}
function ri() {
  var t3;
  try {
    return pt() && typeof global < "u" && typeof (global == null ? void 0 : global.Application) < "u" ? (t3 = global.Application) == null ? void 0 : t3.applicationId : void 0;
  } catch {
    return;
  }
}
function Cn2(t3, e4) {
  const n7 = new URLSearchParams(t3);
  for (const r5 of Object.keys(e4).sort()) if (e4.hasOwnProperty(r5)) {
    const o6 = e4[r5];
    o6 !== void 0 && n7.set(r5, o6);
  }
  return n7.toString();
}
function oi(t3) {
  var e4, n7;
  const r5 = Pn2();
  try {
    return t3 != null && t3.url && r5.url && t3.url !== r5.url && (console.warn(`The configured WalletConnect 'metadata.url':${t3.url} differs from the actual page url:${r5.url}. This is probably unintended and can lead to issues.`), t3.url = r5.url), (e4 = t3 == null ? void 0 : t3.icons) != null && e4.length && t3.icons.length > 0 && (t3.icons = t3.icons.filter((o6) => o6 !== "")), Jo2(_n2(_n2({}, r5), t3), { url: (t3 == null ? void 0 : t3.url) || r5.url, name: (t3 == null ? void 0 : t3.name) || r5.name, description: (t3 == null ? void 0 : t3.description) || r5.description, icons: (n7 = t3 == null ? void 0 : t3.icons) != null && n7.length && t3.icons.length > 0 ? t3.icons : r5.icons });
  } catch (o6) {
    return console.warn("Error populating app metadata", o6), t3 || r5;
  }
}
function Pn2() {
  return (0, import_window_metadata.getWindowMetadata)() || { name: "", description: "", url: "", icons: [""] };
}
function kn2() {
  if (xt2() === Y2.reactNative && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u") {
    const { OS: n7, Version: r5 } = global.Platform;
    return [n7, r5].join("-");
  }
  const t3 = detect2();
  if (t3 === null) return "unknown";
  const e4 = t3.os ? t3.os.replace(" ", "").toLowerCase() : "unknown";
  return t3.type === "browser" ? [e4, t3.name, t3.version].join("-") : [e4, t3.version].join("-");
}
function Vn2() {
  var t3;
  const e4 = xt2();
  return e4 === Y2.browser ? [e4, ((t3 = (0, import_window_getters.getLocation)()) == null ? void 0 : t3.host) || "unknown"].join(":") : e4;
}
function Mn2(t3, e4, n7) {
  const r5 = kn2(), o6 = Vn2();
  return [[t3, e4].join("-"), [jn2, n7].join("-"), r5, o6].join("/");
}
function si({ protocol: t3, version: e4, relayUrl: n7, sdkVersion: r5, auth: o6, projectId: i6, useOnCloseEvent: s5, bundleId: c8, packageName: a5 }) {
  const u4 = n7.split("?"), l9 = Mn2(t3, e4, r5), f8 = { auth: o6, ua: l9, projectId: i6, useOnCloseEvent: s5 || void 0, packageName: a5 || void 0, bundleId: c8 || void 0 }, h7 = Cn2(u4[1] || "", f8);
  return u4[0] + "?" + h7;
}
function gt2(t3, e4) {
  return t3.filter((n7) => e4.includes(n7)).length === t3.length;
}
function fi(t3) {
  return Object.fromEntries(t3.entries());
}
function li(t3) {
  return new Map(Object.entries(t3));
}
function gi(t3 = import_time3.FIVE_MINUTES, e4) {
  const n7 = (0, import_time3.toMiliseconds)(t3 || import_time3.FIVE_MINUTES);
  let r5, o6, i6, s5;
  return { resolve: (c8) => {
    i6 && r5 && (clearTimeout(i6), r5(c8), s5 = Promise.resolve(c8));
  }, reject: (c8) => {
    i6 && o6 && (clearTimeout(i6), o6(c8));
  }, done: () => new Promise((c8, a5) => {
    if (s5) return c8(s5);
    i6 = setTimeout(() => {
      const u4 = new Error(e4);
      s5 = Promise.reject(u4), a5(u4);
    }, n7), r5 = c8, o6 = a5;
  }) };
}
function yi(t3, e4, n7) {
  return new Promise(async (r5, o6) => {
    const i6 = setTimeout(() => o6(new Error(n7)), e4);
    try {
      const s5 = await t3;
      r5(s5);
    } catch (s5) {
      o6(s5);
    }
    clearTimeout(i6);
  });
}
function _e2(t3, e4) {
  if (typeof e4 == "string" && e4.startsWith(`${t3}:`)) return e4;
  if (t3.toLowerCase() === "topic") {
    if (typeof e4 != "string") throw new Error('Value must be "string" for expirer target type: topic');
    return `topic:${e4}`;
  } else if (t3.toLowerCase() === "id") {
    if (typeof e4 != "number") throw new Error('Value must be "number" for expirer target type: id');
    return `id:${e4}`;
  }
  throw new Error(`Unknown expirer target type: ${t3}`);
}
function mi(t3) {
  return _e2("topic", t3);
}
function wi(t3) {
  return _e2("id", t3);
}
function bi(t3) {
  const [e4, n7] = t3.split(":"), r5 = { id: void 0, topic: void 0 };
  if (e4 === "topic" && typeof n7 == "string") r5.topic = n7;
  else if (e4 === "id" && Number.isInteger(Number(n7))) r5.id = Number(n7);
  else throw new Error(`Invalid target, expected id:number or topic:string, got ${e4}:${n7}`);
  return r5;
}
function Ei(t3, e4) {
  return (0, import_time3.fromMiliseconds)((e4 || Date.now()) + (0, import_time3.toMiliseconds)(t3));
}
function vi(t3) {
  return Date.now() >= (0, import_time3.toMiliseconds)(t3);
}
function xi(t3, e4) {
  return `${t3}${e4 ? `:${e4}` : ""}`;
}
function at(t3 = [], e4 = []) {
  return [.../* @__PURE__ */ new Set([...t3, ...e4])];
}
async function Si({ id: t3, topic: e4, wcDeepLink: n7 }) {
  var r5;
  try {
    if (!n7) return;
    const o6 = typeof n7 == "string" ? JSON.parse(n7) : n7, i6 = o6 == null ? void 0 : o6.href;
    if (typeof i6 != "string") return;
    const s5 = Kn2(i6, t3, e4), c8 = xt2();
    if (c8 === Y2.browser) {
      if (!((r5 = (0, import_window_getters.getDocument)()) != null && r5.hasFocus())) {
        console.warn("Document does not have focus, skipping deeplink.");
        return;
      }
      Fn2(s5);
    } else c8 === Y2.reactNative && typeof (global == null ? void 0 : global.Linking) < "u" && await global.Linking.openURL(s5);
  } catch (o6) {
    console.error(o6);
  }
}
function Kn2(t3, e4, n7) {
  const r5 = `requestId=${e4}&sessionTopic=${n7}`;
  t3.endsWith("/") && (t3 = t3.slice(0, -1));
  let o6 = `${t3}`;
  if (t3.startsWith("https://t.me")) {
    const i6 = t3.includes("?") ? "&startapp=" : "?startapp=";
    o6 = `${o6}${i6}${Yn2(r5, true)}`;
  } else o6 = `${o6}/wc?${r5}`;
  return o6;
}
function Fn2(t3) {
  let e4 = "_self";
  Zn2() ? e4 = "_top" : (zn2() || t3.startsWith("https://") || t3.startsWith("http://")) && (e4 = "_blank"), window.open(t3, e4, "noreferrer noopener");
}
async function Oi(t3, e4) {
  let n7 = "";
  try {
    if (Yt2() && (n7 = localStorage.getItem(e4), n7)) return n7;
    n7 = await t3.getItem(e4);
  } catch (r5) {
    console.error(r5);
  }
  return n7;
}
function Ai(t3, e4) {
  if (!t3.includes(e4)) return null;
  const n7 = t3.split(/([&,?,=])/), r5 = n7.indexOf(e4);
  return n7[r5 + 2];
}
function Bi() {
  return typeof crypto < "u" && crypto != null && crypto.randomUUID ? crypto.randomUUID() : "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu, (t3) => {
    const e4 = Math.random() * 16 | 0;
    return (t3 === "x" ? e4 : e4 & 3 | 8).toString(16);
  });
}
function Ii() {
  return typeof process < "u" && process.env.IS_VITEST === "true";
}
function zn2() {
  return typeof window < "u" && (!!window.TelegramWebviewProxy || !!window.Telegram || !!window.TelegramWebviewProxyProto);
}
function Zn2() {
  try {
    return window.self !== window.top;
  } catch {
    return false;
  }
}
function Yn2(t3, e4 = false) {
  const n7 = Buffer.from(t3).toString("base64");
  return e4 ? n7.replace(/[=]/g, "") : n7;
}
function Le2(t3) {
  return Buffer.from(t3, "base64").toString("utf-8");
}
function Ni(t3) {
  return new Promise((e4) => setTimeout(e4, t3));
}
function Gt2(t3) {
  if (!Number.isSafeInteger(t3) || t3 < 0) throw new Error("positive integer expected, got " + t3);
}
function Ui(t3) {
  return t3 instanceof Uint8Array || ArrayBuffer.isView(t3) && t3.constructor.name === "Uint8Array";
}
function Wt2(t3, ...e4) {
  if (!Ui(t3)) throw new Error("Uint8Array expected");
  if (e4.length > 0 && !e4.includes(t3.length)) throw new Error("Uint8Array expected of length " + e4 + ", got length=" + t3.length);
}
function je2(t3) {
  if (typeof t3 != "function" || typeof t3.create != "function") throw new Error("Hash should be wrapped by utils.wrapConstructor");
  Gt2(t3.outputLen), Gt2(t3.blockLen);
}
function Tt2(t3, e4 = true) {
  if (t3.destroyed) throw new Error("Hash instance has been destroyed");
  if (e4 && t3.finished) throw new Error("Hash#digest() has already been called");
}
function Gn2(t3, e4) {
  Wt2(t3);
  const n7 = e4.outputLen;
  if (t3.length < n7) throw new Error("digestInto() expects output buffer of length at least " + n7);
}
var ue = BigInt(2 ** 32 - 1);
var Wn2 = BigInt(32);
function Ti(t3, e4 = false) {
  return e4 ? { h: Number(t3 & ue), l: Number(t3 >> Wn2 & ue) } : { h: Number(t3 >> Wn2 & ue) | 0, l: Number(t3 & ue) | 0 };
}
function Ri(t3, e4 = false) {
  let n7 = new Uint32Array(t3.length), r5 = new Uint32Array(t3.length);
  for (let o6 = 0; o6 < t3.length; o6++) {
    const { h: i6, l: s5 } = Ti(t3[o6], e4);
    [n7[o6], r5[o6]] = [i6, s5];
  }
  return [n7, r5];
}
var _i = (t3, e4, n7) => t3 << n7 | e4 >>> 32 - n7;
var $i = (t3, e4, n7) => e4 << n7 | t3 >>> 32 - n7;
var Li = (t3, e4, n7) => e4 << n7 - 32 | t3 >>> 64 - n7;
var ji = (t3, e4, n7) => t3 << n7 - 32 | e4 >>> 64 - n7;
var Rt2 = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
function Ci(t3) {
  return new Uint32Array(t3.buffer, t3.byteOffset, Math.floor(t3.byteLength / 4));
}
function Ce2(t3) {
  return new DataView(t3.buffer, t3.byteOffset, t3.byteLength);
}
function st(t3, e4) {
  return t3 << 32 - e4 | t3 >>> e4;
}
var Xn2 = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
function Pi2(t3) {
  return t3 << 24 & 4278190080 | t3 << 8 & 16711680 | t3 >>> 8 & 65280 | t3 >>> 24 & 255;
}
function Jn2(t3) {
  for (let e4 = 0; e4 < t3.length; e4++) t3[e4] = Pi2(t3[e4]);
}
function ki(t3) {
  if (typeof t3 != "string") throw new Error("utf8ToBytes expected string, got " + typeof t3);
  return new Uint8Array(new TextEncoder().encode(t3));
}
function _t2(t3) {
  return typeof t3 == "string" && (t3 = ki(t3)), Wt2(t3), t3;
}
function Vi(...t3) {
  let e4 = 0;
  for (let r5 = 0; r5 < t3.length; r5++) {
    const o6 = t3[r5];
    Wt2(o6), e4 += o6.length;
  }
  const n7 = new Uint8Array(e4);
  for (let r5 = 0, o6 = 0; r5 < t3.length; r5++) {
    const i6 = t3[r5];
    n7.set(i6, o6), o6 += i6.length;
  }
  return n7;
}
var Pe2 = class {
  clone() {
    return this._cloneInto();
  }
};
function Qn2(t3) {
  const e4 = (r5) => t3().update(_t2(r5)).digest(), n7 = t3();
  return e4.outputLen = n7.outputLen, e4.blockLen = n7.blockLen, e4.create = () => t3(), e4;
}
function $t2(t3 = 32) {
  if (Rt2 && typeof Rt2.getRandomValues == "function") return Rt2.getRandomValues(new Uint8Array(t3));
  if (Rt2 && typeof Rt2.randomBytes == "function") return Rt2.randomBytes(t3);
  throw new Error("crypto.getRandomValues must be defined");
}
var tr2 = [];
var er2 = [];
var nr2 = [];
var Mi = BigInt(0);
var Xt2 = BigInt(1);
var Di = BigInt(2);
var Hi = BigInt(7);
var qi = BigInt(256);
var Ki = BigInt(113);
for (let t3 = 0, e4 = Xt2, n7 = 1, r5 = 0; t3 < 24; t3++) {
  [n7, r5] = [r5, (2 * n7 + 3 * r5) % 5], tr2.push(2 * (5 * r5 + n7)), er2.push((t3 + 1) * (t3 + 2) / 2 % 64);
  let o6 = Mi;
  for (let i6 = 0; i6 < 7; i6++) e4 = (e4 << Xt2 ^ (e4 >> Hi) * Ki) % qi, e4 & Di && (o6 ^= Xt2 << (Xt2 << BigInt(i6)) - Xt2);
  nr2.push(o6);
}
var [Fi, zi] = Ri(nr2, true);
var rr2 = (t3, e4, n7) => n7 > 32 ? Li(t3, e4, n7) : _i(t3, e4, n7);
var or3 = (t3, e4, n7) => n7 > 32 ? ji(t3, e4, n7) : $i(t3, e4, n7);
function Zi(t3, e4 = 24) {
  const n7 = new Uint32Array(10);
  for (let r5 = 24 - e4; r5 < 24; r5++) {
    for (let s5 = 0; s5 < 10; s5++) n7[s5] = t3[s5] ^ t3[s5 + 10] ^ t3[s5 + 20] ^ t3[s5 + 30] ^ t3[s5 + 40];
    for (let s5 = 0; s5 < 10; s5 += 2) {
      const c8 = (s5 + 8) % 10, a5 = (s5 + 2) % 10, u4 = n7[a5], l9 = n7[a5 + 1], f8 = rr2(u4, l9, 1) ^ n7[c8], h7 = or3(u4, l9, 1) ^ n7[c8 + 1];
      for (let y7 = 0; y7 < 50; y7 += 10) t3[s5 + y7] ^= f8, t3[s5 + y7 + 1] ^= h7;
    }
    let o6 = t3[2], i6 = t3[3];
    for (let s5 = 0; s5 < 24; s5++) {
      const c8 = er2[s5], a5 = rr2(o6, i6, c8), u4 = or3(o6, i6, c8), l9 = tr2[s5];
      o6 = t3[l9], i6 = t3[l9 + 1], t3[l9] = a5, t3[l9 + 1] = u4;
    }
    for (let s5 = 0; s5 < 50; s5 += 10) {
      for (let c8 = 0; c8 < 10; c8++) n7[c8] = t3[s5 + c8];
      for (let c8 = 0; c8 < 10; c8++) t3[s5 + c8] ^= ~n7[(c8 + 2) % 10] & n7[(c8 + 4) % 10];
    }
    t3[0] ^= Fi[r5], t3[1] ^= zi[r5];
  }
  n7.fill(0);
}
var En2 = class _En extends Pe2 {
  constructor(e4, n7, r5, o6 = false, i6 = 24) {
    if (super(), this.blockLen = e4, this.suffix = n7, this.outputLen = r5, this.enableXOF = o6, this.rounds = i6, this.pos = 0, this.posOut = 0, this.finished = false, this.destroyed = false, Gt2(r5), 0 >= this.blockLen || this.blockLen >= 200) throw new Error("Sha3 supports only keccak-f1600 function");
    this.state = new Uint8Array(200), this.state32 = Ci(this.state);
  }
  keccak() {
    Xn2 || Jn2(this.state32), Zi(this.state32, this.rounds), Xn2 || Jn2(this.state32), this.posOut = 0, this.pos = 0;
  }
  update(e4) {
    Tt2(this);
    const { blockLen: n7, state: r5 } = this;
    e4 = _t2(e4);
    const o6 = e4.length;
    for (let i6 = 0; i6 < o6; ) {
      const s5 = Math.min(n7 - this.pos, o6 - i6);
      for (let c8 = 0; c8 < s5; c8++) r5[this.pos++] ^= e4[i6++];
      this.pos === n7 && this.keccak();
    }
    return this;
  }
  finish() {
    if (this.finished) return;
    this.finished = true;
    const { state: e4, suffix: n7, pos: r5, blockLen: o6 } = this;
    e4[r5] ^= n7, (n7 & 128) !== 0 && r5 === o6 - 1 && this.keccak(), e4[o6 - 1] ^= 128, this.keccak();
  }
  writeInto(e4) {
    Tt2(this, false), Wt2(e4), this.finish();
    const n7 = this.state, { blockLen: r5 } = this;
    for (let o6 = 0, i6 = e4.length; o6 < i6; ) {
      this.posOut >= r5 && this.keccak();
      const s5 = Math.min(r5 - this.posOut, i6 - o6);
      e4.set(n7.subarray(this.posOut, this.posOut + s5), o6), this.posOut += s5, o6 += s5;
    }
    return e4;
  }
  xofInto(e4) {
    if (!this.enableXOF) throw new Error("XOF is not possible for this instance");
    return this.writeInto(e4);
  }
  xof(e4) {
    return Gt2(e4), this.xofInto(new Uint8Array(e4));
  }
  digestInto(e4) {
    if (Gn2(e4, this), this.finished) throw new Error("digest() was already called");
    return this.writeInto(e4), this.destroy(), e4;
  }
  digest() {
    return this.digestInto(new Uint8Array(this.outputLen));
  }
  destroy() {
    this.destroyed = true, this.state.fill(0);
  }
  _cloneInto(e4) {
    const { blockLen: n7, suffix: r5, outputLen: o6, rounds: i6, enableXOF: s5 } = this;
    return e4 || (e4 = new _En(n7, r5, o6, s5, i6)), e4.state32.set(this.state32), e4.pos = this.pos, e4.posOut = this.posOut, e4.finished = this.finished, e4.rounds = i6, e4.suffix = r5, e4.outputLen = o6, e4.enableXOF = s5, e4.destroyed = this.destroyed, e4;
  }
};
var Yi = (t3, e4, n7) => Qn2(() => new En2(e4, t3, n7));
var Gi = Yi(1, 136, 256 / 8);
var Wi = "https://rpc.walletconnect.org/v1";
function ke2(t3) {
  const e4 = `Ethereum Signed Message:
${t3.length}`, n7 = new TextEncoder().encode(e4 + t3);
  return "0x" + Buffer.from(Gi(n7)).toString("hex");
}
async function ir2(t3, e4, n7, r5, o6, i6) {
  switch (n7.t) {
    case "eip191":
      return await sr2(t3, e4, n7.s);
    case "eip1271":
      return await cr2(t3, e4, n7.s, r5, o6, i6);
    default:
      throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${n7.t}`);
  }
}
async function sr2(t3, e4, n7) {
  return (await recoverAddress({ hash: ke2(e4), signature: n7 })).toLowerCase() === t3.toLowerCase();
}
async function cr2(t3, e4, n7, r5, o6, i6) {
  const s5 = Ie2(r5);
  if (!s5.namespace || !s5.reference) throw new Error(`isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${r5}`);
  try {
    const c8 = "0x1626ba7e", a5 = "0000000000000000000000000000000000000000000000000000000000000040", u4 = "0000000000000000000000000000000000000000000000000000000000000041", l9 = n7.substring(2), f8 = ke2(e4).substring(2), h7 = c8 + f8 + a5 + u4 + l9, y7 = await fetch(`${i6 || Wi}/?chainId=${r5}&projectId=${o6}`, { method: "POST", body: JSON.stringify({ id: Xi(), jsonrpc: "2.0", method: "eth_call", params: [{ to: t3, data: h7 }, "latest"] }) }), { result: E8 } = await y7.json();
    return E8 ? E8.slice(0, c8.length).toLowerCase() === c8.toLowerCase() : false;
  } catch (c8) {
    return console.error("isValidEip1271Signature: ", c8), false;
  }
}
function Xi() {
  return Date.now() + Math.floor(Math.random() * 1e3);
}
function Ji(t3) {
  const e4 = atob(t3), n7 = new Uint8Array(e4.length);
  for (let s5 = 0; s5 < e4.length; s5++) n7[s5] = e4.charCodeAt(s5);
  const r5 = n7[0];
  if (r5 === 0) throw new Error("No signatures found");
  const o6 = 1 + r5 * 64;
  if (n7.length < o6) throw new Error("Transaction data too short for claimed signature count");
  if (n7.length < 100) throw new Error("Transaction too short");
  const i6 = Buffer.from(t3, "base64").slice(1, 65);
  return esm_default.encode(i6);
}
var Qi = Object.defineProperty;
var ts = Object.defineProperties;
var es = Object.getOwnPropertyDescriptors;
var ar2 = Object.getOwnPropertySymbols;
var ns = Object.prototype.hasOwnProperty;
var rs = Object.prototype.propertyIsEnumerable;
var ur2 = (t3, e4, n7) => e4 in t3 ? Qi(t3, e4, { enumerable: true, configurable: true, writable: true, value: n7 }) : t3[e4] = n7;
var Ve2 = (t3, e4) => {
  for (var n7 in e4 || (e4 = {})) ns.call(e4, n7) && ur2(t3, n7, e4[n7]);
  if (ar2) for (var n7 of ar2(e4)) rs.call(e4, n7) && ur2(t3, n7, e4[n7]);
  return t3;
};
var fr2 = (t3, e4) => ts(t3, es(e4));
var os = "did:pkh:";
var fe2 = (t3) => t3 == null ? void 0 : t3.split(":");
var lr2 = (t3) => {
  const e4 = t3 && fe2(t3);
  if (e4) return t3.includes(os) ? e4[3] : e4[1];
};
var dr2 = (t3) => {
  const e4 = t3 && fe2(t3);
  if (e4) return e4[2] + ":" + e4[3];
};
var Me2 = (t3) => {
  const e4 = t3 && fe2(t3);
  if (e4) return e4.pop();
};
async function is(t3) {
  const { cacao: e4, projectId: n7 } = t3, { s: r5, p: o6 } = e4, i6 = hr2(o6, o6.iss), s5 = Me2(o6.iss);
  return await ir2(s5, i6, r5, dr2(o6.iss), n7);
}
var hr2 = (t3, e4) => {
  const n7 = `${t3.domain} wants you to sign in with your Ethereum account:`, r5 = Me2(e4);
  if (!t3.aud && !t3.uri) throw new Error("Either `aud` or `uri` is required to construct the message");
  let o6 = t3.statement || void 0;
  const i6 = `URI: ${t3.aud || t3.uri}`, s5 = `Version: ${t3.version}`, c8 = `Chain ID: ${lr2(e4)}`, a5 = `Nonce: ${t3.nonce}`, u4 = `Issued At: ${t3.iat}`, l9 = t3.exp ? `Expiration Time: ${t3.exp}` : void 0, f8 = t3.nbf ? `Not Before: ${t3.nbf}` : void 0, h7 = t3.requestId ? `Request ID: ${t3.requestId}` : void 0, y7 = t3.resources ? `Resources:${t3.resources.map((p6) => `
- ${p6}`).join("")}` : void 0, E8 = de2(t3.resources);
  if (E8) {
    const p6 = yt2(E8);
    o6 = qe2(o6, p6);
  }
  return [n7, r5, "", o6, "", i6, s5, c8, a5, u4, l9, f8, h7, y7].filter((p6) => p6 != null).join(`
`);
};
function mr2(t3) {
  return Buffer.from(JSON.stringify(t3)).toString("base64");
}
function wr2(t3) {
  return JSON.parse(Buffer.from(t3, "base64").toString("utf-8"));
}
function ct2(t3) {
  if (!t3) throw new Error("No recap provided, value is undefined");
  if (!t3.att) throw new Error("No `att` property found");
  const e4 = Object.keys(t3.att);
  if (!(e4 != null && e4.length)) throw new Error("No resources found in `att` property");
  e4.forEach((n7) => {
    const r5 = t3.att[n7];
    if (Array.isArray(r5)) throw new Error(`Resource must be an object: ${n7}`);
    if (typeof r5 != "object") throw new Error(`Resource must be an object: ${n7}`);
    if (!Object.keys(r5).length) throw new Error(`Resource object is empty: ${n7}`);
    Object.keys(r5).forEach((o6) => {
      const i6 = r5[o6];
      if (!Array.isArray(i6)) throw new Error(`Ability limits ${o6} must be an array of objects, found: ${i6}`);
      if (!i6.length) throw new Error(`Value of ${o6} is empty array, must be an array with objects`);
      i6.forEach((s5) => {
        if (typeof s5 != "object") throw new Error(`Ability limits (${o6}) must be an array of objects, found: ${s5}`);
      });
    });
  });
}
function br2(t3, e4, n7, r5 = {}) {
  return n7 == null ? void 0 : n7.sort((o6, i6) => o6.localeCompare(i6)), { att: { [t3]: De2(e4, n7, r5) } };
}
function De2(t3, e4, n7 = {}) {
  e4 = e4 == null ? void 0 : e4.sort((o6, i6) => o6.localeCompare(i6));
  const r5 = e4.map((o6) => ({ [`${t3}/${o6}`]: [n7] }));
  return Object.assign({}, ...r5);
}
function le2(t3) {
  return ct2(t3), `urn:recap:${mr2(t3).replace(/=/g, "")}`;
}
function yt2(t3) {
  const e4 = wr2(t3.replace("urn:recap:", ""));
  return ct2(e4), e4;
}
function fs(t3, e4, n7) {
  const r5 = br2(t3, e4, n7);
  return le2(r5);
}
function He2(t3) {
  return t3 && t3.includes("urn:recap:");
}
function ls(t3, e4) {
  const n7 = yt2(t3), r5 = yt2(e4), o6 = vr2(n7, r5);
  return le2(o6);
}
function vr2(t3, e4) {
  ct2(t3), ct2(e4);
  const n7 = Object.keys(t3.att).concat(Object.keys(e4.att)).sort((o6, i6) => o6.localeCompare(i6)), r5 = { att: {} };
  return n7.forEach((o6) => {
    var i6, s5;
    Object.keys(((i6 = t3.att) == null ? void 0 : i6[o6]) || {}).concat(Object.keys(((s5 = e4.att) == null ? void 0 : s5[o6]) || {})).sort((c8, a5) => c8.localeCompare(a5)).forEach((c8) => {
      var a5, u4;
      r5.att[o6] = fr2(Ve2({}, r5.att[o6]), { [c8]: ((a5 = t3.att[o6]) == null ? void 0 : a5[c8]) || ((u4 = e4.att[o6]) == null ? void 0 : u4[c8]) });
    });
  }), r5;
}
function qe2(t3 = "", e4) {
  ct2(e4);
  const n7 = "I further authorize the stated URI to perform the following actions on my behalf: ";
  if (t3.includes(n7)) return t3;
  const r5 = [];
  let o6 = 0;
  Object.keys(e4.att).forEach((c8) => {
    const a5 = Object.keys(e4.att[c8]).map((f8) => ({ ability: f8.split("/")[0], action: f8.split("/")[1] }));
    a5.sort((f8, h7) => f8.action.localeCompare(h7.action));
    const u4 = {};
    a5.forEach((f8) => {
      u4[f8.ability] || (u4[f8.ability] = []), u4[f8.ability].push(f8.action);
    });
    const l9 = Object.keys(u4).map((f8) => (o6++, `(${o6}) '${f8}': '${u4[f8].join("', '")}' for '${c8}'.`));
    r5.push(l9.join(", ").replace(".,", "."));
  });
  const i6 = r5.join(" "), s5 = `${n7}${i6}`;
  return `${t3 ? t3 + " " : ""}${s5}`;
}
function ds(t3) {
  var e4;
  const n7 = yt2(t3);
  ct2(n7);
  const r5 = (e4 = n7.att) == null ? void 0 : e4.eip155;
  return r5 ? Object.keys(r5).map((o6) => o6.split("/")[1]) : [];
}
function hs(t3) {
  const e4 = yt2(t3);
  ct2(e4);
  const n7 = [];
  return Object.values(e4.att).forEach((r5) => {
    Object.values(r5).forEach((o6) => {
      var i6;
      (i6 = o6 == null ? void 0 : o6[0]) != null && i6.chains && n7.push(o6[0].chains);
    });
  }), [...new Set(n7.flat())];
}
function de2(t3) {
  if (!t3) return;
  const e4 = t3 == null ? void 0 : t3[t3.length - 1];
  return He2(e4) ? e4 : void 0;
}
function Ke2(t3) {
  if (!Number.isSafeInteger(t3) || t3 < 0) throw new Error("positive integer expected, got " + t3);
}
function Sr2(t3) {
  return t3 instanceof Uint8Array || ArrayBuffer.isView(t3) && t3.constructor.name === "Uint8Array";
}
function tt(t3, ...e4) {
  if (!Sr2(t3)) throw new Error("Uint8Array expected");
  if (e4.length > 0 && !e4.includes(t3.length)) throw new Error("Uint8Array expected of length " + e4 + ", got length=" + t3.length);
}
function Or2(t3, e4 = true) {
  if (t3.destroyed) throw new Error("Hash instance has been destroyed");
  if (e4 && t3.finished) throw new Error("Hash#digest() has already been called");
}
function ps(t3, e4) {
  tt(t3);
  const n7 = e4.outputLen;
  if (t3.length < n7) throw new Error("digestInto() expects output buffer of length at least " + n7);
}
function Ar2(t3) {
  if (typeof t3 != "boolean") throw new Error(`boolean expected, not ${t3}`);
}
var mt = (t3) => new Uint32Array(t3.buffer, t3.byteOffset, Math.floor(t3.byteLength / 4));
var gs = (t3) => new DataView(t3.buffer, t3.byteOffset, t3.byteLength);
var ys = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
if (!ys) throw new Error("Non little-endian hardware is not supported");
function ms(t3) {
  if (typeof t3 != "string") throw new Error("string expected");
  return new Uint8Array(new TextEncoder().encode(t3));
}
function Fe(t3) {
  if (typeof t3 == "string") t3 = ms(t3);
  else if (Sr2(t3)) t3 = ze2(t3);
  else throw new Error("Uint8Array expected, got " + typeof t3);
  return t3;
}
function ws(t3, e4) {
  if (e4 == null || typeof e4 != "object") throw new Error("options must be defined");
  return Object.assign(t3, e4);
}
function bs(t3, e4) {
  if (t3.length !== e4.length) return false;
  let n7 = 0;
  for (let r5 = 0; r5 < t3.length; r5++) n7 |= t3[r5] ^ e4[r5];
  return n7 === 0;
}
var Es = (t3, e4) => {
  function n7(r5, ...o6) {
    if (tt(r5), t3.nonceLength !== void 0) {
      const l9 = o6[0];
      if (!l9) throw new Error("nonce / iv required");
      t3.varSizeNonce ? tt(l9) : tt(l9, t3.nonceLength);
    }
    const i6 = t3.tagLength;
    i6 && o6[1] !== void 0 && tt(o6[1]);
    const s5 = e4(r5, ...o6), c8 = (l9, f8) => {
      if (f8 !== void 0) {
        if (l9 !== 2) throw new Error("cipher output not supported");
        tt(f8);
      }
    };
    let a5 = false;
    return { encrypt(l9, f8) {
      if (a5) throw new Error("cannot encrypt() twice with same key + nonce");
      return a5 = true, tt(l9), c8(s5.encrypt.length, f8), s5.encrypt(l9, f8);
    }, decrypt(l9, f8) {
      if (tt(l9), i6 && l9.length < i6) throw new Error("invalid ciphertext length: smaller than tagLength=" + i6);
      return c8(s5.decrypt.length, f8), s5.decrypt(l9, f8);
    } };
  }
  return Object.assign(n7, t3), n7;
};
function Br2(t3, e4, n7 = true) {
  if (e4 === void 0) return new Uint8Array(t3);
  if (e4.length !== t3) throw new Error("invalid output length, expected " + t3 + ", got: " + e4.length);
  if (n7 && !vs(e4)) throw new Error("invalid output, must be aligned");
  return e4;
}
function Ir2(t3, e4, n7, r5) {
  if (typeof t3.setBigUint64 == "function") return t3.setBigUint64(e4, n7, r5);
  const o6 = BigInt(32), i6 = BigInt(4294967295), s5 = Number(n7 >> o6 & i6), c8 = Number(n7 & i6), a5 = r5 ? 4 : 0, u4 = r5 ? 0 : 4;
  t3.setUint32(e4 + a5, s5, r5), t3.setUint32(e4 + u4, c8, r5);
}
function vs(t3) {
  return t3.byteOffset % 4 === 0;
}
function ze2(t3) {
  return Uint8Array.from(t3);
}
function Lt2(...t3) {
  for (let e4 = 0; e4 < t3.length; e4++) t3[e4].fill(0);
}
var Nr2 = (t3) => Uint8Array.from(t3.split("").map((e4) => e4.charCodeAt(0)));
var xs = Nr2("expand 16-byte k");
var Ss = Nr2("expand 32-byte k");
var Os = mt(xs);
var As = mt(Ss);
function V2(t3, e4) {
  return t3 << e4 | t3 >>> 32 - e4;
}
function Ze2(t3) {
  return t3.byteOffset % 4 === 0;
}
var he2 = 64;
var Bs = 16;
var Ur2 = 2 ** 32 - 1;
var Tr2 = new Uint32Array();
function Is(t3, e4, n7, r5, o6, i6, s5, c8) {
  const a5 = o6.length, u4 = new Uint8Array(he2), l9 = mt(u4), f8 = Ze2(o6) && Ze2(i6), h7 = f8 ? mt(o6) : Tr2, y7 = f8 ? mt(i6) : Tr2;
  for (let E8 = 0; E8 < a5; s5++) {
    if (t3(e4, n7, r5, l9, s5, c8), s5 >= Ur2) throw new Error("arx: counter overflow");
    const p6 = Math.min(he2, a5 - E8);
    if (f8 && p6 === he2) {
      const d6 = E8 / 4;
      if (E8 % 4 !== 0) throw new Error("arx: invalid block position");
      for (let v8 = 0, m5; v8 < Bs; v8++) m5 = d6 + v8, y7[m5] = h7[m5] ^ l9[v8];
      E8 += he2;
      continue;
    }
    for (let d6 = 0, v8; d6 < p6; d6++) v8 = E8 + d6, i6[v8] = o6[v8] ^ u4[d6];
    E8 += p6;
  }
}
function Ns(t3, e4) {
  const { allowShortKeys: n7, extendNonceFn: r5, counterLength: o6, counterRight: i6, rounds: s5 } = ws({ allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 }, e4);
  if (typeof t3 != "function") throw new Error("core must be a function");
  return Ke2(o6), Ke2(s5), Ar2(i6), Ar2(n7), (c8, a5, u4, l9, f8 = 0) => {
    tt(c8), tt(a5), tt(u4);
    const h7 = u4.length;
    if (l9 === void 0 && (l9 = new Uint8Array(h7)), tt(l9), Ke2(f8), f8 < 0 || f8 >= Ur2) throw new Error("arx: counter overflow");
    if (l9.length < h7) throw new Error(`arx: output (${l9.length}) is shorter than data (${h7})`);
    const y7 = [];
    let E8 = c8.length, p6, d6;
    if (E8 === 32) y7.push(p6 = ze2(c8)), d6 = As;
    else if (E8 === 16 && n7) p6 = new Uint8Array(32), p6.set(c8), p6.set(c8, 16), d6 = Os, y7.push(p6);
    else throw new Error(`arx: invalid 32-byte key, got length=${E8}`);
    Ze2(a5) || y7.push(a5 = ze2(a5));
    const v8 = mt(p6);
    if (r5) {
      if (a5.length !== 24) throw new Error("arx: extended nonce must be 24 bytes");
      r5(d6, v8, mt(a5.subarray(0, 16)), v8), a5 = a5.subarray(16);
    }
    const m5 = 16 - o6;
    if (m5 !== a5.length) throw new Error(`arx: nonce must be ${m5} or 16 bytes`);
    if (m5 !== 12) {
      const N11 = new Uint8Array(12);
      N11.set(a5, i6 ? 0 : 12 - a5.length), a5 = N11, y7.push(a5);
    }
    const O6 = mt(a5);
    return Is(t3, d6, v8, O6, u4, l9, f8, s5), Lt2(...y7), l9;
  };
}
var F3 = (t3, e4) => t3[e4++] & 255 | (t3[e4++] & 255) << 8;
var Us = class {
  constructor(e4) {
    this.blockLen = 16, this.outputLen = 16, this.buffer = new Uint8Array(16), this.r = new Uint16Array(10), this.h = new Uint16Array(10), this.pad = new Uint16Array(8), this.pos = 0, this.finished = false, e4 = Fe(e4), tt(e4, 32);
    const n7 = F3(e4, 0), r5 = F3(e4, 2), o6 = F3(e4, 4), i6 = F3(e4, 6), s5 = F3(e4, 8), c8 = F3(e4, 10), a5 = F3(e4, 12), u4 = F3(e4, 14);
    this.r[0] = n7 & 8191, this.r[1] = (n7 >>> 13 | r5 << 3) & 8191, this.r[2] = (r5 >>> 10 | o6 << 6) & 7939, this.r[3] = (o6 >>> 7 | i6 << 9) & 8191, this.r[4] = (i6 >>> 4 | s5 << 12) & 255, this.r[5] = s5 >>> 1 & 8190, this.r[6] = (s5 >>> 14 | c8 << 2) & 8191, this.r[7] = (c8 >>> 11 | a5 << 5) & 8065, this.r[8] = (a5 >>> 8 | u4 << 8) & 8191, this.r[9] = u4 >>> 5 & 127;
    for (let l9 = 0; l9 < 8; l9++) this.pad[l9] = F3(e4, 16 + 2 * l9);
  }
  process(e4, n7, r5 = false) {
    const o6 = r5 ? 0 : 2048, { h: i6, r: s5 } = this, c8 = s5[0], a5 = s5[1], u4 = s5[2], l9 = s5[3], f8 = s5[4], h7 = s5[5], y7 = s5[6], E8 = s5[7], p6 = s5[8], d6 = s5[9], v8 = F3(e4, n7 + 0), m5 = F3(e4, n7 + 2), O6 = F3(e4, n7 + 4), N11 = F3(e4, n7 + 6), $5 = F3(e4, n7 + 8), B4 = F3(e4, n7 + 10), A6 = F3(e4, n7 + 12), T6 = F3(e4, n7 + 14);
    let S5 = i6[0] + (v8 & 8191), L5 = i6[1] + ((v8 >>> 13 | m5 << 3) & 8191), U3 = i6[2] + ((m5 >>> 10 | O6 << 6) & 8191), _6 = i6[3] + ((O6 >>> 7 | N11 << 9) & 8191), j5 = i6[4] + ((N11 >>> 4 | $5 << 12) & 8191), g5 = i6[5] + ($5 >>> 1 & 8191), w7 = i6[6] + (($5 >>> 14 | B4 << 2) & 8191), b6 = i6[7] + ((B4 >>> 11 | A6 << 5) & 8191), I5 = i6[8] + ((A6 >>> 8 | T6 << 8) & 8191), R4 = i6[9] + (T6 >>> 5 | o6), x6 = 0, C7 = x6 + S5 * c8 + L5 * (5 * d6) + U3 * (5 * p6) + _6 * (5 * E8) + j5 * (5 * y7);
    x6 = C7 >>> 13, C7 &= 8191, C7 += g5 * (5 * h7) + w7 * (5 * f8) + b6 * (5 * l9) + I5 * (5 * u4) + R4 * (5 * a5), x6 += C7 >>> 13, C7 &= 8191;
    let P6 = x6 + S5 * a5 + L5 * c8 + U3 * (5 * d6) + _6 * (5 * p6) + j5 * (5 * E8);
    x6 = P6 >>> 13, P6 &= 8191, P6 += g5 * (5 * y7) + w7 * (5 * h7) + b6 * (5 * f8) + I5 * (5 * l9) + R4 * (5 * u4), x6 += P6 >>> 13, P6 &= 8191;
    let k8 = x6 + S5 * u4 + L5 * a5 + U3 * c8 + _6 * (5 * d6) + j5 * (5 * p6);
    x6 = k8 >>> 13, k8 &= 8191, k8 += g5 * (5 * E8) + w7 * (5 * y7) + b6 * (5 * h7) + I5 * (5 * f8) + R4 * (5 * l9), x6 += k8 >>> 13, k8 &= 8191;
    let M6 = x6 + S5 * l9 + L5 * u4 + U3 * a5 + _6 * c8 + j5 * (5 * d6);
    x6 = M6 >>> 13, M6 &= 8191, M6 += g5 * (5 * p6) + w7 * (5 * E8) + b6 * (5 * y7) + I5 * (5 * h7) + R4 * (5 * f8), x6 += M6 >>> 13, M6 &= 8191;
    let D4 = x6 + S5 * f8 + L5 * l9 + U3 * u4 + _6 * a5 + j5 * c8;
    x6 = D4 >>> 13, D4 &= 8191, D4 += g5 * (5 * d6) + w7 * (5 * p6) + b6 * (5 * E8) + I5 * (5 * y7) + R4 * (5 * h7), x6 += D4 >>> 13, D4 &= 8191;
    let z6 = x6 + S5 * h7 + L5 * f8 + U3 * l9 + _6 * u4 + j5 * a5;
    x6 = z6 >>> 13, z6 &= 8191, z6 += g5 * c8 + w7 * (5 * d6) + b6 * (5 * p6) + I5 * (5 * E8) + R4 * (5 * y7), x6 += z6 >>> 13, z6 &= 8191;
    let Z3 = x6 + S5 * y7 + L5 * h7 + U3 * f8 + _6 * l9 + j5 * u4;
    x6 = Z3 >>> 13, Z3 &= 8191, Z3 += g5 * a5 + w7 * c8 + b6 * (5 * d6) + I5 * (5 * p6) + R4 * (5 * E8), x6 += Z3 >>> 13, Z3 &= 8191;
    let it3 = x6 + S5 * E8 + L5 * y7 + U3 * h7 + _6 * f8 + j5 * l9;
    x6 = it3 >>> 13, it3 &= 8191, it3 += g5 * u4 + w7 * a5 + b6 * c8 + I5 * (5 * d6) + R4 * (5 * p6), x6 += it3 >>> 13, it3 &= 8191;
    let W4 = x6 + S5 * p6 + L5 * E8 + U3 * y7 + _6 * h7 + j5 * f8;
    x6 = W4 >>> 13, W4 &= 8191, W4 += g5 * l9 + w7 * u4 + b6 * a5 + I5 * c8 + R4 * (5 * d6), x6 += W4 >>> 13, W4 &= 8191;
    let J5 = x6 + S5 * d6 + L5 * p6 + U3 * E8 + _6 * y7 + j5 * h7;
    x6 = J5 >>> 13, J5 &= 8191, J5 += g5 * f8 + w7 * l9 + b6 * u4 + I5 * a5 + R4 * c8, x6 += J5 >>> 13, J5 &= 8191, x6 = (x6 << 2) + x6 | 0, x6 = x6 + C7 | 0, C7 = x6 & 8191, x6 = x6 >>> 13, P6 += x6, i6[0] = C7, i6[1] = P6, i6[2] = k8, i6[3] = M6, i6[4] = D4, i6[5] = z6, i6[6] = Z3, i6[7] = it3, i6[8] = W4, i6[9] = J5;
  }
  finalize() {
    const { h: e4, pad: n7 } = this, r5 = new Uint16Array(10);
    let o6 = e4[1] >>> 13;
    e4[1] &= 8191;
    for (let c8 = 2; c8 < 10; c8++) e4[c8] += o6, o6 = e4[c8] >>> 13, e4[c8] &= 8191;
    e4[0] += o6 * 5, o6 = e4[0] >>> 13, e4[0] &= 8191, e4[1] += o6, o6 = e4[1] >>> 13, e4[1] &= 8191, e4[2] += o6, r5[0] = e4[0] + 5, o6 = r5[0] >>> 13, r5[0] &= 8191;
    for (let c8 = 1; c8 < 10; c8++) r5[c8] = e4[c8] + o6, o6 = r5[c8] >>> 13, r5[c8] &= 8191;
    r5[9] -= 8192;
    let i6 = (o6 ^ 1) - 1;
    for (let c8 = 0; c8 < 10; c8++) r5[c8] &= i6;
    i6 = ~i6;
    for (let c8 = 0; c8 < 10; c8++) e4[c8] = e4[c8] & i6 | r5[c8];
    e4[0] = (e4[0] | e4[1] << 13) & 65535, e4[1] = (e4[1] >>> 3 | e4[2] << 10) & 65535, e4[2] = (e4[2] >>> 6 | e4[3] << 7) & 65535, e4[3] = (e4[3] >>> 9 | e4[4] << 4) & 65535, e4[4] = (e4[4] >>> 12 | e4[5] << 1 | e4[6] << 14) & 65535, e4[5] = (e4[6] >>> 2 | e4[7] << 11) & 65535, e4[6] = (e4[7] >>> 5 | e4[8] << 8) & 65535, e4[7] = (e4[8] >>> 8 | e4[9] << 5) & 65535;
    let s5 = e4[0] + n7[0];
    e4[0] = s5 & 65535;
    for (let c8 = 1; c8 < 8; c8++) s5 = (e4[c8] + n7[c8] | 0) + (s5 >>> 16) | 0, e4[c8] = s5 & 65535;
    Lt2(r5);
  }
  update(e4) {
    Or2(this);
    const { buffer: n7, blockLen: r5 } = this;
    e4 = Fe(e4);
    const o6 = e4.length;
    for (let i6 = 0; i6 < o6; ) {
      const s5 = Math.min(r5 - this.pos, o6 - i6);
      if (s5 === r5) {
        for (; r5 <= o6 - i6; i6 += r5) this.process(e4, i6);
        continue;
      }
      n7.set(e4.subarray(i6, i6 + s5), this.pos), this.pos += s5, i6 += s5, this.pos === r5 && (this.process(n7, 0, false), this.pos = 0);
    }
    return this;
  }
  destroy() {
    Lt2(this.h, this.r, this.buffer, this.pad);
  }
  digestInto(e4) {
    Or2(this), ps(e4, this), this.finished = true;
    const { buffer: n7, h: r5 } = this;
    let { pos: o6 } = this;
    if (o6) {
      for (n7[o6++] = 1; o6 < 16; o6++) n7[o6] = 0;
      this.process(n7, 0, true);
    }
    this.finalize();
    let i6 = 0;
    for (let s5 = 0; s5 < 8; s5++) e4[i6++] = r5[s5] >>> 0, e4[i6++] = r5[s5] >>> 8;
    return e4;
  }
  digest() {
    const { buffer: e4, outputLen: n7 } = this;
    this.digestInto(e4);
    const r5 = e4.slice(0, n7);
    return this.destroy(), r5;
  }
};
function Ts(t3) {
  const e4 = (r5, o6) => t3(o6).update(Fe(r5)).digest(), n7 = t3(new Uint8Array(32));
  return e4.outputLen = n7.outputLen, e4.blockLen = n7.blockLen, e4.create = (r5) => t3(r5), e4;
}
var Rs = Ts((t3) => new Us(t3));
function _s(t3, e4, n7, r5, o6, i6 = 20) {
  let s5 = t3[0], c8 = t3[1], a5 = t3[2], u4 = t3[3], l9 = e4[0], f8 = e4[1], h7 = e4[2], y7 = e4[3], E8 = e4[4], p6 = e4[5], d6 = e4[6], v8 = e4[7], m5 = o6, O6 = n7[0], N11 = n7[1], $5 = n7[2], B4 = s5, A6 = c8, T6 = a5, S5 = u4, L5 = l9, U3 = f8, _6 = h7, j5 = y7, g5 = E8, w7 = p6, b6 = d6, I5 = v8, R4 = m5, x6 = O6, C7 = N11, P6 = $5;
  for (let M6 = 0; M6 < i6; M6 += 2) B4 = B4 + L5 | 0, R4 = V2(R4 ^ B4, 16), g5 = g5 + R4 | 0, L5 = V2(L5 ^ g5, 12), B4 = B4 + L5 | 0, R4 = V2(R4 ^ B4, 8), g5 = g5 + R4 | 0, L5 = V2(L5 ^ g5, 7), A6 = A6 + U3 | 0, x6 = V2(x6 ^ A6, 16), w7 = w7 + x6 | 0, U3 = V2(U3 ^ w7, 12), A6 = A6 + U3 | 0, x6 = V2(x6 ^ A6, 8), w7 = w7 + x6 | 0, U3 = V2(U3 ^ w7, 7), T6 = T6 + _6 | 0, C7 = V2(C7 ^ T6, 16), b6 = b6 + C7 | 0, _6 = V2(_6 ^ b6, 12), T6 = T6 + _6 | 0, C7 = V2(C7 ^ T6, 8), b6 = b6 + C7 | 0, _6 = V2(_6 ^ b6, 7), S5 = S5 + j5 | 0, P6 = V2(P6 ^ S5, 16), I5 = I5 + P6 | 0, j5 = V2(j5 ^ I5, 12), S5 = S5 + j5 | 0, P6 = V2(P6 ^ S5, 8), I5 = I5 + P6 | 0, j5 = V2(j5 ^ I5, 7), B4 = B4 + U3 | 0, P6 = V2(P6 ^ B4, 16), b6 = b6 + P6 | 0, U3 = V2(U3 ^ b6, 12), B4 = B4 + U3 | 0, P6 = V2(P6 ^ B4, 8), b6 = b6 + P6 | 0, U3 = V2(U3 ^ b6, 7), A6 = A6 + _6 | 0, R4 = V2(R4 ^ A6, 16), I5 = I5 + R4 | 0, _6 = V2(_6 ^ I5, 12), A6 = A6 + _6 | 0, R4 = V2(R4 ^ A6, 8), I5 = I5 + R4 | 0, _6 = V2(_6 ^ I5, 7), T6 = T6 + j5 | 0, x6 = V2(x6 ^ T6, 16), g5 = g5 + x6 | 0, j5 = V2(j5 ^ g5, 12), T6 = T6 + j5 | 0, x6 = V2(x6 ^ T6, 8), g5 = g5 + x6 | 0, j5 = V2(j5 ^ g5, 7), S5 = S5 + L5 | 0, C7 = V2(C7 ^ S5, 16), w7 = w7 + C7 | 0, L5 = V2(L5 ^ w7, 12), S5 = S5 + L5 | 0, C7 = V2(C7 ^ S5, 8), w7 = w7 + C7 | 0, L5 = V2(L5 ^ w7, 7);
  let k8 = 0;
  r5[k8++] = s5 + B4 | 0, r5[k8++] = c8 + A6 | 0, r5[k8++] = a5 + T6 | 0, r5[k8++] = u4 + S5 | 0, r5[k8++] = l9 + L5 | 0, r5[k8++] = f8 + U3 | 0, r5[k8++] = h7 + _6 | 0, r5[k8++] = y7 + j5 | 0, r5[k8++] = E8 + g5 | 0, r5[k8++] = p6 + w7 | 0, r5[k8++] = d6 + b6 | 0, r5[k8++] = v8 + I5 | 0, r5[k8++] = m5 + R4 | 0, r5[k8++] = O6 + x6 | 0, r5[k8++] = N11 + C7 | 0, r5[k8++] = $5 + P6 | 0;
}
var $s = Ns(_s, { counterRight: false, counterLength: 4, allowShortKeys: false });
var Ls = new Uint8Array(16);
var Rr2 = (t3, e4) => {
  t3.update(e4);
  const n7 = e4.length % 16;
  n7 && t3.update(Ls.subarray(n7));
};
var js = new Uint8Array(32);
function _r2(t3, e4, n7, r5, o6) {
  const i6 = t3(e4, n7, js), s5 = Rs.create(i6);
  o6 && Rr2(s5, o6), Rr2(s5, r5);
  const c8 = new Uint8Array(16), a5 = gs(c8);
  Ir2(a5, 0, BigInt(o6 ? o6.length : 0), true), Ir2(a5, 8, BigInt(r5.length), true), s5.update(c8);
  const u4 = s5.digest();
  return Lt2(i6, c8), u4;
}
var Cs = (t3) => (e4, n7, r5) => ({ encrypt(i6, s5) {
  const c8 = i6.length;
  s5 = Br2(c8 + 16, s5, false), s5.set(i6);
  const a5 = s5.subarray(0, -16);
  t3(e4, n7, a5, a5, 1);
  const u4 = _r2(t3, e4, n7, a5, r5);
  return s5.set(u4, c8), Lt2(u4), s5;
}, decrypt(i6, s5) {
  s5 = Br2(i6.length - 16, s5, false);
  const c8 = i6.subarray(0, -16), a5 = i6.subarray(-16), u4 = _r2(t3, e4, n7, c8, r5);
  if (!bs(a5, u4)) throw new Error("invalid tag");
  return s5.set(i6.subarray(0, -16)), t3(e4, n7, s5, s5, 1), Lt2(u4), s5;
} });
var $r2 = Es({ blockSize: 64, nonceLength: 12, tagLength: 16 }, Cs($s));
var Lr2 = class extends Pe2 {
  constructor(e4, n7) {
    super(), this.finished = false, this.destroyed = false, je2(e4);
    const r5 = _t2(n7);
    if (this.iHash = e4.create(), typeof this.iHash.update != "function") throw new Error("Expected instance of class which extends utils.Hash");
    this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
    const o6 = this.blockLen, i6 = new Uint8Array(o6);
    i6.set(r5.length > o6 ? e4.create().update(r5).digest() : r5);
    for (let s5 = 0; s5 < i6.length; s5++) i6[s5] ^= 54;
    this.iHash.update(i6), this.oHash = e4.create();
    for (let s5 = 0; s5 < i6.length; s5++) i6[s5] ^= 106;
    this.oHash.update(i6), i6.fill(0);
  }
  update(e4) {
    return Tt2(this), this.iHash.update(e4), this;
  }
  digestInto(e4) {
    Tt2(this), Wt2(e4, this.outputLen), this.finished = true, this.iHash.digestInto(e4), this.oHash.update(e4), this.oHash.digestInto(e4), this.destroy();
  }
  digest() {
    const e4 = new Uint8Array(this.oHash.outputLen);
    return this.digestInto(e4), e4;
  }
  _cloneInto(e4) {
    e4 || (e4 = Object.create(Object.getPrototypeOf(this), {}));
    const { oHash: n7, iHash: r5, finished: o6, destroyed: i6, blockLen: s5, outputLen: c8 } = this;
    return e4 = e4, e4.finished = o6, e4.destroyed = i6, e4.blockLen = s5, e4.outputLen = c8, e4.oHash = n7._cloneInto(e4.oHash), e4.iHash = r5._cloneInto(e4.iHash), e4;
  }
  destroy() {
    this.destroyed = true, this.oHash.destroy(), this.iHash.destroy();
  }
};
var pe2 = (t3, e4, n7) => new Lr2(t3, e4).update(n7).digest();
pe2.create = (t3, e4) => new Lr2(t3, e4);
function Ps(t3, e4, n7) {
  return je2(t3), n7 === void 0 && (n7 = new Uint8Array(t3.outputLen)), pe2(t3, _t2(n7), _t2(e4));
}
var Ye2 = new Uint8Array([0]);
var jr2 = new Uint8Array();
function ks(t3, e4, n7, r5 = 32) {
  if (je2(t3), Gt2(r5), r5 > 255 * t3.outputLen) throw new Error("Length should be <= 255*HashLen");
  const o6 = Math.ceil(r5 / t3.outputLen);
  n7 === void 0 && (n7 = jr2);
  const i6 = new Uint8Array(o6 * t3.outputLen), s5 = pe2.create(t3, e4), c8 = s5._cloneInto(), a5 = new Uint8Array(s5.outputLen);
  for (let u4 = 0; u4 < o6; u4++) Ye2[0] = u4 + 1, c8.update(u4 === 0 ? jr2 : a5).update(n7).update(Ye2).digestInto(a5), i6.set(a5, t3.outputLen * u4), s5._cloneInto(c8);
  return s5.destroy(), c8.destroy(), a5.fill(0), Ye2.fill(0), i6.slice(0, r5);
}
var Vs = (t3, e4, n7, r5, o6) => ks(t3, Ps(t3, e4, n7), r5, o6);
function Ms(t3, e4, n7, r5) {
  if (typeof t3.setBigUint64 == "function") return t3.setBigUint64(e4, n7, r5);
  const o6 = BigInt(32), i6 = BigInt(4294967295), s5 = Number(n7 >> o6 & i6), c8 = Number(n7 & i6), a5 = r5 ? 4 : 0, u4 = r5 ? 0 : 4;
  t3.setUint32(e4 + a5, s5, r5), t3.setUint32(e4 + u4, c8, r5);
}
function Ds(t3, e4, n7) {
  return t3 & e4 ^ ~t3 & n7;
}
function Hs(t3, e4, n7) {
  return t3 & e4 ^ t3 & n7 ^ e4 & n7;
}
var qs = class extends Pe2 {
  constructor(e4, n7, r5, o6) {
    super(), this.blockLen = e4, this.outputLen = n7, this.padOffset = r5, this.isLE = o6, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(e4), this.view = Ce2(this.buffer);
  }
  update(e4) {
    Tt2(this);
    const { view: n7, buffer: r5, blockLen: o6 } = this;
    e4 = _t2(e4);
    const i6 = e4.length;
    for (let s5 = 0; s5 < i6; ) {
      const c8 = Math.min(o6 - this.pos, i6 - s5);
      if (c8 === o6) {
        const a5 = Ce2(e4);
        for (; o6 <= i6 - s5; s5 += o6) this.process(a5, s5);
        continue;
      }
      r5.set(e4.subarray(s5, s5 + c8), this.pos), this.pos += c8, s5 += c8, this.pos === o6 && (this.process(n7, 0), this.pos = 0);
    }
    return this.length += e4.length, this.roundClean(), this;
  }
  digestInto(e4) {
    Tt2(this), Gn2(e4, this), this.finished = true;
    const { buffer: n7, view: r5, blockLen: o6, isLE: i6 } = this;
    let { pos: s5 } = this;
    n7[s5++] = 128, this.buffer.subarray(s5).fill(0), this.padOffset > o6 - s5 && (this.process(r5, 0), s5 = 0);
    for (let f8 = s5; f8 < o6; f8++) n7[f8] = 0;
    Ms(r5, o6 - 8, BigInt(this.length * 8), i6), this.process(r5, 0);
    const c8 = Ce2(e4), a5 = this.outputLen;
    if (a5 % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
    const u4 = a5 / 4, l9 = this.get();
    if (u4 > l9.length) throw new Error("_sha2: outputLen bigger than state");
    for (let f8 = 0; f8 < u4; f8++) c8.setUint32(4 * f8, l9[f8], i6);
  }
  digest() {
    const { buffer: e4, outputLen: n7 } = this;
    this.digestInto(e4);
    const r5 = e4.slice(0, n7);
    return this.destroy(), r5;
  }
  _cloneInto(e4) {
    e4 || (e4 = new this.constructor()), e4.set(...this.get());
    const { blockLen: n7, buffer: r5, length: o6, finished: i6, destroyed: s5, pos: c8 } = this;
    return e4.length = o6, e4.pos = c8, e4.finished = i6, e4.destroyed = s5, o6 % n7 && e4.buffer.set(r5), e4;
  }
};
var Ks = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);
var wt2 = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]);
var bt2 = new Uint32Array(64);
var Fs = class extends qs {
  constructor() {
    super(64, 32, 8, false), this.A = wt2[0] | 0, this.B = wt2[1] | 0, this.C = wt2[2] | 0, this.D = wt2[3] | 0, this.E = wt2[4] | 0, this.F = wt2[5] | 0, this.G = wt2[6] | 0, this.H = wt2[7] | 0;
  }
  get() {
    const { A: e4, B: n7, C: r5, D: o6, E: i6, F: s5, G: c8, H: a5 } = this;
    return [e4, n7, r5, o6, i6, s5, c8, a5];
  }
  set(e4, n7, r5, o6, i6, s5, c8, a5) {
    this.A = e4 | 0, this.B = n7 | 0, this.C = r5 | 0, this.D = o6 | 0, this.E = i6 | 0, this.F = s5 | 0, this.G = c8 | 0, this.H = a5 | 0;
  }
  process(e4, n7) {
    for (let f8 = 0; f8 < 16; f8++, n7 += 4) bt2[f8] = e4.getUint32(n7, false);
    for (let f8 = 16; f8 < 64; f8++) {
      const h7 = bt2[f8 - 15], y7 = bt2[f8 - 2], E8 = st(h7, 7) ^ st(h7, 18) ^ h7 >>> 3, p6 = st(y7, 17) ^ st(y7, 19) ^ y7 >>> 10;
      bt2[f8] = p6 + bt2[f8 - 7] + E8 + bt2[f8 - 16] | 0;
    }
    let { A: r5, B: o6, C: i6, D: s5, E: c8, F: a5, G: u4, H: l9 } = this;
    for (let f8 = 0; f8 < 64; f8++) {
      const h7 = st(c8, 6) ^ st(c8, 11) ^ st(c8, 25), y7 = l9 + h7 + Ds(c8, a5, u4) + Ks[f8] + bt2[f8] | 0, p6 = (st(r5, 2) ^ st(r5, 13) ^ st(r5, 22)) + Hs(r5, o6, i6) | 0;
      l9 = u4, u4 = a5, a5 = c8, c8 = s5 + y7 | 0, s5 = i6, i6 = o6, o6 = r5, r5 = y7 + p6 | 0;
    }
    r5 = r5 + this.A | 0, o6 = o6 + this.B | 0, i6 = i6 + this.C | 0, s5 = s5 + this.D | 0, c8 = c8 + this.E | 0, a5 = a5 + this.F | 0, u4 = u4 + this.G | 0, l9 = l9 + this.H | 0, this.set(r5, o6, i6, s5, c8, a5, u4, l9);
  }
  roundClean() {
    bt2.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
  }
};
var Jt2 = Qn2(() => new Fs());
var ge2 = BigInt(0);
var ye2 = BigInt(1);
var zs = BigInt(2);
function St2(t3) {
  return t3 instanceof Uint8Array || ArrayBuffer.isView(t3) && t3.constructor.name === "Uint8Array";
}
function Qt2(t3) {
  if (!St2(t3)) throw new Error("Uint8Array expected");
}
function jt2(t3, e4) {
  if (typeof e4 != "boolean") throw new Error(t3 + " boolean expected, got " + e4);
}
var Zs = Array.from({ length: 256 }, (t3, e4) => e4.toString(16).padStart(2, "0"));
function Ct(t3) {
  Qt2(t3);
  let e4 = "";
  for (let n7 = 0; n7 < t3.length; n7++) e4 += Zs[t3[n7]];
  return e4;
}
function Pt2(t3) {
  const e4 = t3.toString(16);
  return e4.length & 1 ? "0" + e4 : e4;
}
function Ge2(t3) {
  if (typeof t3 != "string") throw new Error("hex string expected, got " + typeof t3);
  return t3 === "" ? ge2 : BigInt("0x" + t3);
}
var ut2 = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function Cr2(t3) {
  if (t3 >= ut2._0 && t3 <= ut2._9) return t3 - ut2._0;
  if (t3 >= ut2.A && t3 <= ut2.F) return t3 - (ut2.A - 10);
  if (t3 >= ut2.a && t3 <= ut2.f) return t3 - (ut2.a - 10);
}
function kt2(t3) {
  if (typeof t3 != "string") throw new Error("hex string expected, got " + typeof t3);
  const e4 = t3.length, n7 = e4 / 2;
  if (e4 % 2) throw new Error("hex string expected, got unpadded hex of length " + e4);
  const r5 = new Uint8Array(n7);
  for (let o6 = 0, i6 = 0; o6 < n7; o6++, i6 += 2) {
    const s5 = Cr2(t3.charCodeAt(i6)), c8 = Cr2(t3.charCodeAt(i6 + 1));
    if (s5 === void 0 || c8 === void 0) {
      const a5 = t3[i6] + t3[i6 + 1];
      throw new Error('hex string expected, got non-hex character "' + a5 + '" at index ' + i6);
    }
    r5[o6] = s5 * 16 + c8;
  }
  return r5;
}
function Ot2(t3) {
  return Ge2(Ct(t3));
}
function te2(t3) {
  return Qt2(t3), Ge2(Ct(Uint8Array.from(t3).reverse()));
}
function Vt2(t3, e4) {
  return kt2(t3.toString(16).padStart(e4 * 2, "0"));
}
function me2(t3, e4) {
  return Vt2(t3, e4).reverse();
}
function Ys(t3) {
  return kt2(Pt2(t3));
}
function et(t3, e4, n7) {
  let r5;
  if (typeof e4 == "string") try {
    r5 = kt2(e4);
  } catch (i6) {
    throw new Error(t3 + " must be hex string or Uint8Array, cause: " + i6);
  }
  else if (St2(e4)) r5 = Uint8Array.from(e4);
  else throw new Error(t3 + " must be hex string or Uint8Array");
  const o6 = r5.length;
  if (typeof n7 == "number" && o6 !== n7) throw new Error(t3 + " of length " + n7 + " expected, got " + o6);
  return r5;
}
function ee(...t3) {
  let e4 = 0;
  for (let r5 = 0; r5 < t3.length; r5++) {
    const o6 = t3[r5];
    Qt2(o6), e4 += o6.length;
  }
  const n7 = new Uint8Array(e4);
  for (let r5 = 0, o6 = 0; r5 < t3.length; r5++) {
    const i6 = t3[r5];
    n7.set(i6, o6), o6 += i6.length;
  }
  return n7;
}
function Gs(t3, e4) {
  if (t3.length !== e4.length) return false;
  let n7 = 0;
  for (let r5 = 0; r5 < t3.length; r5++) n7 |= t3[r5] ^ e4[r5];
  return n7 === 0;
}
function Ws(t3) {
  if (typeof t3 != "string") throw new Error("string expected");
  return new Uint8Array(new TextEncoder().encode(t3));
}
var We2 = (t3) => typeof t3 == "bigint" && ge2 <= t3;
function we2(t3, e4, n7) {
  return We2(t3) && We2(e4) && We2(n7) && e4 <= t3 && t3 < n7;
}
function ft2(t3, e4, n7, r5) {
  if (!we2(e4, n7, r5)) throw new Error("expected valid " + t3 + ": " + n7 + " <= n < " + r5 + ", got " + e4);
}
function Pr2(t3) {
  let e4;
  for (e4 = 0; t3 > ge2; t3 >>= ye2, e4 += 1) ;
  return e4;
}
function Xs(t3, e4) {
  return t3 >> BigInt(e4) & ye2;
}
function Js(t3, e4, n7) {
  return t3 | (n7 ? ye2 : ge2) << BigInt(e4);
}
var Xe2 = (t3) => (zs << BigInt(t3 - 1)) - ye2;
var Je2 = (t3) => new Uint8Array(t3);
var kr2 = (t3) => Uint8Array.from(t3);
function Vr2(t3, e4, n7) {
  if (typeof t3 != "number" || t3 < 2) throw new Error("hashLen must be a number");
  if (typeof e4 != "number" || e4 < 2) throw new Error("qByteLen must be a number");
  if (typeof n7 != "function") throw new Error("hmacFn must be a function");
  let r5 = Je2(t3), o6 = Je2(t3), i6 = 0;
  const s5 = () => {
    r5.fill(1), o6.fill(0), i6 = 0;
  }, c8 = (...f8) => n7(o6, r5, ...f8), a5 = (f8 = Je2()) => {
    o6 = c8(kr2([0]), f8), r5 = c8(), f8.length !== 0 && (o6 = c8(kr2([1]), f8), r5 = c8());
  }, u4 = () => {
    if (i6++ >= 1e3) throw new Error("drbg: tried 1000 values");
    let f8 = 0;
    const h7 = [];
    for (; f8 < e4; ) {
      r5 = c8();
      const y7 = r5.slice();
      h7.push(y7), f8 += r5.length;
    }
    return ee(...h7);
  };
  return (f8, h7) => {
    s5(), a5(f8);
    let y7;
    for (; !(y7 = h7(u4())); ) a5();
    return s5(), y7;
  };
}
var Qs = { bigint: (t3) => typeof t3 == "bigint", function: (t3) => typeof t3 == "function", boolean: (t3) => typeof t3 == "boolean", string: (t3) => typeof t3 == "string", stringOrUint8Array: (t3) => typeof t3 == "string" || St2(t3), isSafeInteger: (t3) => Number.isSafeInteger(t3), array: (t3) => Array.isArray(t3), field: (t3, e4) => e4.Fp.isValid(t3), hash: (t3) => typeof t3 == "function" && Number.isSafeInteger(t3.outputLen) };
function Mt2(t3, e4, n7 = {}) {
  const r5 = (o6, i6, s5) => {
    const c8 = Qs[i6];
    if (typeof c8 != "function") throw new Error("invalid validator function");
    const a5 = t3[o6];
    if (!(s5 && a5 === void 0) && !c8(a5, t3)) throw new Error("param " + String(o6) + " is invalid. Expected " + i6 + ", got " + a5);
  };
  for (const [o6, i6] of Object.entries(e4)) r5(o6, i6, false);
  for (const [o6, i6] of Object.entries(n7)) r5(o6, i6, true);
  return t3;
}
var tc = () => {
  throw new Error("not implemented");
};
function Qe2(t3) {
  const e4 = /* @__PURE__ */ new WeakMap();
  return (n7, ...r5) => {
    const o6 = e4.get(n7);
    if (o6 !== void 0) return o6;
    const i6 = t3(n7, ...r5);
    return e4.set(n7, i6), i6;
  };
}
var ec = Object.freeze({ __proto__: null, isBytes: St2, abytes: Qt2, abool: jt2, bytesToHex: Ct, numberToHexUnpadded: Pt2, hexToNumber: Ge2, hexToBytes: kt2, bytesToNumberBE: Ot2, bytesToNumberLE: te2, numberToBytesBE: Vt2, numberToBytesLE: me2, numberToVarBytesBE: Ys, ensureBytes: et, concatBytes: ee, equalBytes: Gs, utf8ToBytes: Ws, inRange: we2, aInRange: ft2, bitLen: Pr2, bitGet: Xs, bitSet: Js, bitMask: Xe2, createHmacDrbg: Vr2, validateObject: Mt2, notImplemented: tc, memoized: Qe2 });
var q3 = BigInt(0);
var H4 = BigInt(1);
var At = BigInt(2);
var nc = BigInt(3);
var tn = BigInt(4);
var Mr2 = BigInt(5);
var Dr2 = BigInt(8);
function X2(t3, e4) {
  const n7 = t3 % e4;
  return n7 >= q3 ? n7 : e4 + n7;
}
function Hr2(t3, e4, n7) {
  if (e4 < q3) throw new Error("invalid exponent, negatives unsupported");
  if (n7 <= q3) throw new Error("invalid modulus");
  if (n7 === H4) return q3;
  let r5 = H4;
  for (; e4 > q3; ) e4 & H4 && (r5 = r5 * t3 % n7), t3 = t3 * t3 % n7, e4 >>= H4;
  return r5;
}
function ot(t3, e4, n7) {
  let r5 = t3;
  for (; e4-- > q3; ) r5 *= r5, r5 %= n7;
  return r5;
}
function en2(t3, e4) {
  if (t3 === q3) throw new Error("invert: expected non-zero number");
  if (e4 <= q3) throw new Error("invert: expected positive modulus, got " + e4);
  let n7 = X2(t3, e4), r5 = e4, o6 = q3, i6 = H4;
  for (; n7 !== q3; ) {
    const c8 = r5 / n7, a5 = r5 % n7, u4 = o6 - i6 * c8;
    r5 = n7, n7 = a5, o6 = i6, i6 = u4;
  }
  if (r5 !== H4) throw new Error("invert: does not exist");
  return X2(o6, e4);
}
function rc(t3) {
  const e4 = (t3 - H4) / At;
  let n7, r5, o6;
  for (n7 = t3 - H4, r5 = 0; n7 % At === q3; n7 /= At, r5++) ;
  for (o6 = At; o6 < t3 && Hr2(o6, e4, t3) !== t3 - H4; o6++) if (o6 > 1e3) throw new Error("Cannot find square root: likely non-prime P");
  if (r5 === 1) {
    const s5 = (t3 + H4) / tn;
    return function(a5, u4) {
      const l9 = a5.pow(u4, s5);
      if (!a5.eql(a5.sqr(l9), u4)) throw new Error("Cannot find square root");
      return l9;
    };
  }
  const i6 = (n7 + H4) / At;
  return function(c8, a5) {
    if (c8.pow(a5, e4) === c8.neg(c8.ONE)) throw new Error("Cannot find square root");
    let u4 = r5, l9 = c8.pow(c8.mul(c8.ONE, o6), n7), f8 = c8.pow(a5, i6), h7 = c8.pow(a5, n7);
    for (; !c8.eql(h7, c8.ONE); ) {
      if (c8.eql(h7, c8.ZERO)) return c8.ZERO;
      let y7 = 1;
      for (let p6 = c8.sqr(h7); y7 < u4 && !c8.eql(p6, c8.ONE); y7++) p6 = c8.sqr(p6);
      const E8 = c8.pow(l9, H4 << BigInt(u4 - y7 - 1));
      l9 = c8.sqr(E8), f8 = c8.mul(f8, E8), h7 = c8.mul(h7, l9), u4 = y7;
    }
    return f8;
  };
}
function oc(t3) {
  if (t3 % tn === nc) {
    const e4 = (t3 + H4) / tn;
    return function(r5, o6) {
      const i6 = r5.pow(o6, e4);
      if (!r5.eql(r5.sqr(i6), o6)) throw new Error("Cannot find square root");
      return i6;
    };
  }
  if (t3 % Dr2 === Mr2) {
    const e4 = (t3 - Mr2) / Dr2;
    return function(r5, o6) {
      const i6 = r5.mul(o6, At), s5 = r5.pow(i6, e4), c8 = r5.mul(o6, s5), a5 = r5.mul(r5.mul(c8, At), s5), u4 = r5.mul(c8, r5.sub(a5, r5.ONE));
      if (!r5.eql(r5.sqr(u4), o6)) throw new Error("Cannot find square root");
      return u4;
    };
  }
  return rc(t3);
}
var ic = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
function sc(t3) {
  const e4 = { ORDER: "bigint", MASK: "bigint", BYTES: "isSafeInteger", BITS: "isSafeInteger" }, n7 = ic.reduce((r5, o6) => (r5[o6] = "function", r5), e4);
  return Mt2(t3, n7);
}
function cc(t3, e4, n7) {
  if (n7 < q3) throw new Error("invalid exponent, negatives unsupported");
  if (n7 === q3) return t3.ONE;
  if (n7 === H4) return e4;
  let r5 = t3.ONE, o6 = e4;
  for (; n7 > q3; ) n7 & H4 && (r5 = t3.mul(r5, o6)), o6 = t3.sqr(o6), n7 >>= H4;
  return r5;
}
function ac(t3, e4) {
  const n7 = new Array(e4.length), r5 = e4.reduce((i6, s5, c8) => t3.is0(s5) ? i6 : (n7[c8] = i6, t3.mul(i6, s5)), t3.ONE), o6 = t3.inv(r5);
  return e4.reduceRight((i6, s5, c8) => t3.is0(s5) ? i6 : (n7[c8] = t3.mul(i6, n7[c8]), t3.mul(i6, s5)), o6), n7;
}
function qr2(t3, e4) {
  const n7 = e4 !== void 0 ? e4 : t3.toString(2).length, r5 = Math.ceil(n7 / 8);
  return { nBitLength: n7, nByteLength: r5 };
}
function Kr3(t3, e4, n7 = false, r5 = {}) {
  if (t3 <= q3) throw new Error("invalid field: expected ORDER > 0, got " + t3);
  const { nBitLength: o6, nByteLength: i6 } = qr2(t3, e4);
  if (i6 > 2048) throw new Error("invalid field: expected ORDER of <= 2048 bytes");
  let s5;
  const c8 = Object.freeze({ ORDER: t3, isLE: n7, BITS: o6, BYTES: i6, MASK: Xe2(o6), ZERO: q3, ONE: H4, create: (a5) => X2(a5, t3), isValid: (a5) => {
    if (typeof a5 != "bigint") throw new Error("invalid field element: expected bigint, got " + typeof a5);
    return q3 <= a5 && a5 < t3;
  }, is0: (a5) => a5 === q3, isOdd: (a5) => (a5 & H4) === H4, neg: (a5) => X2(-a5, t3), eql: (a5, u4) => a5 === u4, sqr: (a5) => X2(a5 * a5, t3), add: (a5, u4) => X2(a5 + u4, t3), sub: (a5, u4) => X2(a5 - u4, t3), mul: (a5, u4) => X2(a5 * u4, t3), pow: (a5, u4) => cc(c8, a5, u4), div: (a5, u4) => X2(a5 * en2(u4, t3), t3), sqrN: (a5) => a5 * a5, addN: (a5, u4) => a5 + u4, subN: (a5, u4) => a5 - u4, mulN: (a5, u4) => a5 * u4, inv: (a5) => en2(a5, t3), sqrt: r5.sqrt || ((a5) => (s5 || (s5 = oc(t3)), s5(c8, a5))), invertBatch: (a5) => ac(c8, a5), cmov: (a5, u4, l9) => l9 ? u4 : a5, toBytes: (a5) => n7 ? me2(a5, i6) : Vt2(a5, i6), fromBytes: (a5) => {
    if (a5.length !== i6) throw new Error("Field.fromBytes: expected " + i6 + " bytes, got " + a5.length);
    return n7 ? te2(a5) : Ot2(a5);
  } });
  return Object.freeze(c8);
}
function Fr2(t3) {
  if (typeof t3 != "bigint") throw new Error("field order must be bigint");
  const e4 = t3.toString(2).length;
  return Math.ceil(e4 / 8);
}
function zr2(t3) {
  const e4 = Fr2(t3);
  return e4 + Math.ceil(e4 / 2);
}
function uc(t3, e4, n7 = false) {
  const r5 = t3.length, o6 = Fr2(e4), i6 = zr2(e4);
  if (r5 < 16 || r5 < i6 || r5 > 1024) throw new Error("expected " + i6 + "-1024 bytes of input, got " + r5);
  const s5 = n7 ? te2(t3) : Ot2(t3), c8 = X2(s5, e4 - H4) + H4;
  return n7 ? me2(c8, o6) : Vt2(c8, o6);
}
var Zr2 = BigInt(0);
var be2 = BigInt(1);
function nn2(t3, e4) {
  const n7 = e4.negate();
  return t3 ? n7 : e4;
}
function Yr2(t3, e4) {
  if (!Number.isSafeInteger(t3) || t3 <= 0 || t3 > e4) throw new Error("invalid window size, expected [1.." + e4 + "], got W=" + t3);
}
function rn2(t3, e4) {
  Yr2(t3, e4);
  const n7 = Math.ceil(e4 / t3) + 1, r5 = 2 ** (t3 - 1);
  return { windows: n7, windowSize: r5 };
}
function fc(t3, e4) {
  if (!Array.isArray(t3)) throw new Error("array expected");
  t3.forEach((n7, r5) => {
    if (!(n7 instanceof e4)) throw new Error("invalid point at index " + r5);
  });
}
function lc(t3, e4) {
  if (!Array.isArray(t3)) throw new Error("array of scalars expected");
  t3.forEach((n7, r5) => {
    if (!e4.isValid(n7)) throw new Error("invalid scalar at index " + r5);
  });
}
var on2 = /* @__PURE__ */ new WeakMap();
var Gr2 = /* @__PURE__ */ new WeakMap();
function sn2(t3) {
  return Gr2.get(t3) || 1;
}
function dc(t3, e4) {
  return { constTimeNegate: nn2, hasPrecomputes(n7) {
    return sn2(n7) !== 1;
  }, unsafeLadder(n7, r5, o6 = t3.ZERO) {
    let i6 = n7;
    for (; r5 > Zr2; ) r5 & be2 && (o6 = o6.add(i6)), i6 = i6.double(), r5 >>= be2;
    return o6;
  }, precomputeWindow(n7, r5) {
    const { windows: o6, windowSize: i6 } = rn2(r5, e4), s5 = [];
    let c8 = n7, a5 = c8;
    for (let u4 = 0; u4 < o6; u4++) {
      a5 = c8, s5.push(a5);
      for (let l9 = 1; l9 < i6; l9++) a5 = a5.add(c8), s5.push(a5);
      c8 = a5.double();
    }
    return s5;
  }, wNAF(n7, r5, o6) {
    const { windows: i6, windowSize: s5 } = rn2(n7, e4);
    let c8 = t3.ZERO, a5 = t3.BASE;
    const u4 = BigInt(2 ** n7 - 1), l9 = 2 ** n7, f8 = BigInt(n7);
    for (let h7 = 0; h7 < i6; h7++) {
      const y7 = h7 * s5;
      let E8 = Number(o6 & u4);
      o6 >>= f8, E8 > s5 && (E8 -= l9, o6 += be2);
      const p6 = y7, d6 = y7 + Math.abs(E8) - 1, v8 = h7 % 2 !== 0, m5 = E8 < 0;
      E8 === 0 ? a5 = a5.add(nn2(v8, r5[p6])) : c8 = c8.add(nn2(m5, r5[d6]));
    }
    return { p: c8, f: a5 };
  }, wNAFUnsafe(n7, r5, o6, i6 = t3.ZERO) {
    const { windows: s5, windowSize: c8 } = rn2(n7, e4), a5 = BigInt(2 ** n7 - 1), u4 = 2 ** n7, l9 = BigInt(n7);
    for (let f8 = 0; f8 < s5; f8++) {
      const h7 = f8 * c8;
      if (o6 === Zr2) break;
      let y7 = Number(o6 & a5);
      if (o6 >>= l9, y7 > c8 && (y7 -= u4, o6 += be2), y7 === 0) continue;
      let E8 = r5[h7 + Math.abs(y7) - 1];
      y7 < 0 && (E8 = E8.negate()), i6 = i6.add(E8);
    }
    return i6;
  }, getPrecomputes(n7, r5, o6) {
    let i6 = on2.get(r5);
    return i6 || (i6 = this.precomputeWindow(r5, n7), n7 !== 1 && on2.set(r5, o6(i6))), i6;
  }, wNAFCached(n7, r5, o6) {
    const i6 = sn2(n7);
    return this.wNAF(i6, this.getPrecomputes(i6, n7, o6), r5);
  }, wNAFCachedUnsafe(n7, r5, o6, i6) {
    const s5 = sn2(n7);
    return s5 === 1 ? this.unsafeLadder(n7, r5, i6) : this.wNAFUnsafe(s5, this.getPrecomputes(s5, n7, o6), r5, i6);
  }, setWindowSize(n7, r5) {
    Yr2(r5, e4), Gr2.set(n7, r5), on2.delete(n7);
  } };
}
function hc(t3, e4, n7, r5) {
  if (fc(n7, t3), lc(r5, e4), n7.length !== r5.length) throw new Error("arrays of points and scalars must have equal length");
  const o6 = t3.ZERO, i6 = Pr2(BigInt(n7.length)), s5 = i6 > 12 ? i6 - 3 : i6 > 4 ? i6 - 2 : i6 ? 2 : 1, c8 = (1 << s5) - 1, a5 = new Array(c8 + 1).fill(o6), u4 = Math.floor((e4.BITS - 1) / s5) * s5;
  let l9 = o6;
  for (let f8 = u4; f8 >= 0; f8 -= s5) {
    a5.fill(o6);
    for (let y7 = 0; y7 < r5.length; y7++) {
      const E8 = r5[y7], p6 = Number(E8 >> BigInt(f8) & BigInt(c8));
      a5[p6] = a5[p6].add(n7[y7]);
    }
    let h7 = o6;
    for (let y7 = a5.length - 1, E8 = o6; y7 > 0; y7--) E8 = E8.add(a5[y7]), h7 = h7.add(E8);
    if (l9 = l9.add(h7), f8 !== 0) for (let y7 = 0; y7 < s5; y7++) l9 = l9.double();
  }
  return l9;
}
function Wr2(t3) {
  return sc(t3.Fp), Mt2(t3, { n: "bigint", h: "bigint", Gx: "field", Gy: "field" }, { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }), Object.freeze({ ...qr2(t3.n, t3.nBitLength), ...t3, p: t3.Fp.ORDER });
}
BigInt(0), BigInt(1), BigInt(2), BigInt(8);
var Dt2 = BigInt(0);
var cn = BigInt(1);
function pc(t3) {
  return Mt2(t3, { a: "bigint" }, { montgomeryBits: "isSafeInteger", nByteLength: "isSafeInteger", adjustScalarBytes: "function", domain: "function", powPminus2: "function", Gu: "bigint" }), Object.freeze({ ...t3 });
}
function gc(t3) {
  const e4 = pc(t3), { P: n7 } = e4, r5 = (m5) => X2(m5, n7), o6 = e4.montgomeryBits, i6 = Math.ceil(o6 / 8), s5 = e4.nByteLength, c8 = e4.adjustScalarBytes || ((m5) => m5), a5 = e4.powPminus2 || ((m5) => Hr2(m5, n7 - BigInt(2), n7));
  function u4(m5, O6, N11) {
    const $5 = r5(m5 * (O6 - N11));
    return O6 = r5(O6 - $5), N11 = r5(N11 + $5), [O6, N11];
  }
  const l9 = (e4.a - BigInt(2)) / BigInt(4);
  function f8(m5, O6) {
    ft2("u", m5, Dt2, n7), ft2("scalar", O6, Dt2, n7);
    const N11 = O6, $5 = m5;
    let B4 = cn, A6 = Dt2, T6 = m5, S5 = cn, L5 = Dt2, U3;
    for (let j5 = BigInt(o6 - 1); j5 >= Dt2; j5--) {
      const g5 = N11 >> j5 & cn;
      L5 ^= g5, U3 = u4(L5, B4, T6), B4 = U3[0], T6 = U3[1], U3 = u4(L5, A6, S5), A6 = U3[0], S5 = U3[1], L5 = g5;
      const w7 = B4 + A6, b6 = r5(w7 * w7), I5 = B4 - A6, R4 = r5(I5 * I5), x6 = b6 - R4, C7 = T6 + S5, P6 = T6 - S5, k8 = r5(P6 * w7), M6 = r5(C7 * I5), D4 = k8 + M6, z6 = k8 - M6;
      T6 = r5(D4 * D4), S5 = r5($5 * r5(z6 * z6)), B4 = r5(b6 * R4), A6 = r5(x6 * (b6 + r5(l9 * x6)));
    }
    U3 = u4(L5, B4, T6), B4 = U3[0], T6 = U3[1], U3 = u4(L5, A6, S5), A6 = U3[0], S5 = U3[1];
    const _6 = a5(A6);
    return r5(B4 * _6);
  }
  function h7(m5) {
    return me2(r5(m5), i6);
  }
  function y7(m5) {
    const O6 = et("u coordinate", m5, i6);
    return s5 === 32 && (O6[31] &= 127), te2(O6);
  }
  function E8(m5) {
    const O6 = et("scalar", m5), N11 = O6.length;
    if (N11 !== i6 && N11 !== s5) {
      let $5 = "" + i6 + " or " + s5;
      throw new Error("invalid scalar, expected " + $5 + " bytes, got " + N11);
    }
    return te2(c8(O6));
  }
  function p6(m5, O6) {
    const N11 = y7(O6), $5 = E8(m5), B4 = f8(N11, $5);
    if (B4 === Dt2) throw new Error("invalid private or public key received");
    return h7(B4);
  }
  const d6 = h7(e4.Gu);
  function v8(m5) {
    return p6(m5, d6);
  }
  return { scalarMult: p6, scalarMultBase: v8, getSharedSecret: (m5, O6) => p6(m5, O6), getPublicKey: (m5) => v8(m5), utils: { randomPrivateKey: () => e4.randomBytes(e4.nByteLength) }, GuBytes: d6 };
}
var an = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949");
BigInt(0);
var yc = BigInt(1);
var Xr2 = BigInt(2);
var mc = BigInt(3);
var wc = BigInt(5);
BigInt(8);
function bc(t3) {
  const e4 = BigInt(10), n7 = BigInt(20), r5 = BigInt(40), o6 = BigInt(80), i6 = an, c8 = t3 * t3 % i6 * t3 % i6, a5 = ot(c8, Xr2, i6) * c8 % i6, u4 = ot(a5, yc, i6) * t3 % i6, l9 = ot(u4, wc, i6) * u4 % i6, f8 = ot(l9, e4, i6) * l9 % i6, h7 = ot(f8, n7, i6) * f8 % i6, y7 = ot(h7, r5, i6) * h7 % i6, E8 = ot(y7, o6, i6) * y7 % i6, p6 = ot(E8, o6, i6) * y7 % i6, d6 = ot(p6, e4, i6) * l9 % i6;
  return { pow_p_5_8: ot(d6, Xr2, i6) * t3 % i6, b2: c8 };
}
function Ec(t3) {
  return t3[0] &= 248, t3[31] &= 127, t3[31] |= 64, t3;
}
var un = gc({ P: an, a: BigInt(486662), montgomeryBits: 255, nByteLength: 32, Gu: BigInt(9), powPminus2: (t3) => {
  const e4 = an, { pow_p_5_8: n7, b2: r5 } = bc(t3);
  return X2(ot(n7, mc, e4) * r5, e4);
}, adjustScalarBytes: Ec, randomBytes: $t2 });
function Jr2(t3) {
  t3.lowS !== void 0 && jt2("lowS", t3.lowS), t3.prehash !== void 0 && jt2("prehash", t3.prehash);
}
function vc(t3) {
  const e4 = Wr2(t3);
  Mt2(e4, { a: "field", b: "field" }, { allowedPrivateKeyLengths: "array", wrapPrivateKey: "boolean", isTorsionFree: "function", clearCofactor: "function", allowInfinityPoint: "boolean", fromBytes: "function", toBytes: "function" });
  const { endo: n7, Fp: r5, a: o6 } = e4;
  if (n7) {
    if (!r5.eql(o6, r5.ZERO)) throw new Error("invalid endomorphism, can only be defined for Koblitz curves that have a=0");
    if (typeof n7 != "object" || typeof n7.beta != "bigint" || typeof n7.splitScalar != "function") throw new Error("invalid endomorphism, expected beta: bigint and splitScalar: function");
  }
  return Object.freeze({ ...e4 });
}
var { bytesToNumberBE: xc, hexToBytes: Sc } = ec;
var Oc = class extends Error {
  constructor(e4 = "") {
    super(e4);
  }
};
var lt2 = { Err: Oc, _tlv: { encode: (t3, e4) => {
  const { Err: n7 } = lt2;
  if (t3 < 0 || t3 > 256) throw new n7("tlv.encode: wrong tag");
  if (e4.length & 1) throw new n7("tlv.encode: unpadded data");
  const r5 = e4.length / 2, o6 = Pt2(r5);
  if (o6.length / 2 & 128) throw new n7("tlv.encode: long form length too big");
  const i6 = r5 > 127 ? Pt2(o6.length / 2 | 128) : "";
  return Pt2(t3) + i6 + o6 + e4;
}, decode(t3, e4) {
  const { Err: n7 } = lt2;
  let r5 = 0;
  if (t3 < 0 || t3 > 256) throw new n7("tlv.encode: wrong tag");
  if (e4.length < 2 || e4[r5++] !== t3) throw new n7("tlv.decode: wrong tlv");
  const o6 = e4[r5++], i6 = !!(o6 & 128);
  let s5 = 0;
  if (!i6) s5 = o6;
  else {
    const a5 = o6 & 127;
    if (!a5) throw new n7("tlv.decode(long): indefinite length not supported");
    if (a5 > 4) throw new n7("tlv.decode(long): byte length is too big");
    const u4 = e4.subarray(r5, r5 + a5);
    if (u4.length !== a5) throw new n7("tlv.decode: length bytes not complete");
    if (u4[0] === 0) throw new n7("tlv.decode(long): zero leftmost byte");
    for (const l9 of u4) s5 = s5 << 8 | l9;
    if (r5 += a5, s5 < 128) throw new n7("tlv.decode(long): not minimal encoding");
  }
  const c8 = e4.subarray(r5, r5 + s5);
  if (c8.length !== s5) throw new n7("tlv.decode: wrong value length");
  return { v: c8, l: e4.subarray(r5 + s5) };
} }, _int: { encode(t3) {
  const { Err: e4 } = lt2;
  if (t3 < dt2) throw new e4("integer: negative integers are not allowed");
  let n7 = Pt2(t3);
  if (Number.parseInt(n7[0], 16) & 8 && (n7 = "00" + n7), n7.length & 1) throw new e4("unexpected DER parsing assertion: unpadded hex");
  return n7;
}, decode(t3) {
  const { Err: e4 } = lt2;
  if (t3[0] & 128) throw new e4("invalid signature integer: negative");
  if (t3[0] === 0 && !(t3[1] & 128)) throw new e4("invalid signature integer: unnecessary leading zero");
  return xc(t3);
} }, toSig(t3) {
  const { Err: e4, _int: n7, _tlv: r5 } = lt2, o6 = typeof t3 == "string" ? Sc(t3) : t3;
  Qt2(o6);
  const { v: i6, l: s5 } = r5.decode(48, o6);
  if (s5.length) throw new e4("invalid signature: left bytes after parsing");
  const { v: c8, l: a5 } = r5.decode(2, i6), { v: u4, l: l9 } = r5.decode(2, a5);
  if (l9.length) throw new e4("invalid signature: left bytes after parsing");
  return { r: n7.decode(c8), s: n7.decode(u4) };
}, hexFromSig(t3) {
  const { _tlv: e4, _int: n7 } = lt2, r5 = e4.encode(2, n7.encode(t3.r)), o6 = e4.encode(2, n7.encode(t3.s)), i6 = r5 + o6;
  return e4.encode(48, i6);
} };
var dt2 = BigInt(0);
var K4 = BigInt(1);
BigInt(2);
var Qr2 = BigInt(3);
BigInt(4);
function Ac(t3) {
  const e4 = vc(t3), { Fp: n7 } = e4, r5 = Kr3(e4.n, e4.nBitLength), o6 = e4.toBytes || ((p6, d6, v8) => {
    const m5 = d6.toAffine();
    return ee(Uint8Array.from([4]), n7.toBytes(m5.x), n7.toBytes(m5.y));
  }), i6 = e4.fromBytes || ((p6) => {
    const d6 = p6.subarray(1), v8 = n7.fromBytes(d6.subarray(0, n7.BYTES)), m5 = n7.fromBytes(d6.subarray(n7.BYTES, 2 * n7.BYTES));
    return { x: v8, y: m5 };
  });
  function s5(p6) {
    const { a: d6, b: v8 } = e4, m5 = n7.sqr(p6), O6 = n7.mul(m5, p6);
    return n7.add(n7.add(O6, n7.mul(p6, d6)), v8);
  }
  if (!n7.eql(n7.sqr(e4.Gy), s5(e4.Gx))) throw new Error("bad generator point: equation left != right");
  function c8(p6) {
    return we2(p6, K4, e4.n);
  }
  function a5(p6) {
    const { allowedPrivateKeyLengths: d6, nByteLength: v8, wrapPrivateKey: m5, n: O6 } = e4;
    if (d6 && typeof p6 != "bigint") {
      if (St2(p6) && (p6 = Ct(p6)), typeof p6 != "string" || !d6.includes(p6.length)) throw new Error("invalid private key");
      p6 = p6.padStart(v8 * 2, "0");
    }
    let N11;
    try {
      N11 = typeof p6 == "bigint" ? p6 : Ot2(et("private key", p6, v8));
    } catch {
      throw new Error("invalid private key, expected hex or " + v8 + " bytes, got " + typeof p6);
    }
    return m5 && (N11 = X2(N11, O6)), ft2("private key", N11, K4, O6), N11;
  }
  function u4(p6) {
    if (!(p6 instanceof h7)) throw new Error("ProjectivePoint expected");
  }
  const l9 = Qe2((p6, d6) => {
    const { px: v8, py: m5, pz: O6 } = p6;
    if (n7.eql(O6, n7.ONE)) return { x: v8, y: m5 };
    const N11 = p6.is0();
    d6 == null && (d6 = N11 ? n7.ONE : n7.inv(O6));
    const $5 = n7.mul(v8, d6), B4 = n7.mul(m5, d6), A6 = n7.mul(O6, d6);
    if (N11) return { x: n7.ZERO, y: n7.ZERO };
    if (!n7.eql(A6, n7.ONE)) throw new Error("invZ was invalid");
    return { x: $5, y: B4 };
  }), f8 = Qe2((p6) => {
    if (p6.is0()) {
      if (e4.allowInfinityPoint && !n7.is0(p6.py)) return;
      throw new Error("bad point: ZERO");
    }
    const { x: d6, y: v8 } = p6.toAffine();
    if (!n7.isValid(d6) || !n7.isValid(v8)) throw new Error("bad point: x or y not FE");
    const m5 = n7.sqr(v8), O6 = s5(d6);
    if (!n7.eql(m5, O6)) throw new Error("bad point: equation left != right");
    if (!p6.isTorsionFree()) throw new Error("bad point: not in prime-order subgroup");
    return true;
  });
  class h7 {
    constructor(d6, v8, m5) {
      if (this.px = d6, this.py = v8, this.pz = m5, d6 == null || !n7.isValid(d6)) throw new Error("x required");
      if (v8 == null || !n7.isValid(v8)) throw new Error("y required");
      if (m5 == null || !n7.isValid(m5)) throw new Error("z required");
      Object.freeze(this);
    }
    static fromAffine(d6) {
      const { x: v8, y: m5 } = d6 || {};
      if (!d6 || !n7.isValid(v8) || !n7.isValid(m5)) throw new Error("invalid affine point");
      if (d6 instanceof h7) throw new Error("projective point not allowed");
      const O6 = (N11) => n7.eql(N11, n7.ZERO);
      return O6(v8) && O6(m5) ? h7.ZERO : new h7(v8, m5, n7.ONE);
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    static normalizeZ(d6) {
      const v8 = n7.invertBatch(d6.map((m5) => m5.pz));
      return d6.map((m5, O6) => m5.toAffine(v8[O6])).map(h7.fromAffine);
    }
    static fromHex(d6) {
      const v8 = h7.fromAffine(i6(et("pointHex", d6)));
      return v8.assertValidity(), v8;
    }
    static fromPrivateKey(d6) {
      return h7.BASE.multiply(a5(d6));
    }
    static msm(d6, v8) {
      return hc(h7, r5, d6, v8);
    }
    _setWindowSize(d6) {
      E8.setWindowSize(this, d6);
    }
    assertValidity() {
      f8(this);
    }
    hasEvenY() {
      const { y: d6 } = this.toAffine();
      if (n7.isOdd) return !n7.isOdd(d6);
      throw new Error("Field doesn't support isOdd");
    }
    equals(d6) {
      u4(d6);
      const { px: v8, py: m5, pz: O6 } = this, { px: N11, py: $5, pz: B4 } = d6, A6 = n7.eql(n7.mul(v8, B4), n7.mul(N11, O6)), T6 = n7.eql(n7.mul(m5, B4), n7.mul($5, O6));
      return A6 && T6;
    }
    negate() {
      return new h7(this.px, n7.neg(this.py), this.pz);
    }
    double() {
      const { a: d6, b: v8 } = e4, m5 = n7.mul(v8, Qr2), { px: O6, py: N11, pz: $5 } = this;
      let B4 = n7.ZERO, A6 = n7.ZERO, T6 = n7.ZERO, S5 = n7.mul(O6, O6), L5 = n7.mul(N11, N11), U3 = n7.mul($5, $5), _6 = n7.mul(O6, N11);
      return _6 = n7.add(_6, _6), T6 = n7.mul(O6, $5), T6 = n7.add(T6, T6), B4 = n7.mul(d6, T6), A6 = n7.mul(m5, U3), A6 = n7.add(B4, A6), B4 = n7.sub(L5, A6), A6 = n7.add(L5, A6), A6 = n7.mul(B4, A6), B4 = n7.mul(_6, B4), T6 = n7.mul(m5, T6), U3 = n7.mul(d6, U3), _6 = n7.sub(S5, U3), _6 = n7.mul(d6, _6), _6 = n7.add(_6, T6), T6 = n7.add(S5, S5), S5 = n7.add(T6, S5), S5 = n7.add(S5, U3), S5 = n7.mul(S5, _6), A6 = n7.add(A6, S5), U3 = n7.mul(N11, $5), U3 = n7.add(U3, U3), S5 = n7.mul(U3, _6), B4 = n7.sub(B4, S5), T6 = n7.mul(U3, L5), T6 = n7.add(T6, T6), T6 = n7.add(T6, T6), new h7(B4, A6, T6);
    }
    add(d6) {
      u4(d6);
      const { px: v8, py: m5, pz: O6 } = this, { px: N11, py: $5, pz: B4 } = d6;
      let A6 = n7.ZERO, T6 = n7.ZERO, S5 = n7.ZERO;
      const L5 = e4.a, U3 = n7.mul(e4.b, Qr2);
      let _6 = n7.mul(v8, N11), j5 = n7.mul(m5, $5), g5 = n7.mul(O6, B4), w7 = n7.add(v8, m5), b6 = n7.add(N11, $5);
      w7 = n7.mul(w7, b6), b6 = n7.add(_6, j5), w7 = n7.sub(w7, b6), b6 = n7.add(v8, O6);
      let I5 = n7.add(N11, B4);
      return b6 = n7.mul(b6, I5), I5 = n7.add(_6, g5), b6 = n7.sub(b6, I5), I5 = n7.add(m5, O6), A6 = n7.add($5, B4), I5 = n7.mul(I5, A6), A6 = n7.add(j5, g5), I5 = n7.sub(I5, A6), S5 = n7.mul(L5, b6), A6 = n7.mul(U3, g5), S5 = n7.add(A6, S5), A6 = n7.sub(j5, S5), S5 = n7.add(j5, S5), T6 = n7.mul(A6, S5), j5 = n7.add(_6, _6), j5 = n7.add(j5, _6), g5 = n7.mul(L5, g5), b6 = n7.mul(U3, b6), j5 = n7.add(j5, g5), g5 = n7.sub(_6, g5), g5 = n7.mul(L5, g5), b6 = n7.add(b6, g5), _6 = n7.mul(j5, b6), T6 = n7.add(T6, _6), _6 = n7.mul(I5, b6), A6 = n7.mul(w7, A6), A6 = n7.sub(A6, _6), _6 = n7.mul(w7, j5), S5 = n7.mul(I5, S5), S5 = n7.add(S5, _6), new h7(A6, T6, S5);
    }
    subtract(d6) {
      return this.add(d6.negate());
    }
    is0() {
      return this.equals(h7.ZERO);
    }
    wNAF(d6) {
      return E8.wNAFCached(this, d6, h7.normalizeZ);
    }
    multiplyUnsafe(d6) {
      const { endo: v8, n: m5 } = e4;
      ft2("scalar", d6, dt2, m5);
      const O6 = h7.ZERO;
      if (d6 === dt2) return O6;
      if (this.is0() || d6 === K4) return this;
      if (!v8 || E8.hasPrecomputes(this)) return E8.wNAFCachedUnsafe(this, d6, h7.normalizeZ);
      let { k1neg: N11, k1: $5, k2neg: B4, k2: A6 } = v8.splitScalar(d6), T6 = O6, S5 = O6, L5 = this;
      for (; $5 > dt2 || A6 > dt2; ) $5 & K4 && (T6 = T6.add(L5)), A6 & K4 && (S5 = S5.add(L5)), L5 = L5.double(), $5 >>= K4, A6 >>= K4;
      return N11 && (T6 = T6.negate()), B4 && (S5 = S5.negate()), S5 = new h7(n7.mul(S5.px, v8.beta), S5.py, S5.pz), T6.add(S5);
    }
    multiply(d6) {
      const { endo: v8, n: m5 } = e4;
      ft2("scalar", d6, K4, m5);
      let O6, N11;
      if (v8) {
        const { k1neg: $5, k1: B4, k2neg: A6, k2: T6 } = v8.splitScalar(d6);
        let { p: S5, f: L5 } = this.wNAF(B4), { p: U3, f: _6 } = this.wNAF(T6);
        S5 = E8.constTimeNegate($5, S5), U3 = E8.constTimeNegate(A6, U3), U3 = new h7(n7.mul(U3.px, v8.beta), U3.py, U3.pz), O6 = S5.add(U3), N11 = L5.add(_6);
      } else {
        const { p: $5, f: B4 } = this.wNAF(d6);
        O6 = $5, N11 = B4;
      }
      return h7.normalizeZ([O6, N11])[0];
    }
    multiplyAndAddUnsafe(d6, v8, m5) {
      const O6 = h7.BASE, N11 = (B4, A6) => A6 === dt2 || A6 === K4 || !B4.equals(O6) ? B4.multiplyUnsafe(A6) : B4.multiply(A6), $5 = N11(this, v8).add(N11(d6, m5));
      return $5.is0() ? void 0 : $5;
    }
    toAffine(d6) {
      return l9(this, d6);
    }
    isTorsionFree() {
      const { h: d6, isTorsionFree: v8 } = e4;
      if (d6 === K4) return true;
      if (v8) return v8(h7, this);
      throw new Error("isTorsionFree() has not been declared for the elliptic curve");
    }
    clearCofactor() {
      const { h: d6, clearCofactor: v8 } = e4;
      return d6 === K4 ? this : v8 ? v8(h7, this) : this.multiplyUnsafe(e4.h);
    }
    toRawBytes(d6 = true) {
      return jt2("isCompressed", d6), this.assertValidity(), o6(h7, this, d6);
    }
    toHex(d6 = true) {
      return jt2("isCompressed", d6), Ct(this.toRawBytes(d6));
    }
  }
  h7.BASE = new h7(e4.Gx, e4.Gy, n7.ONE), h7.ZERO = new h7(n7.ZERO, n7.ONE, n7.ZERO);
  const y7 = e4.nBitLength, E8 = dc(h7, e4.endo ? Math.ceil(y7 / 2) : y7);
  return { CURVE: e4, ProjectivePoint: h7, normPrivateKeyToScalar: a5, weierstrassEquation: s5, isWithinCurveOrder: c8 };
}
function Bc(t3) {
  const e4 = Wr2(t3);
  return Mt2(e4, { hash: "hash", hmac: "function", randomBytes: "function" }, { bits2int: "function", bits2int_modN: "function", lowS: "boolean" }), Object.freeze({ lowS: true, ...e4 });
}
function Ic(t3) {
  const e4 = Bc(t3), { Fp: n7, n: r5 } = e4, o6 = n7.BYTES + 1, i6 = 2 * n7.BYTES + 1;
  function s5(g5) {
    return X2(g5, r5);
  }
  function c8(g5) {
    return en2(g5, r5);
  }
  const { ProjectivePoint: a5, normPrivateKeyToScalar: u4, weierstrassEquation: l9, isWithinCurveOrder: f8 } = Ac({ ...e4, toBytes(g5, w7, b6) {
    const I5 = w7.toAffine(), R4 = n7.toBytes(I5.x), x6 = ee;
    return jt2("isCompressed", b6), b6 ? x6(Uint8Array.from([w7.hasEvenY() ? 2 : 3]), R4) : x6(Uint8Array.from([4]), R4, n7.toBytes(I5.y));
  }, fromBytes(g5) {
    const w7 = g5.length, b6 = g5[0], I5 = g5.subarray(1);
    if (w7 === o6 && (b6 === 2 || b6 === 3)) {
      const R4 = Ot2(I5);
      if (!we2(R4, K4, n7.ORDER)) throw new Error("Point is not on curve");
      const x6 = l9(R4);
      let C7;
      try {
        C7 = n7.sqrt(x6);
      } catch (M6) {
        const D4 = M6 instanceof Error ? ": " + M6.message : "";
        throw new Error("Point is not on curve" + D4);
      }
      const P6 = (C7 & K4) === K4;
      return (b6 & 1) === 1 !== P6 && (C7 = n7.neg(C7)), { x: R4, y: C7 };
    } else if (w7 === i6 && b6 === 4) {
      const R4 = n7.fromBytes(I5.subarray(0, n7.BYTES)), x6 = n7.fromBytes(I5.subarray(n7.BYTES, 2 * n7.BYTES));
      return { x: R4, y: x6 };
    } else {
      const R4 = o6, x6 = i6;
      throw new Error("invalid Point, expected length of " + R4 + ", or uncompressed " + x6 + ", got " + w7);
    }
  } }), h7 = (g5) => Ct(Vt2(g5, e4.nByteLength));
  function y7(g5) {
    const w7 = r5 >> K4;
    return g5 > w7;
  }
  function E8(g5) {
    return y7(g5) ? s5(-g5) : g5;
  }
  const p6 = (g5, w7, b6) => Ot2(g5.slice(w7, b6));
  class d6 {
    constructor(w7, b6, I5) {
      this.r = w7, this.s = b6, this.recovery = I5, this.assertValidity();
    }
    static fromCompact(w7) {
      const b6 = e4.nByteLength;
      return w7 = et("compactSignature", w7, b6 * 2), new d6(p6(w7, 0, b6), p6(w7, b6, 2 * b6));
    }
    static fromDER(w7) {
      const { r: b6, s: I5 } = lt2.toSig(et("DER", w7));
      return new d6(b6, I5);
    }
    assertValidity() {
      ft2("r", this.r, K4, r5), ft2("s", this.s, K4, r5);
    }
    addRecoveryBit(w7) {
      return new d6(this.r, this.s, w7);
    }
    recoverPublicKey(w7) {
      const { r: b6, s: I5, recovery: R4 } = this, x6 = B4(et("msgHash", w7));
      if (R4 == null || ![0, 1, 2, 3].includes(R4)) throw new Error("recovery id invalid");
      const C7 = R4 === 2 || R4 === 3 ? b6 + e4.n : b6;
      if (C7 >= n7.ORDER) throw new Error("recovery id 2 or 3 invalid");
      const P6 = (R4 & 1) === 0 ? "02" : "03", k8 = a5.fromHex(P6 + h7(C7)), M6 = c8(C7), D4 = s5(-x6 * M6), z6 = s5(I5 * M6), Z3 = a5.BASE.multiplyAndAddUnsafe(k8, D4, z6);
      if (!Z3) throw new Error("point at infinify");
      return Z3.assertValidity(), Z3;
    }
    hasHighS() {
      return y7(this.s);
    }
    normalizeS() {
      return this.hasHighS() ? new d6(this.r, s5(-this.s), this.recovery) : this;
    }
    toDERRawBytes() {
      return kt2(this.toDERHex());
    }
    toDERHex() {
      return lt2.hexFromSig({ r: this.r, s: this.s });
    }
    toCompactRawBytes() {
      return kt2(this.toCompactHex());
    }
    toCompactHex() {
      return h7(this.r) + h7(this.s);
    }
  }
  const v8 = { isValidPrivateKey(g5) {
    try {
      return u4(g5), true;
    } catch {
      return false;
    }
  }, normPrivateKeyToScalar: u4, randomPrivateKey: () => {
    const g5 = zr2(e4.n);
    return uc(e4.randomBytes(g5), e4.n);
  }, precompute(g5 = 8, w7 = a5.BASE) {
    return w7._setWindowSize(g5), w7.multiply(BigInt(3)), w7;
  } };
  function m5(g5, w7 = true) {
    return a5.fromPrivateKey(g5).toRawBytes(w7);
  }
  function O6(g5) {
    const w7 = St2(g5), b6 = typeof g5 == "string", I5 = (w7 || b6) && g5.length;
    return w7 ? I5 === o6 || I5 === i6 : b6 ? I5 === 2 * o6 || I5 === 2 * i6 : g5 instanceof a5;
  }
  function N11(g5, w7, b6 = true) {
    if (O6(g5)) throw new Error("first arg must be private key");
    if (!O6(w7)) throw new Error("second arg must be public key");
    return a5.fromHex(w7).multiply(u4(g5)).toRawBytes(b6);
  }
  const $5 = e4.bits2int || function(g5) {
    if (g5.length > 8192) throw new Error("input is too large");
    const w7 = Ot2(g5), b6 = g5.length * 8 - e4.nBitLength;
    return b6 > 0 ? w7 >> BigInt(b6) : w7;
  }, B4 = e4.bits2int_modN || function(g5) {
    return s5($5(g5));
  }, A6 = Xe2(e4.nBitLength);
  function T6(g5) {
    return ft2("num < 2^" + e4.nBitLength, g5, dt2, A6), Vt2(g5, e4.nByteLength);
  }
  function S5(g5, w7, b6 = L5) {
    if (["recovered", "canonical"].some((W4) => W4 in b6)) throw new Error("sign() legacy options not supported");
    const { hash: I5, randomBytes: R4 } = e4;
    let { lowS: x6, prehash: C7, extraEntropy: P6 } = b6;
    x6 == null && (x6 = true), g5 = et("msgHash", g5), Jr2(b6), C7 && (g5 = et("prehashed msgHash", I5(g5)));
    const k8 = B4(g5), M6 = u4(w7), D4 = [T6(M6), T6(k8)];
    if (P6 != null && P6 !== false) {
      const W4 = P6 === true ? R4(n7.BYTES) : P6;
      D4.push(et("extraEntropy", W4));
    }
    const z6 = ee(...D4), Z3 = k8;
    function it3(W4) {
      const J5 = $5(W4);
      if (!f8(J5)) return;
      const Oe3 = c8(J5), Ft3 = a5.BASE.multiply(J5).toAffine(), vt2 = s5(Ft3.x);
      if (vt2 === dt2) return;
      const zt3 = s5(Oe3 * s5(Z3 + vt2 * M6));
      if (zt3 === dt2) return;
      let Ut3 = (Ft3.x === vt2 ? 0 : 2) | Number(Ft3.y & K4), vn3 = zt3;
      return x6 && y7(zt3) && (vn3 = E8(zt3), Ut3 ^= 1), new d6(vt2, vn3, Ut3);
    }
    return { seed: z6, k2sig: it3 };
  }
  const L5 = { lowS: e4.lowS, prehash: false }, U3 = { lowS: e4.lowS, prehash: false };
  function _6(g5, w7, b6 = L5) {
    const { seed: I5, k2sig: R4 } = S5(g5, w7, b6), x6 = e4;
    return Vr2(x6.hash.outputLen, x6.nByteLength, x6.hmac)(I5, R4);
  }
  a5.BASE._setWindowSize(8);
  function j5(g5, w7, b6, I5 = U3) {
    var _a;
    const R4 = g5;
    w7 = et("msgHash", w7), b6 = et("publicKey", b6);
    const { lowS: x6, prehash: C7, format: P6 } = I5;
    if (Jr2(I5), "strict" in I5) throw new Error("options.strict was renamed to lowS");
    if (P6 !== void 0 && P6 !== "compact" && P6 !== "der") throw new Error("format must be compact or der");
    const k8 = typeof R4 == "string" || St2(R4), M6 = !k8 && !P6 && typeof R4 == "object" && R4 !== null && typeof R4.r == "bigint" && typeof R4.s == "bigint";
    if (!k8 && !M6) throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");
    let D4, z6;
    try {
      if (M6 && (D4 = new d6(R4.r, R4.s)), k8) {
        try {
          P6 !== "compact" && (D4 = d6.fromDER(R4));
        } catch (Ut3) {
          if (!(Ut3 instanceof lt2.Err)) throw Ut3;
        }
        !D4 && P6 !== "der" && (D4 = d6.fromCompact(R4));
      }
      z6 = a5.fromHex(b6);
    } catch {
      return false;
    }
    if (!D4 || x6 && D4.hasHighS()) return false;
    C7 && (w7 = e4.hash(w7));
    const { r: Z3, s: it3 } = D4, W4 = B4(w7), J5 = c8(it3), Oe3 = s5(W4 * J5), Ft3 = s5(Z3 * J5), vt2 = (_a = a5.BASE.multiplyAndAddUnsafe(z6, Oe3, Ft3)) == null ? void 0 : _a.toAffine();
    return vt2 ? s5(vt2.x) === Z3 : false;
  }
  return { CURVE: e4, getPublicKey: m5, getSharedSecret: N11, sign: _6, verify: j5, ProjectivePoint: a5, Signature: d6, utils: v8 };
}
function Nc(t3) {
  return { hash: t3, hmac: (e4, ...n7) => pe2(t3, e4, Vi(...n7)), randomBytes: $t2 };
}
function Uc(t3, e4) {
  const n7 = (r5) => Ic({ ...t3, ...Nc(r5) });
  return { ...n7(e4), create: n7 };
}
var to2 = Kr3(BigInt("0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff"));
var Tc = to2.create(BigInt("-3"));
var Rc = BigInt("0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b");
var _c = Uc({ a: Tc, b: Rc, Fp: to2, n: BigInt("0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551"), Gx: BigInt("0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296"), Gy: BigInt("0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5"), h: BigInt(1), lowS: false }, Jt2);
var fn = "base10";
var G3 = "base16";
var Ht2 = "base64pad";
var Ee2 = "base64url";
var qt2 = "utf8";
var ln = 0;
var Kt2 = 1;
var ne = 2;
var $c = 0;
var eo2 = 1;
var re = 12;
var dn = 32;
function Lc() {
  const t3 = un.utils.randomPrivateKey(), e4 = un.getPublicKey(t3);
  return { privateKey: toString3(t3, G3), publicKey: toString3(e4, G3) };
}
function jc() {
  const t3 = $t2(dn);
  return toString3(t3, G3);
}
function Cc(t3, e4) {
  const n7 = un.getSharedSecret(fromString4(t3, G3), fromString4(e4, G3)), r5 = Vs(Jt2, n7, void 0, void 0, dn);
  return toString3(r5, G3);
}
function Pc(t3) {
  const e4 = Jt2(fromString4(t3, G3));
  return toString3(e4, G3);
}
function kc(t3) {
  const e4 = Jt2(fromString4(t3, qt2));
  return toString3(e4, G3);
}
function hn(t3) {
  return fromString4(`${t3}`, fn);
}
function Bt2(t3) {
  return Number(toString3(t3, fn));
}
function no2(t3) {
  return t3.replace(/\+/g, "-").replace(/\//g, "_").replace(/=/g, "");
}
function ro2(t3) {
  const e4 = t3.replace(/-/g, "+").replace(/_/g, "/"), n7 = (4 - e4.length % 4) % 4;
  return e4 + "=".repeat(n7);
}
function Vc(t3) {
  const e4 = hn(typeof t3.type < "u" ? t3.type : ln);
  if (Bt2(e4) === Kt2 && typeof t3.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
  const n7 = typeof t3.senderPublicKey < "u" ? fromString4(t3.senderPublicKey, G3) : void 0, r5 = typeof t3.iv < "u" ? fromString4(t3.iv, G3) : $t2(re), o6 = fromString4(t3.symKey, G3), i6 = $r2(o6, r5).encrypt(fromString4(t3.message, qt2)), s5 = pn({ type: e4, sealed: i6, iv: r5, senderPublicKey: n7 });
  return t3.encoding === Ee2 ? no2(s5) : s5;
}
function Mc(t3) {
  const e4 = fromString4(t3.symKey, G3), { sealed: n7, iv: r5 } = ve2({ encoded: t3.encoded, encoding: t3.encoding }), o6 = $r2(e4, r5).decrypt(n7);
  if (o6 === null) throw new Error("Failed to decrypt");
  return toString3(o6, qt2);
}
function Dc(t3, e4) {
  const n7 = hn(ne), r5 = $t2(re), o6 = fromString4(t3, qt2), i6 = pn({ type: n7, sealed: o6, iv: r5 });
  return e4 === Ee2 ? no2(i6) : i6;
}
function Hc(t3, e4) {
  const { sealed: n7 } = ve2({ encoded: t3, encoding: e4 });
  return toString3(n7, qt2);
}
function pn(t3) {
  if (Bt2(t3.type) === ne) return toString3(concat3([t3.type, t3.sealed]), Ht2);
  if (Bt2(t3.type) === Kt2) {
    if (typeof t3.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
    return toString3(concat3([t3.type, t3.senderPublicKey, t3.iv, t3.sealed]), Ht2);
  }
  return toString3(concat3([t3.type, t3.iv, t3.sealed]), Ht2);
}
function ve2(t3) {
  const e4 = (t3.encoding || Ht2) === Ee2 ? ro2(t3.encoded) : t3.encoded, n7 = fromString4(e4, Ht2), r5 = n7.slice($c, eo2), o6 = eo2;
  if (Bt2(r5) === Kt2) {
    const a5 = o6 + dn, u4 = a5 + re, l9 = n7.slice(o6, a5), f8 = n7.slice(a5, u4), h7 = n7.slice(u4);
    return { type: r5, sealed: h7, iv: f8, senderPublicKey: l9 };
  }
  if (Bt2(r5) === ne) {
    const a5 = n7.slice(o6), u4 = $t2(re);
    return { type: r5, sealed: a5, iv: u4 };
  }
  const i6 = o6 + re, s5 = n7.slice(o6, i6), c8 = n7.slice(i6);
  return { type: r5, sealed: c8, iv: s5 };
}
function qc(t3, e4) {
  const n7 = ve2({ encoded: t3, encoding: e4 == null ? void 0 : e4.encoding });
  return oo2({ type: Bt2(n7.type), senderPublicKey: typeof n7.senderPublicKey < "u" ? toString3(n7.senderPublicKey, G3) : void 0, receiverPublicKey: e4 == null ? void 0 : e4.receiverPublicKey });
}
function oo2(t3) {
  const e4 = (t3 == null ? void 0 : t3.type) || ln;
  if (e4 === Kt2) {
    if (typeof (t3 == null ? void 0 : t3.senderPublicKey) > "u") throw new Error("missing sender public key");
    if (typeof (t3 == null ? void 0 : t3.receiverPublicKey) > "u") throw new Error("missing receiver public key");
  }
  return { type: e4, senderPublicKey: t3 == null ? void 0 : t3.senderPublicKey, receiverPublicKey: t3 == null ? void 0 : t3.receiverPublicKey };
}
function Kc(t3) {
  return t3.type === Kt2 && typeof t3.senderPublicKey == "string" && typeof t3.receiverPublicKey == "string";
}
function Fc(t3) {
  return t3.type === ne;
}
function io2(t3) {
  const e4 = Buffer.from(t3.x, "base64"), n7 = Buffer.from(t3.y, "base64");
  return concat3([new Uint8Array([4]), e4, n7]);
}
function zc(t3, e4) {
  const [n7, r5, o6] = t3.split("."), i6 = Buffer.from(ro2(o6), "base64");
  if (i6.length !== 64) throw new Error("Invalid signature length");
  const s5 = i6.slice(0, 32), c8 = i6.slice(32, 64), a5 = `${n7}.${r5}`, u4 = Jt2(a5), l9 = io2(e4);
  if (!_c.verify(concat3([s5, c8]), u4, l9)) throw new Error("Invalid signature");
  return sn(t3).payload;
}
var so2 = "irn";
function Zc(t3) {
  return (t3 == null ? void 0 : t3.relay) || { protocol: so2 };
}
function Yc(t3) {
  const e4 = C4[t3];
  if (typeof e4 > "u") throw new Error(`Relay Protocol not supported: ${t3}`);
  return e4;
}
function co2(t3, e4 = "-") {
  const n7 = {}, r5 = "relay" + e4;
  return Object.keys(t3).forEach((o6) => {
    if (o6.startsWith(r5)) {
      const i6 = o6.replace(r5, ""), s5 = t3[o6];
      n7[i6] = s5;
    }
  }), n7;
}
function Gc(t3) {
  if (!t3.includes("wc:")) {
    const u4 = Le2(t3);
    u4 != null && u4.includes("wc:") && (t3 = u4);
  }
  t3 = t3.includes("wc://") ? t3.replace("wc://", "") : t3, t3 = t3.includes("wc:") ? t3.replace("wc:", "") : t3;
  const e4 = t3.indexOf(":"), n7 = t3.indexOf("?") !== -1 ? t3.indexOf("?") : void 0, r5 = t3.substring(0, e4), o6 = t3.substring(e4 + 1, n7).split("@"), i6 = typeof n7 < "u" ? t3.substring(n7) : "", s5 = new URLSearchParams(i6), c8 = {};
  s5.forEach((u4, l9) => {
    c8[l9] = u4;
  });
  const a5 = typeof c8.methods == "string" ? c8.methods.split(",") : void 0;
  return { protocol: r5, topic: ao2(o6[0]), version: parseInt(o6[1], 10), symKey: c8.symKey, relay: co2(c8), methods: a5, expiryTimestamp: c8.expiryTimestamp ? parseInt(c8.expiryTimestamp, 10) : void 0 };
}
function ao2(t3) {
  return t3.startsWith("//") ? t3.substring(2) : t3;
}
function uo2(t3, e4 = "-") {
  const n7 = "relay", r5 = {};
  return Object.keys(t3).forEach((o6) => {
    const i6 = o6, s5 = n7 + e4 + i6;
    t3[i6] && (r5[s5] = t3[i6]);
  }), r5;
}
function Wc(t3) {
  const e4 = new URLSearchParams(), n7 = uo2(t3.relay);
  Object.keys(n7).sort().forEach((o6) => {
    e4.set(o6, n7[o6]);
  }), e4.set("symKey", t3.symKey), t3.expiryTimestamp && e4.set("expiryTimestamp", t3.expiryTimestamp.toString()), t3.methods && e4.set("methods", t3.methods.join(","));
  const r5 = e4.toString();
  return `${t3.protocol}:${t3.topic}@${t3.version}?${r5}`;
}
function Xc(t3, e4, n7) {
  return `${t3}?wc_ev=${n7}&topic=${e4}`;
}
function It2(t3) {
  const e4 = [];
  return t3.forEach((n7) => {
    const [r5, o6] = n7.split(":");
    e4.push(`${r5}:${o6}`);
  }), e4;
}
function ho2(t3) {
  const e4 = [];
  return Object.values(t3).forEach((n7) => {
    e4.push(...It2(n7.accounts));
  }), e4;
}
function po2(t3, e4) {
  const n7 = [];
  return Object.values(t3).forEach((r5) => {
    It2(r5.accounts).includes(e4) && n7.push(...r5.methods);
  }), n7;
}
function go2(t3, e4) {
  const n7 = [];
  return Object.values(t3).forEach((r5) => {
    It2(r5.accounts).includes(e4) && n7.push(...r5.events);
  }), n7;
}
function mo2(t3) {
  const e4 = {};
  return t3 == null ? void 0 : t3.forEach((n7) => {
    var r5;
    const [o6, i6] = n7.split(":");
    e4[o6] || (e4[o6] = { accounts: [], chains: [], events: [], methods: [] }), e4[o6].accounts.push(n7), (r5 = e4[o6].chains) == null || r5.push(`${o6}:${i6}`);
  }), e4;
}
function ca(t3, e4) {
  e4 = e4.map((r5) => r5.replace("did:pkh:", ""));
  const n7 = mo2(e4);
  for (const [r5, o6] of Object.entries(n7)) o6.methods ? o6.methods = at(o6.methods, t3) : o6.methods = t3, o6.events = ["chainChanged", "accountsChanged"];
  return n7;
}
var wo2 = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } };
var bo2 = { NOT_INITIALIZED: { message: "Not initialized.", code: 1 }, NO_MATCHING_KEY: { message: "No matching key.", code: 2 }, RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 }, RESUBSCRIBED: { message: "Resubscribed.", code: 4 }, MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 }, EXPIRED: { message: "Expired.", code: 6 }, UNKNOWN_TYPE: { message: "Unknown type.", code: 7 }, MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 }, NON_CONFORMING_NAMESPACES: { message: "Non conforming namespaces.", code: 9 } };
function ht2(t3, e4) {
  const { message: n7, code: r5 } = bo2[t3];
  return { message: e4 ? `${n7} ${e4}` : n7, code: r5 };
}
function Nt2(t3, e4) {
  const { message: n7, code: r5 } = wo2[t3];
  return { message: e4 ? `${n7} ${e4}` : n7, code: r5 };
}
function oe(t3, e4) {
  return Array.isArray(t3) ? typeof e4 < "u" && t3.length ? t3.every(e4) : true : false;
}
function xe2(t3) {
  return Object.getPrototypeOf(t3) === Object.prototype && Object.keys(t3).length;
}
function Et2(t3) {
  return typeof t3 > "u";
}
function nt2(t3, e4) {
  return e4 && Et2(t3) ? true : typeof t3 == "string" && !!t3.trim().length;
}
function Se2(t3, e4) {
  return e4 && Et2(t3) ? true : typeof t3 == "number" && !isNaN(t3);
}
function aa(t3, e4) {
  const { requiredNamespaces: n7 } = e4, r5 = Object.keys(t3.namespaces), o6 = Object.keys(n7);
  let i6 = true;
  return gt2(o6, r5) ? (r5.forEach((s5) => {
    const { accounts: c8, methods: a5, events: u4 } = t3.namespaces[s5], l9 = It2(c8), f8 = n7[s5];
    (!gt2(ce(s5, f8), l9) || !gt2(f8.methods, a5) || !gt2(f8.events, u4)) && (i6 = false);
  }), i6) : false;
}
function ie(t3) {
  return nt2(t3, false) && t3.includes(":") ? t3.split(":").length === 2 : false;
}
function Eo2(t3) {
  if (nt2(t3, false) && t3.includes(":")) {
    const e4 = t3.split(":");
    if (e4.length === 3) {
      const n7 = e4[0] + ":" + e4[1];
      return !!e4[2] && ie(n7);
    }
  }
  return false;
}
function ua(t3) {
  function e4(n7) {
    try {
      return typeof new URL(n7) < "u";
    } catch {
      return false;
    }
  }
  try {
    if (nt2(t3, false)) {
      if (e4(t3)) return true;
      const n7 = Le2(t3);
      return e4(n7);
    }
  } catch {
  }
  return false;
}
function fa(t3) {
  var e4;
  return (e4 = t3 == null ? void 0 : t3.proposer) == null ? void 0 : e4.publicKey;
}
function la(t3) {
  return t3 == null ? void 0 : t3.topic;
}
function da(t3, e4) {
  let n7 = null;
  return nt2(t3 == null ? void 0 : t3.publicKey, false) || (n7 = ht2("MISSING_OR_INVALID", `${e4} controller public key should be a string`)), n7;
}
function mn2(t3) {
  let e4 = true;
  return oe(t3) ? t3.length && (e4 = t3.every((n7) => nt2(n7, false))) : e4 = false, e4;
}
function vo2(t3, e4, n7) {
  let r5 = null;
  return oe(e4) && e4.length ? e4.forEach((o6) => {
    r5 || ie(o6) || (r5 = Nt2("UNSUPPORTED_CHAINS", `${n7}, chain ${o6} should be a string and conform to "namespace:chainId" format`));
  }) : ie(t3) || (r5 = Nt2("UNSUPPORTED_CHAINS", `${n7}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), r5;
}
function xo2(t3, e4, n7) {
  let r5 = null;
  return Object.entries(t3).forEach(([o6, i6]) => {
    if (r5) return;
    const s5 = vo2(o6, ce(o6, i6), `${e4} ${n7}`);
    s5 && (r5 = s5);
  }), r5;
}
function So2(t3, e4) {
  let n7 = null;
  return oe(t3) ? t3.forEach((r5) => {
    n7 || Eo2(r5) || (n7 = Nt2("UNSUPPORTED_ACCOUNTS", `${e4}, account ${r5} should be a string and conform to "namespace:chainId:address" format`));
  }) : n7 = Nt2("UNSUPPORTED_ACCOUNTS", `${e4}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), n7;
}
function Oo2(t3, e4) {
  let n7 = null;
  return Object.values(t3).forEach((r5) => {
    if (n7) return;
    const o6 = So2(r5 == null ? void 0 : r5.accounts, `${e4} namespace`);
    o6 && (n7 = o6);
  }), n7;
}
function Ao2(t3, e4) {
  let n7 = null;
  return mn2(t3 == null ? void 0 : t3.methods) ? mn2(t3 == null ? void 0 : t3.events) || (n7 = Nt2("UNSUPPORTED_EVENTS", `${e4}, events should be an array of strings or empty array for no events`)) : n7 = Nt2("UNSUPPORTED_METHODS", `${e4}, methods should be an array of strings or empty array for no methods`), n7;
}
function wn(t3, e4) {
  let n7 = null;
  return Object.values(t3).forEach((r5) => {
    if (n7) return;
    const o6 = Ao2(r5, `${e4}, namespace`);
    o6 && (n7 = o6);
  }), n7;
}
function ha(t3, e4, n7) {
  let r5 = null;
  if (t3 && xe2(t3)) {
    const o6 = wn(t3, e4);
    o6 && (r5 = o6);
    const i6 = xo2(t3, e4, n7);
    i6 && (r5 = i6);
  } else r5 = ht2("MISSING_OR_INVALID", `${e4}, ${n7} should be an object with data`);
  return r5;
}
function Bo2(t3, e4) {
  let n7 = null;
  if (t3 && xe2(t3)) {
    const r5 = wn(t3, e4);
    r5 && (n7 = r5);
    const o6 = Oo2(t3, e4);
    o6 && (n7 = o6);
  } else n7 = ht2("MISSING_OR_INVALID", `${e4}, namespaces should be an object with data`);
  return n7;
}
function Io2(t3) {
  return nt2(t3.protocol, true);
}
function pa(t3, e4) {
  let n7 = false;
  return e4 && !t3 ? n7 = true : t3 && oe(t3) && t3.length && t3.forEach((r5) => {
    n7 = Io2(r5);
  }), n7;
}
function ga(t3) {
  return typeof t3 == "number";
}
function ya(t3) {
  return typeof t3 < "u" && typeof t3 !== null;
}
function ma(t3) {
  return !(!t3 || typeof t3 != "object" || !t3.code || !Se2(t3.code, false) || !t3.message || !nt2(t3.message, false));
}
function wa(t3) {
  return !(Et2(t3) || !nt2(t3.method, false));
}
function ba(t3) {
  return !(Et2(t3) || Et2(t3.result) && Et2(t3.error) || !Se2(t3.id, false) || !nt2(t3.jsonrpc, false));
}
function Ea(t3) {
  return !(Et2(t3) || !nt2(t3.name, false));
}
function va(t3, e4) {
  return !(!ie(e4) || !ho2(t3).includes(e4));
}
function xa(t3, e4, n7) {
  return nt2(n7, false) ? po2(t3, e4).includes(n7) : false;
}
function Sa(t3, e4, n7) {
  return nt2(n7, false) ? go2(t3, e4).includes(n7) : false;
}
function No2(t3, e4, n7) {
  let r5 = null;
  const o6 = Oa(t3), i6 = Aa(e4), s5 = Object.keys(o6), c8 = Object.keys(i6), a5 = Uo2(Object.keys(t3)), u4 = Uo2(Object.keys(e4)), l9 = a5.filter((f8) => !u4.includes(f8));
  return l9.length && (r5 = ht2("NON_CONFORMING_NAMESPACES", `${n7} namespaces keys don't satisfy requiredNamespaces.
      Required: ${l9.toString()}
      Received: ${Object.keys(e4).toString()}`)), gt2(s5, c8) || (r5 = ht2("NON_CONFORMING_NAMESPACES", `${n7} namespaces chains don't satisfy required namespaces.
      Required: ${s5.toString()}
      Approved: ${c8.toString()}`)), Object.keys(e4).forEach((f8) => {
    if (!f8.includes(":") || r5) return;
    const h7 = It2(e4[f8].accounts);
    h7.includes(f8) || (r5 = ht2("NON_CONFORMING_NAMESPACES", `${n7} namespaces accounts don't satisfy namespace accounts for ${f8}
        Required: ${f8}
        Approved: ${h7.toString()}`));
  }), s5.forEach((f8) => {
    r5 || (gt2(o6[f8].methods, i6[f8].methods) ? gt2(o6[f8].events, i6[f8].events) || (r5 = ht2("NON_CONFORMING_NAMESPACES", `${n7} namespaces events don't satisfy namespace events for ${f8}`)) : r5 = ht2("NON_CONFORMING_NAMESPACES", `${n7} namespaces methods don't satisfy namespace methods for ${f8}`));
  }), r5;
}
function Oa(t3) {
  const e4 = {};
  return Object.keys(t3).forEach((n7) => {
    var r5;
    n7.includes(":") ? e4[n7] = t3[n7] : (r5 = t3[n7].chains) == null || r5.forEach((o6) => {
      e4[o6] = { methods: t3[n7].methods, events: t3[n7].events };
    });
  }), e4;
}
function Uo2(t3) {
  return [...new Set(t3.map((e4) => e4.includes(":") ? e4.split(":")[0] : e4))];
}
function Aa(t3) {
  const e4 = {};
  return Object.keys(t3).forEach((n7) => {
    if (n7.includes(":")) e4[n7] = t3[n7];
    else {
      const r5 = It2(t3[n7].accounts);
      r5 == null ? void 0 : r5.forEach((o6) => {
        e4[o6] = { accounts: t3[n7].accounts.filter((i6) => i6.includes(`${o6}:`)), methods: t3[n7].methods, events: t3[n7].events };
      });
    }
  }), e4;
}
function Ba(t3, e4) {
  return Se2(t3, false) && t3 <= e4.max && t3 >= e4.min;
}
function Ia() {
  const t3 = xt2();
  return new Promise((e4) => {
    switch (t3) {
      case Y2.browser:
        e4(To2());
        break;
      case Y2.reactNative:
        e4(Ro2());
        break;
      case Y2.node:
        e4(_o2());
        break;
      default:
        e4(true);
    }
  });
}
function To2() {
  return Yt2() && (navigator == null ? void 0 : navigator.onLine);
}
async function Ro2() {
  if (pt() && typeof global < "u" && global != null && global.NetInfo) {
    const t3 = await (global == null ? void 0 : global.NetInfo.fetch());
    return t3 == null ? void 0 : t3.isConnected;
  }
  return true;
}
function _o2() {
  return true;
}
function Na(t3) {
  switch (xt2()) {
    case Y2.browser:
      $o2(t3);
      break;
    case Y2.reactNative:
      Lo2(t3);
      break;
    case Y2.node:
      break;
  }
}
function $o2(t3) {
  !pt() && Yt2() && (window.addEventListener("online", () => t3(true)), window.addEventListener("offline", () => t3(false)));
}
function Lo2(t3) {
  pt() && typeof global < "u" && global != null && global.NetInfo && (global == null ? void 0 : global.NetInfo.addEventListener((e4) => t3(e4 == null ? void 0 : e4.isConnected)));
}
var bn2 = {};
var Ua = class {
  static get(e4) {
    return bn2[e4];
  }
  static set(e4, n7) {
    bn2[e4] = n7;
  }
  static delete(e4) {
    delete bn2[e4];
  }
};

// node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js
var import_dist982 = __toESM(require_dist());
var import_dist983 = __toESM(require_dist2());
var import_dist984 = __toESM(require_dist3());
var import_events5 = __toESM(require_events());

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
var esm_exports3 = {};
__export(esm_exports3, {
  DEFAULT_ERROR: () => DEFAULT_ERROR,
  IBaseJsonRpcProvider: () => n5,
  IEvents: () => e3,
  IJsonRpcConnection: () => o4,
  IJsonRpcProvider: () => r4,
  INTERNAL_ERROR: () => INTERNAL_ERROR,
  INVALID_PARAMS: () => INVALID_PARAMS,
  INVALID_REQUEST: () => INVALID_REQUEST,
  METHOD_NOT_FOUND: () => METHOD_NOT_FOUND,
  PARSE_ERROR: () => PARSE_ERROR,
  RESERVED_ERROR_CODES: () => RESERVED_ERROR_CODES,
  SERVER_ERROR: () => SERVER_ERROR,
  SERVER_ERROR_CODE_RANGE: () => SERVER_ERROR_CODE_RANGE,
  STANDARD_ERROR_MAP: () => STANDARD_ERROR_MAP,
  formatErrorMessage: () => formatErrorMessage,
  formatJsonRpcError: () => formatJsonRpcError,
  formatJsonRpcRequest: () => formatJsonRpcRequest,
  formatJsonRpcResult: () => formatJsonRpcResult,
  getBigIntRpcId: () => getBigIntRpcId,
  getError: () => getError,
  getErrorByCode: () => getErrorByCode,
  isHttpUrl: () => isHttpUrl,
  isJsonRpcError: () => isJsonRpcError,
  isJsonRpcPayload: () => isJsonRpcPayload,
  isJsonRpcRequest: () => isJsonRpcRequest,
  isJsonRpcResponse: () => isJsonRpcResponse,
  isJsonRpcResult: () => isJsonRpcResult,
  isJsonRpcValidationInvalid: () => isJsonRpcValidationInvalid,
  isLocalhostUrl: () => isLocalhostUrl,
  isNodeJs: () => isNodeJs,
  isReservedErrorCode: () => isReservedErrorCode,
  isServerErrorCode: () => isServerErrorCode,
  isValidDefaultRoute: () => isValidDefaultRoute,
  isValidErrorCode: () => isValidErrorCode,
  isValidLeadingWildcardRoute: () => isValidLeadingWildcardRoute,
  isValidRoute: () => isValidRoute,
  isValidTrailingWildcardRoute: () => isValidTrailingWildcardRoute,
  isValidWildcardRoute: () => isValidWildcardRoute,
  isWsUrl: () => isWsUrl,
  parseConnectionError: () => parseConnectionError,
  payloadId: () => payloadId,
  validateJsonRpcError: () => validateJsonRpcError
});
var import_dist979 = __toESM(require_dist());
var import_dist980 = __toESM(require_dist2());
var import_dist981 = __toESM(require_dist3());

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js
var import_dist949 = __toESM(require_dist());
var import_dist950 = __toESM(require_dist2());
var import_dist951 = __toESM(require_dist3());
var PARSE_ERROR = "PARSE_ERROR";
var INVALID_REQUEST = "INVALID_REQUEST";
var METHOD_NOT_FOUND = "METHOD_NOT_FOUND";
var INVALID_PARAMS = "INVALID_PARAMS";
var INTERNAL_ERROR = "INTERNAL_ERROR";
var SERVER_ERROR = "SERVER_ERROR";
var RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];
var SERVER_ERROR_CODE_RANGE = [-32e3, -32099];
var STANDARD_ERROR_MAP = {
  [PARSE_ERROR]: { code: -32700, message: "Parse error" },
  [INVALID_REQUEST]: { code: -32600, message: "Invalid Request" },
  [METHOD_NOT_FOUND]: { code: -32601, message: "Method not found" },
  [INVALID_PARAMS]: { code: -32602, message: "Invalid params" },
  [INTERNAL_ERROR]: { code: -32603, message: "Internal error" },
  [SERVER_ERROR]: { code: -32e3, message: "Server error" }
};
var DEFAULT_ERROR = SERVER_ERROR;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js
var import_dist952 = __toESM(require_dist());
var import_dist953 = __toESM(require_dist2());
var import_dist954 = __toESM(require_dist3());
function isServerErrorCode(code2) {
  return code2 <= SERVER_ERROR_CODE_RANGE[0] && code2 >= SERVER_ERROR_CODE_RANGE[1];
}
function isReservedErrorCode(code2) {
  return RESERVED_ERROR_CODES.includes(code2);
}
function isValidErrorCode(code2) {
  return typeof code2 === "number";
}
function getError(type) {
  if (!Object.keys(STANDARD_ERROR_MAP).includes(type)) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return STANDARD_ERROR_MAP[type];
}
function getErrorByCode(code2) {
  const match = Object.values(STANDARD_ERROR_MAP).find((e4) => e4.code === code2);
  if (!match) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return match;
}
function validateJsonRpcError(response) {
  if (typeof response.error.code === "undefined") {
    return { valid: false, error: "Missing code for JSON-RPC error" };
  }
  if (typeof response.error.message === "undefined") {
    return { valid: false, error: "Missing message for JSON-RPC error" };
  }
  if (!isValidErrorCode(response.error.code)) {
    return {
      valid: false,
      error: `Invalid error code type for JSON-RPC: ${response.error.code}`
    };
  }
  if (isReservedErrorCode(response.error.code)) {
    const error = getErrorByCode(response.error.code);
    if (error.message !== STANDARD_ERROR_MAP[DEFAULT_ERROR].message && response.error.message === error.message) {
      return {
        valid: false,
        error: `Invalid error code message for JSON-RPC: ${response.error.code}`
      };
    }
  }
  return { valid: true };
}
function parseConnectionError(e4, url, type) {
  return e4.message.includes("getaddrinfo ENOTFOUND") || e4.message.includes("connect ECONNREFUSED") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e4;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js
var env_exports = {};
__export(env_exports, {
  isNodeJs: () => isNodeJs
});
var import_dist958 = __toESM(require_dist());
var import_dist959 = __toESM(require_dist2());
var import_dist960 = __toESM(require_dist3());
var import_environment = __toESM(require_cjs7());
__reExport(env_exports, __toESM(require_cjs7()));
var isNodeJs = import_environment.isNode;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
__reExport(esm_exports3, env_exports);

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js
var import_dist961 = __toESM(require_dist());
var import_dist962 = __toESM(require_dist2());
var import_dist963 = __toESM(require_dist3());
function payloadId(entropy = 3) {
  const date = Date.now() * Math.pow(10, entropy);
  const extra = Math.floor(Math.random() * Math.pow(10, entropy));
  return date + extra;
}
function getBigIntRpcId(entropy = 6) {
  return BigInt(payloadId(entropy));
}
function formatJsonRpcRequest(method, params, id) {
  return {
    id: id || payloadId(),
    jsonrpc: "2.0",
    method,
    params
  };
}
function formatJsonRpcResult(id, result) {
  return {
    id,
    jsonrpc: "2.0",
    result
  };
}
function formatJsonRpcError(id, error, data) {
  return {
    id,
    jsonrpc: "2.0",
    error: formatErrorMessage(error, data)
  };
}
function formatErrorMessage(error, data) {
  if (typeof error === "undefined") {
    return getError(INTERNAL_ERROR);
  }
  if (typeof error === "string") {
    error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), { message: error });
  }
  if (typeof data !== "undefined") {
    error.data = data;
  }
  if (isReservedErrorCode(error.code)) {
    error = getErrorByCode(error.code);
  }
  return error;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js
var import_dist964 = __toESM(require_dist());
var import_dist965 = __toESM(require_dist2());
var import_dist966 = __toESM(require_dist3());
function isValidRoute(route) {
  if (route.includes("*")) {
    return isValidWildcardRoute(route);
  }
  if (/\W/g.test(route)) {
    return false;
  }
  return true;
}
function isValidDefaultRoute(route) {
  return route === "*";
}
function isValidWildcardRoute(route) {
  if (isValidDefaultRoute(route)) {
    return true;
  }
  if (!route.includes("*")) {
    return false;
  }
  if (route.split("*").length !== 2) {
    return false;
  }
  if (route.split("*").filter((x6) => x6.trim() === "").length !== 1) {
    return false;
  }
  return true;
}
function isValidLeadingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[0].trim();
}
function isValidTrailingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[1].trim();
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js
var import_dist970 = __toESM(require_dist());
var import_dist971 = __toESM(require_dist2());
var import_dist972 = __toESM(require_dist3());

// node_modules/@walletconnect/jsonrpc-types/dist/index.es.js
var import_dist967 = __toESM(require_dist());
var import_dist968 = __toESM(require_dist2());
var import_dist969 = __toESM(require_dist3());
var e3 = class {
};
var o4 = class extends e3 {
  constructor(c8) {
    super();
  }
};
var n5 = class extends e3 {
  constructor() {
    super();
  }
};
var r4 = class extends n5 {
  constructor(c8) {
    super();
  }
};

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js
var import_dist973 = __toESM(require_dist());
var import_dist974 = __toESM(require_dist2());
var import_dist975 = __toESM(require_dist3());
var HTTP_REGEX = "^https?:";
var WS_REGEX = "^wss?:";
function getUrlProtocol(url) {
  const matches = url.match(new RegExp(/^\w+:/, "gi"));
  if (!matches || !matches.length)
    return;
  return matches[0];
}
function matchRegexProtocol(url, regex) {
  const protocol = getUrlProtocol(url);
  if (typeof protocol === "undefined")
    return false;
  return new RegExp(regex).test(protocol);
}
function isHttpUrl(url) {
  return matchRegexProtocol(url, HTTP_REGEX);
}
function isWsUrl(url) {
  return matchRegexProtocol(url, WS_REGEX);
}
function isLocalhostUrl(url) {
  return new RegExp("wss?://localhost(:d{2,5})?").test(url);
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js
var import_dist976 = __toESM(require_dist());
var import_dist977 = __toESM(require_dist2());
var import_dist978 = __toESM(require_dist3());
function isJsonRpcPayload(payload) {
  return typeof payload === "object" && "id" in payload && "jsonrpc" in payload && payload.jsonrpc === "2.0";
}
function isJsonRpcRequest(payload) {
  return isJsonRpcPayload(payload) && "method" in payload;
}
function isJsonRpcResponse(payload) {
  return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));
}
function isJsonRpcResult(payload) {
  return "result" in payload;
}
function isJsonRpcError(payload) {
  return "error" in payload;
}
function isJsonRpcValidationInvalid(validation) {
  return "error" in validation && validation.valid === false;
}

// node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js
var o5 = class extends r4 {
  constructor(t3) {
    super(t3), this.events = new import_events5.EventEmitter(), this.hasRegisteredEventListeners = false, this.connection = this.setConnection(t3), this.connection.connected && this.registerEventListeners();
  }
  async connect(t3 = this.connection) {
    await this.open(t3);
  }
  async disconnect() {
    await this.close();
  }
  on(t3, e4) {
    this.events.on(t3, e4);
  }
  once(t3, e4) {
    this.events.once(t3, e4);
  }
  off(t3, e4) {
    this.events.off(t3, e4);
  }
  removeListener(t3, e4) {
    this.events.removeListener(t3, e4);
  }
  async request(t3, e4) {
    return this.requestStrict(formatJsonRpcRequest(t3.method, t3.params || [], t3.id || getBigIntRpcId().toString()), e4);
  }
  async requestStrict(t3, e4) {
    return new Promise(async (i6, s5) => {
      if (!this.connection.connected) try {
        await this.open();
      } catch (n7) {
        s5(n7);
      }
      this.events.on(`${t3.id}`, (n7) => {
        isJsonRpcError(n7) ? s5(n7.error) : i6(n7.result);
      });
      try {
        await this.connection.send(t3, e4);
      } catch (n7) {
        s5(n7);
      }
    });
  }
  setConnection(t3 = this.connection) {
    return t3;
  }
  onPayload(t3) {
    this.events.emit("payload", t3), isJsonRpcResponse(t3) ? this.events.emit(`${t3.id}`, t3) : this.events.emit("message", { type: t3.method, data: t3.params });
  }
  onClose(t3) {
    t3 && t3.code === 3e3 && this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${t3.code} ${t3.reason ? `(${t3.reason})` : ""}`)), this.events.emit("disconnect");
  }
  async open(t3 = this.connection) {
    this.connection === t3 && this.connection.connected || (this.connection.connected && this.close(), typeof t3 == "string" && (await this.connection.open(t3), t3 = this.connection), this.connection = this.setConnection(t3), await this.connection.open(), this.registerEventListeners(), this.events.emit("connect"));
  }
  async close() {
    await this.connection.close();
  }
  registerEventListeners() {
    this.hasRegisteredEventListeners || (this.connection.on("payload", (t3) => this.onPayload(t3)), this.connection.on("close", (t3) => this.onClose(t3)), this.connection.on("error", (t3) => this.events.emit("error", t3)), this.connection.on("register_error", (t3) => this.onClose()), this.hasRegisteredEventListeners = true);
  }
};

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js
var import_dist988 = __toESM(require_dist());
var import_dist989 = __toESM(require_dist2());
var import_dist990 = __toESM(require_dist3());
var import_events6 = __toESM(require_events());

// node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/@walletconnect/safe-json/dist/esm/index.js
var import_dist985 = __toESM(require_dist());
var import_dist986 = __toESM(require_dist2());
var import_dist987 = __toESM(require_dist3());
var JSONStringify5 = (data) => JSON.stringify(data, (_6, value) => typeof value === "bigint" ? value.toString() + "n" : value);
var JSONParse4 = (json) => {
  const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
  const serializedData = json.replace(numbersBiggerThanMaxInt, '$1"$2n"$3');
  return JSON.parse(serializedData, (_6, value) => {
    const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
    if (isCustomFormatBigInt)
      return BigInt(value.substring(0, value.length - 1));
    return value;
  });
};
function safeJsonParse6(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSONParse4(value);
  } catch (_a) {
    return value;
  }
}
function safeJsonStringify7(value) {
  return typeof value === "string" ? value : JSONStringify5(value) || "";
}

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js
var v5 = () => typeof WebSocket < "u" ? WebSocket : typeof global < "u" && typeof global.WebSocket < "u" ? global.WebSocket : typeof window < "u" && typeof window.WebSocket < "u" ? window.WebSocket : typeof self < "u" && typeof self.WebSocket < "u" ? self.WebSocket : require_browser3();
var w5 = () => typeof WebSocket < "u" || typeof global < "u" && typeof global.WebSocket < "u" || typeof window < "u" && typeof window.WebSocket < "u" || typeof self < "u" && typeof self.WebSocket < "u";
var d5 = (r5) => r5.split("?")[0];
var h6 = 10;
var b4 = v5();
var f6 = class {
  constructor(e4) {
    if (this.url = e4, this.events = new import_events6.EventEmitter(), this.registering = false, !isWsUrl(e4)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e4}`);
    this.url = e4;
  }
  get connected() {
    return typeof this.socket < "u";
  }
  get connecting() {
    return this.registering;
  }
  on(e4, t3) {
    this.events.on(e4, t3);
  }
  once(e4, t3) {
    this.events.once(e4, t3);
  }
  off(e4, t3) {
    this.events.off(e4, t3);
  }
  removeListener(e4, t3) {
    this.events.removeListener(e4, t3);
  }
  async open(e4 = this.url) {
    await this.register(e4);
  }
  async close() {
    return new Promise((e4, t3) => {
      if (typeof this.socket > "u") {
        t3(new Error("Connection already closed"));
        return;
      }
      this.socket.onclose = (n7) => {
        this.onClose(n7), e4();
      }, this.socket.close();
    });
  }
  async send(e4) {
    typeof this.socket > "u" && (this.socket = await this.register());
    try {
      this.socket.send(safeJsonStringify7(e4));
    } catch (t3) {
      this.onError(e4.id, t3);
    }
  }
  register(e4 = this.url) {
    if (!isWsUrl(e4)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e4}`);
    if (this.registering) {
      const t3 = this.events.getMaxListeners();
      return (this.events.listenerCount("register_error") >= t3 || this.events.listenerCount("open") >= t3) && this.events.setMaxListeners(t3 + 1), new Promise((n7, s5) => {
        this.events.once("register_error", (o6) => {
          this.resetMaxListeners(), s5(o6);
        }), this.events.once("open", () => {
          if (this.resetMaxListeners(), typeof this.socket > "u") return s5(new Error("WebSocket connection is missing or invalid"));
          n7(this.socket);
        });
      });
    }
    return this.url = e4, this.registering = true, new Promise((t3, n7) => {
      const s5 = (0, esm_exports3.isReactNative)() ? void 0 : { rejectUnauthorized: !isLocalhostUrl(e4) }, o6 = new b4(e4, [], s5);
      w5() ? o6.onerror = (i6) => {
        const a5 = i6;
        n7(this.emitError(a5.error));
      } : o6.on("error", (i6) => {
        n7(this.emitError(i6));
      }), o6.onopen = () => {
        this.onOpen(o6), t3(o6);
      };
    });
  }
  onOpen(e4) {
    e4.onmessage = (t3) => this.onPayload(t3), e4.onclose = (t3) => this.onClose(t3), this.socket = e4, this.registering = false, this.events.emit("open");
  }
  onClose(e4) {
    this.socket = void 0, this.registering = false, this.events.emit("close", e4);
  }
  onPayload(e4) {
    if (typeof e4.data > "u") return;
    const t3 = typeof e4.data == "string" ? safeJsonParse6(e4.data) : e4.data;
    this.events.emit("payload", t3);
  }
  onError(e4, t3) {
    const n7 = this.parseError(t3), s5 = n7.message || n7.toString(), o6 = formatJsonRpcError(e4, s5);
    this.events.emit("payload", o6);
  }
  parseError(e4, t3 = this.url) {
    return parseConnectionError(e4, d5(t3), "WS");
  }
  resetMaxListeners() {
    this.events.getMaxListeners() > h6 && this.events.setMaxListeners(h6);
  }
  emitError(e4) {
    const t3 = this.parseError(new Error((e4 == null ? void 0 : e4.message) || `WebSocket connection failed for host: ${d5(this.url)}`));
    return this.events.emit("register_error", t3), t3;
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
var import_window_getters2 = __toESM(require_cjs8());
var ze3 = "wc";
var Le3 = 2;
var he3 = "core";
var B3 = `${ze3}@2:${he3}:`;
var Et3 = { name: he3, logger: "error" };
var It3 = { database: ":memory:" };
var Tt3 = "crypto";
var ke3 = "client_ed25519_seed";
var Ct2 = import_time4.ONE_DAY;
var Pt3 = "keychain";
var St3 = "0.3";
var Rt3 = "messages";
var Ot3 = "0.3";
var je3 = import_time4.SIX_HOURS;
var At2 = "publisher";
var xt3 = "irn";
var Nt3 = "error";
var Ue2 = "wss://relay.walletconnect.org";
var $t3 = "relayer";
var C5 = { message: "relayer_message", message_ack: "relayer_message_ack", connect: "relayer_connect", disconnect: "relayer_disconnect", error: "relayer_error", connection_stalled: "relayer_connection_stalled", transport_closed: "relayer_transport_closed", publish: "relayer_publish" };
var zt2 = "_subscription";
var L4 = { payload: "payload", connect: "connect", disconnect: "disconnect", error: "error" };
var Lt3 = 0.1;
var _e3 = "2.19.2";
var Q3 = { link_mode: "link_mode", relay: "relay" };
var le3 = { inbound: "inbound", outbound: "outbound" };
var kt3 = "0.3";
var jt3 = "WALLETCONNECT_CLIENT_ID";
var Fe2 = "WALLETCONNECT_LINK_MODE_APPS";
var $3 = { created: "subscription_created", deleted: "subscription_deleted", expired: "subscription_expired", disabled: "subscription_disabled", sync: "subscription_sync", resubscribed: "subscription_resubscribed" };
var Ut2 = "subscription";
var Ft2 = "0.3";
var Hs2 = import_time4.FIVE_SECONDS * 1e3;
var Mt3 = "pairing";
var Kt3 = "0.3";
var ie2 = { wc_pairingDelete: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1e3 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1001 } }, wc_pairingPing: { req: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1002 }, res: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1003 } }, unregistered_method: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 0 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 0 } } };
var se2 = { create: "pairing_create", expire: "pairing_expire", delete: "pairing_delete", ping: "pairing_ping" };
var F4 = { created: "history_created", updated: "history_updated", deleted: "history_deleted", sync: "history_sync" };
var Bt3 = "history";
var Vt3 = "0.3";
var qt3 = "expirer";
var M5 = { created: "expirer_created", deleted: "expirer_deleted", expired: "expirer_expired", sync: "expirer_sync" };
var Gt3 = "0.3";
var Wt3 = "verify-api";
var Xs2 = "https://verify.walletconnect.com";
var Ht3 = "https://verify.walletconnect.org";
var ue2 = Ht3;
var Yt3 = `${ue2}/v3`;
var Jt3 = [Xs2, Ht3];
var Xt3 = "echo";
var Zt2 = "https://echo.walletconnect.com";
var G4 = { pairing_started: "pairing_started", pairing_uri_validation_success: "pairing_uri_validation_success", pairing_uri_not_expired: "pairing_uri_not_expired", store_new_pairing: "store_new_pairing", subscribing_pairing_topic: "subscribing_pairing_topic", subscribe_pairing_topic_success: "subscribe_pairing_topic_success", existing_pairing: "existing_pairing", pairing_not_expired: "pairing_not_expired", emit_inactive_pairing: "emit_inactive_pairing", emit_session_proposal: "emit_session_proposal", subscribing_to_pairing_topic: "subscribing_to_pairing_topic" };
var Y3 = { no_wss_connection: "no_wss_connection", no_internet_connection: "no_internet_connection", malformed_pairing_uri: "malformed_pairing_uri", active_pairing_already_exists: "active_pairing_already_exists", subscribe_pairing_topic_failure: "subscribe_pairing_topic_failure", pairing_expired: "pairing_expired", proposal_expired: "proposal_expired", proposal_listener_not_found: "proposal_listener_not_found" };
var Qs2 = { session_approve_started: "session_approve_started", proposal_not_expired: "proposal_not_expired", session_namespaces_validation_success: "session_namespaces_validation_success", create_session_topic: "create_session_topic", subscribing_session_topic: "subscribing_session_topic", subscribe_session_topic_success: "subscribe_session_topic_success", publishing_session_approve: "publishing_session_approve", session_approve_publish_success: "session_approve_publish_success", store_session: "store_session", publishing_session_settle: "publishing_session_settle", session_settle_publish_success: "session_settle_publish_success" };
var er3 = { no_internet_connection: "no_internet_connection", no_wss_connection: "no_wss_connection", proposal_expired: "proposal_expired", subscribe_session_topic_failure: "subscribe_session_topic_failure", session_approve_publish_failure: "session_approve_publish_failure", session_settle_publish_failure: "session_settle_publish_failure", session_approve_namespace_validation_failure: "session_approve_namespace_validation_failure", proposal_not_found: "proposal_not_found" };
var tr3 = { authenticated_session_approve_started: "authenticated_session_approve_started", authenticated_session_not_expired: "authenticated_session_not_expired", chains_caip2_compliant: "chains_caip2_compliant", chains_evm_compliant: "chains_evm_compliant", create_authenticated_session_topic: "create_authenticated_session_topic", cacaos_verified: "cacaos_verified", store_authenticated_session: "store_authenticated_session", subscribing_authenticated_session_topic: "subscribing_authenticated_session_topic", subscribe_authenticated_session_topic_success: "subscribe_authenticated_session_topic_success", publishing_authenticated_session_approve: "publishing_authenticated_session_approve", authenticated_session_approve_publish_success: "authenticated_session_approve_publish_success" };
var ir3 = { no_internet_connection: "no_internet_connection", no_wss_connection: "no_wss_connection", missing_session_authenticate_request: "missing_session_authenticate_request", session_authenticate_request_expired: "session_authenticate_request_expired", chains_caip2_compliant_failure: "chains_caip2_compliant_failure", chains_evm_compliant_failure: "chains_evm_compliant_failure", invalid_cacao: "invalid_cacao", subscribe_authenticated_session_topic_failure: "subscribe_authenticated_session_topic_failure", authenticated_session_approve_publish_failure: "authenticated_session_approve_publish_failure", authenticated_session_pending_request_not_found: "authenticated_session_pending_request_not_found" };
var Qt3 = 0.1;
var ei2 = "event-client";
var ti = 86400;
var ii = "https://pulse.walletconnect.org/batch";
function sr3(r5, e4) {
  if (r5.length >= 255) throw new TypeError("Alphabet too long");
  for (var t3 = new Uint8Array(256), i6 = 0; i6 < t3.length; i6++) t3[i6] = 255;
  for (var s5 = 0; s5 < r5.length; s5++) {
    var n7 = r5.charAt(s5), o6 = n7.charCodeAt(0);
    if (t3[o6] !== 255) throw new TypeError(n7 + " is ambiguous");
    t3[o6] = s5;
  }
  var a5 = r5.length, c8 = r5.charAt(0), h7 = Math.log(a5) / Math.log(256), l9 = Math.log(256) / Math.log(a5);
  function d6(u4) {
    if (u4 instanceof Uint8Array || (ArrayBuffer.isView(u4) ? u4 = new Uint8Array(u4.buffer, u4.byteOffset, u4.byteLength) : Array.isArray(u4) && (u4 = Uint8Array.from(u4))), !(u4 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (u4.length === 0) return "";
    for (var b6 = 0, x6 = 0, I5 = 0, D4 = u4.length; I5 !== D4 && u4[I5] === 0; ) I5++, b6++;
    for (var j5 = (D4 - I5) * l9 + 1 >>> 0, T6 = new Uint8Array(j5); I5 !== D4; ) {
      for (var q4 = u4[I5], J5 = 0, K6 = j5 - 1; (q4 !== 0 || J5 < x6) && K6 !== -1; K6--, J5++) q4 += 256 * T6[K6] >>> 0, T6[K6] = q4 % a5 >>> 0, q4 = q4 / a5 >>> 0;
      if (q4 !== 0) throw new Error("Non-zero carry");
      x6 = J5, I5++;
    }
    for (var H5 = j5 - x6; H5 !== j5 && T6[H5] === 0; ) H5++;
    for (var me4 = c8.repeat(b6); H5 < j5; ++H5) me4 += r5.charAt(T6[H5]);
    return me4;
  }
  function g5(u4) {
    if (typeof u4 != "string") throw new TypeError("Expected String");
    if (u4.length === 0) return new Uint8Array();
    var b6 = 0;
    if (u4[b6] !== " ") {
      for (var x6 = 0, I5 = 0; u4[b6] === c8; ) x6++, b6++;
      for (var D4 = (u4.length - b6) * h7 + 1 >>> 0, j5 = new Uint8Array(D4); u4[b6]; ) {
        var T6 = t3[u4.charCodeAt(b6)];
        if (T6 === 255) return;
        for (var q4 = 0, J5 = D4 - 1; (T6 !== 0 || q4 < I5) && J5 !== -1; J5--, q4++) T6 += a5 * j5[J5] >>> 0, j5[J5] = T6 % 256 >>> 0, T6 = T6 / 256 >>> 0;
        if (T6 !== 0) throw new Error("Non-zero carry");
        I5 = q4, b6++;
      }
      if (u4[b6] !== " ") {
        for (var K6 = D4 - I5; K6 !== D4 && j5[K6] === 0; ) K6++;
        for (var H5 = new Uint8Array(x6 + (D4 - K6)), me4 = x6; K6 !== D4; ) H5[me4++] = j5[K6++];
        return H5;
      }
    }
  }
  function _6(u4) {
    var b6 = g5(u4);
    if (b6) return b6;
    throw new Error(`Non-${e4} character`);
  }
  return { encode: d6, decodeUnsafe: g5, decode: _6 };
}
var rr3 = sr3;
var nr3 = rr3;
var si2 = (r5) => {
  if (r5 instanceof Uint8Array && r5.constructor.name === "Uint8Array") return r5;
  if (r5 instanceof ArrayBuffer) return new Uint8Array(r5);
  if (ArrayBuffer.isView(r5)) return new Uint8Array(r5.buffer, r5.byteOffset, r5.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var or4 = (r5) => new TextEncoder().encode(r5);
var ar3 = (r5) => new TextDecoder().decode(r5);
var cr3 = class {
  constructor(e4, t3, i6) {
    this.name = e4, this.prefix = t3, this.baseEncode = i6;
  }
  encode(e4) {
    if (e4 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e4)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var hr3 = class {
  constructor(e4, t3, i6) {
    if (this.name = e4, this.prefix = t3, t3.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = t3.codePointAt(0), this.baseDecode = i6;
  }
  decode(e4) {
    if (typeof e4 == "string") {
      if (e4.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e4)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e4.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e4) {
    return ri2(this, e4);
  }
};
var lr3 = class {
  constructor(e4) {
    this.decoders = e4;
  }
  or(e4) {
    return ri2(this, e4);
  }
  decode(e4) {
    const t3 = e4[0], i6 = this.decoders[t3];
    if (i6) return i6.decode(e4);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e4)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var ri2 = (r5, e4) => new lr3({ ...r5.decoders || { [r5.prefix]: r5 }, ...e4.decoders || { [e4.prefix]: e4 } });
var ur3 = class {
  constructor(e4, t3, i6, s5) {
    this.name = e4, this.prefix = t3, this.baseEncode = i6, this.baseDecode = s5, this.encoder = new cr3(e4, t3, i6), this.decoder = new hr3(e4, t3, s5);
  }
  encode(e4) {
    return this.encoder.encode(e4);
  }
  decode(e4) {
    return this.decoder.decode(e4);
  }
};
var Ee3 = ({ name: r5, prefix: e4, encode: t3, decode: i6 }) => new ur3(r5, e4, t3, i6);
var de3 = ({ prefix: r5, name: e4, alphabet: t3 }) => {
  const { encode: i6, decode: s5 } = nr3(t3, e4);
  return Ee3({ prefix: r5, name: e4, encode: i6, decode: (n7) => si2(s5(n7)) });
};
var dr3 = (r5, e4, t3, i6) => {
  const s5 = {};
  for (let l9 = 0; l9 < e4.length; ++l9) s5[e4[l9]] = l9;
  let n7 = r5.length;
  for (; r5[n7 - 1] === "="; ) --n7;
  const o6 = new Uint8Array(n7 * t3 / 8 | 0);
  let a5 = 0, c8 = 0, h7 = 0;
  for (let l9 = 0; l9 < n7; ++l9) {
    const d6 = s5[r5[l9]];
    if (d6 === void 0) throw new SyntaxError(`Non-${i6} character`);
    c8 = c8 << t3 | d6, a5 += t3, a5 >= 8 && (a5 -= 8, o6[h7++] = 255 & c8 >> a5);
  }
  if (a5 >= t3 || 255 & c8 << 8 - a5) throw new SyntaxError("Unexpected end of data");
  return o6;
};
var gr2 = (r5, e4, t3) => {
  const i6 = e4[e4.length - 1] === "=", s5 = (1 << t3) - 1;
  let n7 = "", o6 = 0, a5 = 0;
  for (let c8 = 0; c8 < r5.length; ++c8) for (a5 = a5 << 8 | r5[c8], o6 += 8; o6 > t3; ) o6 -= t3, n7 += e4[s5 & a5 >> o6];
  if (o6 && (n7 += e4[s5 & a5 << t3 - o6]), i6) for (; n7.length * t3 & 7; ) n7 += "=";
  return n7;
};
var P5 = ({ name: r5, prefix: e4, bitsPerChar: t3, alphabet: i6 }) => Ee3({ prefix: e4, name: r5, encode(s5) {
  return gr2(s5, i6, t3);
}, decode(s5) {
  return dr3(s5, i6, t3, r5);
} });
var pr2 = Ee3({ prefix: "\0", name: "identity", encode: (r5) => ar3(r5), decode: (r5) => or4(r5) });
var yr2 = Object.freeze({ __proto__: null, identity: pr2 });
var br3 = P5({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var mr3 = Object.freeze({ __proto__: null, base2: br3 });
var fr3 = P5({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Dr3 = Object.freeze({ __proto__: null, base8: fr3 });
var vr3 = de3({ prefix: "9", name: "base10", alphabet: "0123456789" });
var wr3 = Object.freeze({ __proto__: null, base10: vr3 });
var _r3 = P5({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var Er2 = P5({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var Ir3 = Object.freeze({ __proto__: null, base16: _r3, base16upper: Er2 });
var Tr3 = P5({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var Cr3 = P5({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var Pr3 = P5({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var Sr3 = P5({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var Rr3 = P5({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var Or3 = P5({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var Ar3 = P5({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var xr2 = P5({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var Nr3 = P5({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var $r3 = Object.freeze({ __proto__: null, base32: Tr3, base32upper: Cr3, base32pad: Pr3, base32padupper: Sr3, base32hex: Rr3, base32hexupper: Or3, base32hexpad: Ar3, base32hexpadupper: xr2, base32z: Nr3 });
var zr3 = de3({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var Lr3 = de3({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var kr3 = Object.freeze({ __proto__: null, base36: zr3, base36upper: Lr3 });
var jr3 = de3({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Ur3 = de3({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var Fr3 = Object.freeze({ __proto__: null, base58btc: jr3, base58flickr: Ur3 });
var Mr3 = P5({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var Kr4 = P5({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var Br3 = P5({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var Vr3 = P5({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var qr3 = Object.freeze({ __proto__: null, base64: Mr3, base64pad: Kr4, base64url: Br3, base64urlpad: Vr3 });
var ni2 = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var Gr3 = ni2.reduce((r5, e4, t3) => (r5[t3] = e4, r5), []);
var Wr3 = ni2.reduce((r5, e4, t3) => (r5[e4.codePointAt(0)] = t3, r5), []);
function Hr3(r5) {
  return r5.reduce((e4, t3) => (e4 += Gr3[t3], e4), "");
}
function Yr3(r5) {
  const e4 = [];
  for (const t3 of r5) {
    const i6 = Wr3[t3.codePointAt(0)];
    if (i6 === void 0) throw new Error(`Non-base256emoji character: ${t3}`);
    e4.push(i6);
  }
  return new Uint8Array(e4);
}
var Jr3 = Ee3({ prefix: "🚀", name: "base256emoji", encode: Hr3, decode: Yr3 });
var Xr3 = Object.freeze({ __proto__: null, base256emoji: Jr3 });
var Zr3 = ai;
var oi2 = 128;
var Qr3 = 127;
var en3 = ~Qr3;
var tn2 = Math.pow(2, 31);
function ai(r5, e4, t3) {
  e4 = e4 || [], t3 = t3 || 0;
  for (var i6 = t3; r5 >= tn2; ) e4[t3++] = r5 & 255 | oi2, r5 /= 128;
  for (; r5 & en3; ) e4[t3++] = r5 & 255 | oi2, r5 >>>= 7;
  return e4[t3] = r5 | 0, ai.bytes = t3 - i6 + 1, e4;
}
var sn3 = Me3;
var rn3 = 128;
var ci = 127;
function Me3(r5, i6) {
  var t3 = 0, i6 = i6 || 0, s5 = 0, n7 = i6, o6, a5 = r5.length;
  do {
    if (n7 >= a5) throw Me3.bytes = 0, new RangeError("Could not decode varint");
    o6 = r5[n7++], t3 += s5 < 28 ? (o6 & ci) << s5 : (o6 & ci) * Math.pow(2, s5), s5 += 7;
  } while (o6 >= rn3);
  return Me3.bytes = n7 - i6, t3;
}
var nn3 = Math.pow(2, 7);
var on3 = Math.pow(2, 14);
var an2 = Math.pow(2, 21);
var cn2 = Math.pow(2, 28);
var hn2 = Math.pow(2, 35);
var ln2 = Math.pow(2, 42);
var un2 = Math.pow(2, 49);
var dn2 = Math.pow(2, 56);
var gn2 = Math.pow(2, 63);
var pn2 = function(r5) {
  return r5 < nn3 ? 1 : r5 < on3 ? 2 : r5 < an2 ? 3 : r5 < cn2 ? 4 : r5 < hn2 ? 5 : r5 < ln2 ? 6 : r5 < un2 ? 7 : r5 < dn2 ? 8 : r5 < gn2 ? 9 : 10;
};
var yn2 = { encode: Zr3, decode: sn3, encodingLength: pn2 };
var hi = yn2;
var li2 = (r5, e4, t3 = 0) => (hi.encode(r5, e4, t3), e4);
var ui = (r5) => hi.encodingLength(r5);
var Ke3 = (r5, e4) => {
  const t3 = e4.byteLength, i6 = ui(r5), s5 = i6 + ui(t3), n7 = new Uint8Array(s5 + t3);
  return li2(r5, n7, 0), li2(t3, n7, i6), n7.set(e4, s5), new bn3(r5, t3, e4, n7);
};
var bn3 = class {
  constructor(e4, t3, i6, s5) {
    this.code = e4, this.size = t3, this.digest = i6, this.bytes = s5;
  }
};
var di = ({ name: r5, code: e4, encode: t3 }) => new mn3(r5, e4, t3);
var mn3 = class {
  constructor(e4, t3, i6) {
    this.name = e4, this.code = t3, this.encode = i6;
  }
  digest(e4) {
    if (e4 instanceof Uint8Array) {
      const t3 = this.encode(e4);
      return t3 instanceof Uint8Array ? Ke3(this.code, t3) : t3.then((i6) => Ke3(this.code, i6));
    } else throw Error("Unknown type, must be binary type");
  }
};
var gi2 = (r5) => async (e4) => new Uint8Array(await crypto.subtle.digest(r5, e4));
var fn2 = di({ name: "sha2-256", code: 18, encode: gi2("SHA-256") });
var Dn = di({ name: "sha2-512", code: 19, encode: gi2("SHA-512") });
var vn2 = Object.freeze({ __proto__: null, sha256: fn2, sha512: Dn });
var pi = 0;
var wn2 = "identity";
var yi2 = si2;
var _n3 = (r5) => Ke3(pi, yi2(r5));
var En3 = { code: pi, name: wn2, encode: yi2, digest: _n3 };
var In2 = Object.freeze({ __proto__: null, identity: En3 });
new TextEncoder(), new TextDecoder();
var bi2 = { ...yr2, ...mr3, ...Dr3, ...wr3, ...Ir3, ...$r3, ...kr3, ...Fr3, ...qr3, ...Xr3 };
({ ...vn2, ...In2 });
function Tn3(r5 = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(r5) : new Uint8Array(r5);
}
function mi2(r5, e4, t3, i6) {
  return { name: r5, prefix: e4, encoder: { name: r5, prefix: e4, encode: t3 }, decoder: { decode: i6 } };
}
var fi2 = mi2("utf8", "u", (r5) => "u" + new TextDecoder("utf8").decode(r5), (r5) => new TextEncoder().encode(r5.substring(1)));
var Be3 = mi2("ascii", "a", (r5) => {
  let e4 = "a";
  for (let t3 = 0; t3 < r5.length; t3++) e4 += String.fromCharCode(r5[t3]);
  return e4;
}, (r5) => {
  r5 = r5.substring(1);
  const e4 = Tn3(r5.length);
  for (let t3 = 0; t3 < r5.length; t3++) e4[t3] = r5.charCodeAt(t3);
  return e4;
});
var Cn3 = { utf8: fi2, "utf-8": fi2, hex: bi2.base16, latin1: Be3, ascii: Be3, binary: Be3, ...bi2 };
function Pn3(r5, e4 = "utf8") {
  const t3 = Cn3[e4];
  if (!t3) throw new Error(`Unsupported encoding "${e4}"`);
  return (e4 === "utf8" || e4 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(r5, "utf8") : t3.decoder.decode(`${t3.prefix}${r5}`);
}
var Sn3 = Object.defineProperty;
var Rn3 = (r5, e4, t3) => e4 in r5 ? Sn3(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var W3 = (r5, e4, t3) => Rn3(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var Di2 = class {
  constructor(e4, t3) {
    this.core = e4, this.logger = t3, W3(this, "keychain", /* @__PURE__ */ new Map()), W3(this, "name", Pt3), W3(this, "version", St3), W3(this, "initialized", false), W3(this, "storagePrefix", B3), W3(this, "init", async () => {
      if (!this.initialized) {
        const i6 = await this.getKeyChain();
        typeof i6 < "u" && (this.keychain = i6), this.initialized = true;
      }
    }), W3(this, "has", (i6) => (this.isInitialized(), this.keychain.has(i6))), W3(this, "set", async (i6, s5) => {
      this.isInitialized(), this.keychain.set(i6, s5), await this.persist();
    }), W3(this, "get", (i6) => {
      this.isInitialized();
      const s5 = this.keychain.get(i6);
      if (typeof s5 > "u") {
        const { message: n7 } = ht2("NO_MATCHING_KEY", `${this.name}: ${i6}`);
        throw new Error(n7);
      }
      return s5;
    }), W3(this, "del", async (i6) => {
      this.isInitialized(), this.keychain.delete(i6), await this.persist();
    }), this.core = e4, this.logger = E5(t3, this.name);
  }
  get context() {
    return y4(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  async setKeyChain(e4) {
    await this.core.storage.setItem(this.storageKey, fi(e4));
  }
  async getKeyChain() {
    const e4 = await this.core.storage.getItem(this.storageKey);
    return typeof e4 < "u" ? li(e4) : void 0;
  }
  async persist() {
    await this.setKeyChain(this.keychain);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = ht2("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
};
var On3 = Object.defineProperty;
var An2 = (r5, e4, t3) => e4 in r5 ? On3(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var S4 = (r5, e4, t3) => An2(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var vi2 = class {
  constructor(e4, t3, i6) {
    this.core = e4, this.logger = t3, S4(this, "name", Tt3), S4(this, "keychain"), S4(this, "randomSessionIdentifier", jc()), S4(this, "initialized", false), S4(this, "init", async () => {
      this.initialized || (await this.keychain.init(), this.initialized = true);
    }), S4(this, "hasKeys", (s5) => (this.isInitialized(), this.keychain.has(s5))), S4(this, "getClientId", async () => {
      this.isInitialized();
      const s5 = await this.getClientSeed(), n7 = Po(s5);
      return Qe(n7.publicKey);
    }), S4(this, "generateKeyPair", () => {
      this.isInitialized();
      const s5 = Lc();
      return this.setPrivateKey(s5.publicKey, s5.privateKey);
    }), S4(this, "signJWT", async (s5) => {
      this.isInitialized();
      const n7 = await this.getClientSeed(), o6 = Po(n7), a5 = this.randomSessionIdentifier, c8 = Ct2;
      return await Qo(a5, s5, c8, o6);
    }), S4(this, "generateSharedKey", (s5, n7, o6) => {
      this.isInitialized();
      const a5 = this.getPrivateKey(s5), c8 = Cc(a5, n7);
      return this.setSymKey(c8, o6);
    }), S4(this, "setSymKey", async (s5, n7) => {
      this.isInitialized();
      const o6 = n7 || Pc(s5);
      return await this.keychain.set(o6, s5), o6;
    }), S4(this, "deleteKeyPair", async (s5) => {
      this.isInitialized(), await this.keychain.del(s5);
    }), S4(this, "deleteSymKey", async (s5) => {
      this.isInitialized(), await this.keychain.del(s5);
    }), S4(this, "encode", async (s5, n7, o6) => {
      this.isInitialized();
      const a5 = oo2(o6), c8 = safeJsonStringify5(n7);
      if (Fc(a5)) return Dc(c8, o6 == null ? void 0 : o6.encoding);
      if (Kc(a5)) {
        const g5 = a5.senderPublicKey, _6 = a5.receiverPublicKey;
        s5 = await this.generateSharedKey(g5, _6);
      }
      const h7 = this.getSymKey(s5), { type: l9, senderPublicKey: d6 } = a5;
      return Vc({ type: l9, symKey: h7, message: c8, senderPublicKey: d6, encoding: o6 == null ? void 0 : o6.encoding });
    }), S4(this, "decode", async (s5, n7, o6) => {
      this.isInitialized();
      const a5 = qc(n7, o6);
      if (Fc(a5)) {
        const c8 = Hc(n7, o6 == null ? void 0 : o6.encoding);
        return safeJsonParse4(c8);
      }
      if (Kc(a5)) {
        const c8 = a5.receiverPublicKey, h7 = a5.senderPublicKey;
        s5 = await this.generateSharedKey(c8, h7);
      }
      try {
        const c8 = this.getSymKey(s5), h7 = Mc({ symKey: c8, encoded: n7, encoding: o6 == null ? void 0 : o6.encoding });
        return safeJsonParse4(h7);
      } catch (c8) {
        this.logger.error(`Failed to decode message from topic: '${s5}', clientId: '${await this.getClientId()}'`), this.logger.error(c8);
      }
    }), S4(this, "getPayloadType", (s5, n7 = Ht2) => {
      const o6 = ve2({ encoded: s5, encoding: n7 });
      return Bt2(o6.type);
    }), S4(this, "getPayloadSenderPublicKey", (s5, n7 = Ht2) => {
      const o6 = ve2({ encoded: s5, encoding: n7 });
      return o6.senderPublicKey ? toString3(o6.senderPublicKey, G3) : void 0;
    }), this.core = e4, this.logger = E5(t3, this.name), this.keychain = i6 || new Di2(this.core, this.logger);
  }
  get context() {
    return y4(this.logger);
  }
  async setPrivateKey(e4, t3) {
    return await this.keychain.set(e4, t3), e4;
  }
  getPrivateKey(e4) {
    return this.keychain.get(e4);
  }
  async getClientSeed() {
    let e4 = "";
    try {
      e4 = this.keychain.get(ke3);
    } catch {
      e4 = jc(), await this.keychain.set(ke3, e4);
    }
    return Pn3(e4, "base16");
  }
  getSymKey(e4) {
    return this.keychain.get(e4);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = ht2("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
};
var xn3 = Object.defineProperty;
var Nn2 = Object.defineProperties;
var $n3 = Object.getOwnPropertyDescriptors;
var wi2 = Object.getOwnPropertySymbols;
var zn3 = Object.prototype.hasOwnProperty;
var Ln2 = Object.prototype.propertyIsEnumerable;
var Ve3 = (r5, e4, t3) => e4 in r5 ? xn3(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var kn3 = (r5, e4) => {
  for (var t3 in e4 || (e4 = {})) zn3.call(e4, t3) && Ve3(r5, t3, e4[t3]);
  if (wi2) for (var t3 of wi2(e4)) Ln2.call(e4, t3) && Ve3(r5, t3, e4[t3]);
  return r5;
};
var jn3 = (r5, e4) => Nn2(r5, $n3(e4));
var k6 = (r5, e4, t3) => Ve3(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var _i2 = class extends y5 {
  constructor(e4, t3) {
    super(e4, t3), this.logger = e4, this.core = t3, k6(this, "messages", /* @__PURE__ */ new Map()), k6(this, "messagesWithoutClientAck", /* @__PURE__ */ new Map()), k6(this, "name", Rt3), k6(this, "version", Ot3), k6(this, "initialized", false), k6(this, "storagePrefix", B3), k6(this, "init", async () => {
      if (!this.initialized) {
        this.logger.trace("Initialized");
        try {
          const i6 = await this.getRelayerMessages();
          typeof i6 < "u" && (this.messages = i6);
          const s5 = await this.getRelayerMessagesWithoutClientAck();
          typeof s5 < "u" && (this.messagesWithoutClientAck = s5), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", size: this.messages.size });
        } catch (i6) {
          this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(i6);
        } finally {
          this.initialized = true;
        }
      }
    }), k6(this, "set", async (i6, s5, n7) => {
      this.isInitialized();
      const o6 = kc(s5);
      let a5 = this.messages.get(i6);
      if (typeof a5 > "u" && (a5 = {}), typeof a5[o6] < "u") return o6;
      if (a5[o6] = s5, this.messages.set(i6, a5), n7 === le3.inbound) {
        const c8 = this.messagesWithoutClientAck.get(i6) || {};
        this.messagesWithoutClientAck.set(i6, jn3(kn3({}, c8), { [o6]: s5 }));
      }
      return await this.persist(), o6;
    }), k6(this, "get", (i6) => {
      this.isInitialized();
      let s5 = this.messages.get(i6);
      return typeof s5 > "u" && (s5 = {}), s5;
    }), k6(this, "getWithoutAck", (i6) => {
      this.isInitialized();
      const s5 = {};
      for (const n7 of i6) {
        const o6 = this.messagesWithoutClientAck.get(n7) || {};
        s5[n7] = Object.values(o6);
      }
      return s5;
    }), k6(this, "has", (i6, s5) => {
      this.isInitialized();
      const n7 = this.get(i6), o6 = kc(s5);
      return typeof n7[o6] < "u";
    }), k6(this, "ack", async (i6, s5) => {
      this.isInitialized();
      const n7 = this.messagesWithoutClientAck.get(i6);
      if (typeof n7 > "u") return;
      const o6 = kc(s5);
      delete n7[o6], Object.keys(n7).length === 0 ? this.messagesWithoutClientAck.delete(i6) : this.messagesWithoutClientAck.set(i6, n7), await this.persist();
    }), k6(this, "del", async (i6) => {
      this.isInitialized(), this.messages.delete(i6), this.messagesWithoutClientAck.delete(i6), await this.persist();
    }), this.logger = E5(e4, this.name), this.core = t3;
  }
  get context() {
    return y4(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get storageKeyWithoutClientAck() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name + "_withoutClientAck";
  }
  async setRelayerMessages(e4) {
    await this.core.storage.setItem(this.storageKey, fi(e4));
  }
  async setRelayerMessagesWithoutClientAck(e4) {
    await this.core.storage.setItem(this.storageKeyWithoutClientAck, fi(e4));
  }
  async getRelayerMessages() {
    const e4 = await this.core.storage.getItem(this.storageKey);
    return typeof e4 < "u" ? li(e4) : void 0;
  }
  async getRelayerMessagesWithoutClientAck() {
    const e4 = await this.core.storage.getItem(this.storageKeyWithoutClientAck);
    return typeof e4 < "u" ? li(e4) : void 0;
  }
  async persist() {
    await this.setRelayerMessages(this.messages), await this.setRelayerMessagesWithoutClientAck(this.messagesWithoutClientAck);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = ht2("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
};
var Un2 = Object.defineProperty;
var Fn3 = Object.defineProperties;
var Mn3 = Object.getOwnPropertyDescriptors;
var Ei2 = Object.getOwnPropertySymbols;
var Kn3 = Object.prototype.hasOwnProperty;
var Bn2 = Object.prototype.propertyIsEnumerable;
var qe3 = (r5, e4, t3) => e4 in r5 ? Un2(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var Ie3 = (r5, e4) => {
  for (var t3 in e4 || (e4 = {})) Kn3.call(e4, t3) && qe3(r5, t3, e4[t3]);
  if (Ei2) for (var t3 of Ei2(e4)) Bn2.call(e4, t3) && qe3(r5, t3, e4[t3]);
  return r5;
};
var Ge3 = (r5, e4) => Fn3(r5, Mn3(e4));
var V3 = (r5, e4, t3) => qe3(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var Vn3 = class extends m4 {
  constructor(e4, t3) {
    super(e4, t3), this.relayer = e4, this.logger = t3, V3(this, "events", new import_events7.EventEmitter()), V3(this, "name", At2), V3(this, "queue", /* @__PURE__ */ new Map()), V3(this, "publishTimeout", (0, import_time4.toMiliseconds)(import_time4.ONE_MINUTE)), V3(this, "initialPublishTimeout", (0, import_time4.toMiliseconds)(import_time4.ONE_SECOND * 15)), V3(this, "needsTransportRestart", false), V3(this, "publish", async (i6, s5, n7) => {
      var o6;
      this.logger.debug("Publishing Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i6, message: s5, opts: n7 } });
      const a5 = (n7 == null ? void 0 : n7.ttl) || je3, c8 = Zc(n7), h7 = (n7 == null ? void 0 : n7.prompt) || false, l9 = (n7 == null ? void 0 : n7.tag) || 0, d6 = (n7 == null ? void 0 : n7.id) || getBigIntRpcId().toString(), g5 = { topic: i6, message: s5, opts: { ttl: a5, relay: c8, prompt: h7, tag: l9, id: d6, attestation: n7 == null ? void 0 : n7.attestation, tvf: n7 == null ? void 0 : n7.tvf } }, _6 = `Failed to publish payload, please try again. id:${d6} tag:${l9}`;
      try {
        const u4 = new Promise(async (b6) => {
          const x6 = ({ id: D4 }) => {
            g5.opts.id === D4 && (this.removeRequestFromQueue(D4), this.relayer.events.removeListener(C5.publish, x6), b6(g5));
          };
          this.relayer.events.on(C5.publish, x6);
          const I5 = yi(new Promise((D4, j5) => {
            this.rpcPublish({ topic: i6, message: s5, ttl: a5, prompt: h7, tag: l9, id: d6, attestation: n7 == null ? void 0 : n7.attestation, tvf: n7 == null ? void 0 : n7.tvf }).then(D4).catch((T6) => {
              this.logger.warn(T6, T6 == null ? void 0 : T6.message), j5(T6);
            });
          }), this.initialPublishTimeout, `Failed initial publish, retrying.... id:${d6} tag:${l9}`);
          try {
            await I5, this.events.removeListener(C5.publish, x6);
          } catch (D4) {
            this.queue.set(d6, Ge3(Ie3({}, g5), { attempt: 1 })), this.logger.warn(D4, D4 == null ? void 0 : D4.message);
          }
        });
        this.logger.trace({ type: "method", method: "publish", params: { id: d6, topic: i6, message: s5, opts: n7 } }), await yi(u4, this.publishTimeout, _6);
      } catch (u4) {
        if (this.logger.debug("Failed to Publish Payload"), this.logger.error(u4), (o6 = n7 == null ? void 0 : n7.internal) != null && o6.throwOnFailedPublish) throw u4;
      } finally {
        this.queue.delete(d6);
      }
    }), V3(this, "on", (i6, s5) => {
      this.events.on(i6, s5);
    }), V3(this, "once", (i6, s5) => {
      this.events.once(i6, s5);
    }), V3(this, "off", (i6, s5) => {
      this.events.off(i6, s5);
    }), V3(this, "removeListener", (i6, s5) => {
      this.events.removeListener(i6, s5);
    }), this.relayer = e4, this.logger = E5(t3, this.name), this.registerEventListeners();
  }
  get context() {
    return y4(this.logger);
  }
  async rpcPublish(e4) {
    var t3, i6, s5, n7;
    const { topic: o6, message: a5, ttl: c8 = je3, prompt: h7, tag: l9, id: d6, attestation: g5, tvf: _6 } = e4, u4 = { method: Yc(Zc().protocol).publish, params: Ie3({ topic: o6, message: a5, ttl: c8, prompt: h7, tag: l9, attestation: g5 }, _6), id: d6 };
    Et2((t3 = u4.params) == null ? void 0 : t3.prompt) && ((i6 = u4.params) == null || delete i6.prompt), Et2((s5 = u4.params) == null ? void 0 : s5.tag) && ((n7 = u4.params) == null || delete n7.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "message", direction: "outgoing", request: u4 });
    const b6 = await this.relayer.request(u4);
    return this.relayer.events.emit(C5.publish, e4), this.logger.debug("Successfully Published Payload"), b6;
  }
  removeRequestFromQueue(e4) {
    this.queue.delete(e4);
  }
  checkQueue() {
    this.queue.forEach(async (e4, t3) => {
      const i6 = e4.attempt + 1;
      this.queue.set(t3, Ge3(Ie3({}, e4), { attempt: i6 }));
      const { topic: s5, message: n7, opts: o6, attestation: a5 } = e4;
      this.logger.warn({}, `Publisher: queue->publishing: ${e4.opts.id}, tag: ${e4.opts.tag}, attempt: ${i6}`), await this.rpcPublish(Ge3(Ie3({}, e4), { topic: s5, message: n7, ttl: o6.ttl, prompt: o6.prompt, tag: o6.tag, id: o6.id, attestation: a5, tvf: o6.tvf })), this.logger.warn({}, `Publisher: queue->published: ${e4.opts.id}`);
    });
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(r3.pulse, () => {
      if (this.needsTransportRestart) {
        this.needsTransportRestart = false, this.relayer.events.emit(C5.connection_stalled);
        return;
      }
      this.checkQueue();
    }), this.relayer.on(C5.message_ack, (e4) => {
      this.removeRequestFromQueue(e4.id.toString());
    });
  }
};
var qn2 = Object.defineProperty;
var Gn3 = (r5, e4, t3) => e4 in r5 ? qn2(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var re2 = (r5, e4, t3) => Gn3(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var Wn3 = class {
  constructor() {
    re2(this, "map", /* @__PURE__ */ new Map()), re2(this, "set", (e4, t3) => {
      const i6 = this.get(e4);
      this.exists(e4, t3) || this.map.set(e4, [...i6, t3]);
    }), re2(this, "get", (e4) => this.map.get(e4) || []), re2(this, "exists", (e4, t3) => this.get(e4).includes(t3)), re2(this, "delete", (e4, t3) => {
      if (typeof t3 > "u") {
        this.map.delete(e4);
        return;
      }
      if (!this.map.has(e4)) return;
      const i6 = this.get(e4);
      if (!this.exists(e4, t3)) return;
      const s5 = i6.filter((n7) => n7 !== t3);
      if (!s5.length) {
        this.map.delete(e4);
        return;
      }
      this.map.set(e4, s5);
    }), re2(this, "clear", () => {
      this.map.clear();
    });
  }
  get topics() {
    return Array.from(this.map.keys());
  }
};
var Hn2 = Object.defineProperty;
var Yn3 = Object.defineProperties;
var Jn3 = Object.getOwnPropertyDescriptors;
var Ii2 = Object.getOwnPropertySymbols;
var Xn3 = Object.prototype.hasOwnProperty;
var Zn3 = Object.prototype.propertyIsEnumerable;
var We3 = (r5, e4, t3) => e4 in r5 ? Hn2(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var ge3 = (r5, e4) => {
  for (var t3 in e4 || (e4 = {})) Xn3.call(e4, t3) && We3(r5, t3, e4[t3]);
  if (Ii2) for (var t3 of Ii2(e4)) Zn3.call(e4, t3) && We3(r5, t3, e4[t3]);
  return r5;
};
var He3 = (r5, e4) => Yn3(r5, Jn3(e4));
var f7 = (r5, e4, t3) => We3(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var Ti2 = class extends P3 {
  constructor(e4, t3) {
    super(e4, t3), this.relayer = e4, this.logger = t3, f7(this, "subscriptions", /* @__PURE__ */ new Map()), f7(this, "topicMap", new Wn3()), f7(this, "events", new import_events7.EventEmitter()), f7(this, "name", Ut2), f7(this, "version", Ft2), f7(this, "pending", /* @__PURE__ */ new Map()), f7(this, "cached", []), f7(this, "initialized", false), f7(this, "storagePrefix", B3), f7(this, "subscribeTimeout", (0, import_time4.toMiliseconds)(import_time4.ONE_MINUTE)), f7(this, "initialSubscribeTimeout", (0, import_time4.toMiliseconds)(import_time4.ONE_SECOND * 15)), f7(this, "clientId"), f7(this, "batchSubscribeTopicsLimit", 500), f7(this, "init", async () => {
      this.initialized || (this.logger.trace("Initialized"), this.registerEventListeners(), await this.restore()), this.initialized = true;
    }), f7(this, "subscribe", async (i6, s5) => {
      this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i6, opts: s5 } });
      try {
        const n7 = Zc(s5), o6 = { topic: i6, relay: n7, transportType: s5 == null ? void 0 : s5.transportType };
        this.pending.set(i6, o6);
        const a5 = await this.rpcSubscribe(i6, n7, s5);
        return typeof a5 == "string" && (this.onSubscribe(a5, o6), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i6, opts: s5 } })), a5;
      } catch (n7) {
        throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(n7), n7;
      }
    }), f7(this, "unsubscribe", async (i6, s5) => {
      this.isInitialized(), typeof (s5 == null ? void 0 : s5.id) < "u" ? await this.unsubscribeById(i6, s5.id, s5) : await this.unsubscribeByTopic(i6, s5);
    }), f7(this, "isSubscribed", (i6) => new Promise((s5) => {
      s5(this.topicMap.topics.includes(i6));
    })), f7(this, "isKnownTopic", (i6) => new Promise((s5) => {
      s5(this.topicMap.topics.includes(i6) || this.pending.has(i6) || this.cached.some((n7) => n7.topic === i6));
    })), f7(this, "on", (i6, s5) => {
      this.events.on(i6, s5);
    }), f7(this, "once", (i6, s5) => {
      this.events.once(i6, s5);
    }), f7(this, "off", (i6, s5) => {
      this.events.off(i6, s5);
    }), f7(this, "removeListener", (i6, s5) => {
      this.events.removeListener(i6, s5);
    }), f7(this, "start", async () => {
      await this.onConnect();
    }), f7(this, "stop", async () => {
      await this.onDisconnect();
    }), f7(this, "restart", async () => {
      await this.restore(), await this.onRestart();
    }), f7(this, "checkPending", async () => {
      if (this.pending.size === 0 && (!this.initialized || !this.relayer.connected)) return;
      const i6 = [];
      this.pending.forEach((s5) => {
        i6.push(s5);
      }), await this.batchSubscribe(i6);
    }), f7(this, "registerEventListeners", () => {
      this.relayer.core.heartbeat.on(r3.pulse, async () => {
        await this.checkPending();
      }), this.events.on($3.created, async (i6) => {
        const s5 = $3.created;
        this.logger.info(`Emitting ${s5}`), this.logger.debug({ type: "event", event: s5, data: i6 }), await this.persist();
      }), this.events.on($3.deleted, async (i6) => {
        const s5 = $3.deleted;
        this.logger.info(`Emitting ${s5}`), this.logger.debug({ type: "event", event: s5, data: i6 }), await this.persist();
      });
    }), this.relayer = e4, this.logger = E5(t3, this.name), this.clientId = "";
  }
  get context() {
    return y4(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.subscriptions.size;
  }
  get ids() {
    return Array.from(this.subscriptions.keys());
  }
  get values() {
    return Array.from(this.subscriptions.values());
  }
  get topics() {
    return this.topicMap.topics;
  }
  get hasAnyTopics() {
    return this.topicMap.topics.length > 0 || this.pending.size > 0 || this.cached.length > 0 || this.subscriptions.size > 0;
  }
  hasSubscription(e4, t3) {
    let i6 = false;
    try {
      i6 = this.getSubscription(e4).topic === t3;
    } catch {
    }
    return i6;
  }
  reset() {
    this.cached = [], this.initialized = true;
  }
  onDisable() {
    this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
  }
  async unsubscribeByTopic(e4, t3) {
    const i6 = this.topicMap.get(e4);
    await Promise.all(i6.map(async (s5) => await this.unsubscribeById(e4, s5, t3)));
  }
  async unsubscribeById(e4, t3, i6) {
    this.logger.debug("Unsubscribing Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e4, id: t3, opts: i6 } });
    try {
      const s5 = Zc(i6);
      await this.restartToComplete({ topic: e4, id: t3, relay: s5 }), await this.rpcUnsubscribe(e4, t3, s5);
      const n7 = Nt2("USER_DISCONNECTED", `${this.name}, ${e4}`);
      await this.onUnsubscribe(e4, t3, n7), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e4, id: t3, opts: i6 } });
    } catch (s5) {
      throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(s5), s5;
    }
  }
  async rpcSubscribe(e4, t3, i6) {
    var s5;
    (!i6 || (i6 == null ? void 0 : i6.transportType) === Q3.relay) && await this.restartToComplete({ topic: e4, id: e4, relay: t3 });
    const n7 = { method: Yc(t3.protocol).subscribe, params: { topic: e4 } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: n7 });
    const o6 = (s5 = i6 == null ? void 0 : i6.internal) == null ? void 0 : s5.throwOnFailedPublish;
    try {
      const a5 = await this.getSubscriptionId(e4);
      if ((i6 == null ? void 0 : i6.transportType) === Q3.link_mode) return setTimeout(() => {
        (this.relayer.connected || this.relayer.connecting) && this.relayer.request(n7).catch((l9) => this.logger.warn(l9));
      }, (0, import_time4.toMiliseconds)(import_time4.ONE_SECOND)), a5;
      const c8 = new Promise(async (l9) => {
        const d6 = (g5) => {
          g5.topic === e4 && (this.events.removeListener($3.created, d6), l9(g5.id));
        };
        this.events.on($3.created, d6);
        try {
          const g5 = await yi(new Promise((_6, u4) => {
            this.relayer.request(n7).catch((b6) => {
              this.logger.warn(b6, b6 == null ? void 0 : b6.message), u4(b6);
            }).then(_6);
          }), this.initialSubscribeTimeout, `Subscribing to ${e4} failed, please try again`);
          this.events.removeListener($3.created, d6), l9(g5);
        } catch {
        }
      }), h7 = await yi(c8, this.subscribeTimeout, `Subscribing to ${e4} failed, please try again`);
      if (!h7 && o6) throw new Error(`Subscribing to ${e4} failed, please try again`);
      return h7 ? a5 : null;
    } catch (a5) {
      if (this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(C5.connection_stalled), o6) throw a5;
    }
    return null;
  }
  async rpcBatchSubscribe(e4) {
    if (!e4.length) return;
    const t3 = e4[0].relay, i6 = { method: Yc(t3.protocol).batchSubscribe, params: { topics: e4.map((s5) => s5.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i6 });
    try {
      await await yi(new Promise((s5) => {
        this.relayer.request(i6).catch((n7) => this.logger.warn(n7)).then(s5);
      }), this.subscribeTimeout, "rpcBatchSubscribe failed, please try again");
    } catch {
      this.relayer.events.emit(C5.connection_stalled);
    }
  }
  async rpcBatchFetchMessages(e4) {
    if (!e4.length) return;
    const t3 = e4[0].relay, i6 = { method: Yc(t3.protocol).batchFetchMessages, params: { topics: e4.map((n7) => n7.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i6 });
    let s5;
    try {
      s5 = await await yi(new Promise((n7, o6) => {
        this.relayer.request(i6).catch((a5) => {
          this.logger.warn(a5), o6(a5);
        }).then(n7);
      }), this.subscribeTimeout, "rpcBatchFetchMessages failed, please try again");
    } catch {
      this.relayer.events.emit(C5.connection_stalled);
    }
    return s5;
  }
  rpcUnsubscribe(e4, t3, i6) {
    const s5 = { method: Yc(i6.protocol).unsubscribe, params: { topic: e4, id: t3 } };
    return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s5 }), this.relayer.request(s5);
  }
  onSubscribe(e4, t3) {
    this.setSubscription(e4, He3(ge3({}, t3), { id: e4 })), this.pending.delete(t3.topic);
  }
  onBatchSubscribe(e4) {
    e4.length && e4.forEach((t3) => {
      this.setSubscription(t3.id, ge3({}, t3)), this.pending.delete(t3.topic);
    });
  }
  async onUnsubscribe(e4, t3, i6) {
    this.events.removeAllListeners(t3), this.hasSubscription(t3, e4) && this.deleteSubscription(t3, i6), await this.relayer.messages.del(e4);
  }
  async setRelayerSubscriptions(e4) {
    await this.relayer.core.storage.setItem(this.storageKey, e4);
  }
  async getRelayerSubscriptions() {
    return await this.relayer.core.storage.getItem(this.storageKey);
  }
  setSubscription(e4, t3) {
    this.logger.debug("Setting subscription"), this.logger.trace({ type: "method", method: "setSubscription", id: e4, subscription: t3 }), this.addSubscription(e4, t3);
  }
  addSubscription(e4, t3) {
    this.subscriptions.set(e4, ge3({}, t3)), this.topicMap.set(t3.topic, e4), this.events.emit($3.created, t3);
  }
  getSubscription(e4) {
    this.logger.debug("Getting subscription"), this.logger.trace({ type: "method", method: "getSubscription", id: e4 });
    const t3 = this.subscriptions.get(e4);
    if (!t3) {
      const { message: i6 } = ht2("NO_MATCHING_KEY", `${this.name}: ${e4}`);
      throw new Error(i6);
    }
    return t3;
  }
  deleteSubscription(e4, t3) {
    this.logger.debug("Deleting subscription"), this.logger.trace({ type: "method", method: "deleteSubscription", id: e4, reason: t3 });
    const i6 = this.getSubscription(e4);
    this.subscriptions.delete(e4), this.topicMap.delete(i6.topic, e4), this.events.emit($3.deleted, He3(ge3({}, i6), { reason: t3 }));
  }
  async persist() {
    await this.setRelayerSubscriptions(this.values), this.events.emit($3.sync);
  }
  async onRestart() {
    if (this.cached.length) {
      const e4 = [...this.cached], t3 = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
      for (let i6 = 0; i6 < t3; i6++) {
        const s5 = e4.splice(0, this.batchSubscribeTopicsLimit);
        await this.batchSubscribe(s5);
      }
    }
    this.events.emit($3.resubscribed);
  }
  async restore() {
    try {
      const e4 = await this.getRelayerSubscriptions();
      if (typeof e4 > "u" || !e4.length) return;
      if (this.subscriptions.size) {
        const { message: t3 } = ht2("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t3), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t3);
      }
      this.cached = e4, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({ type: "method", method: "restore", subscriptions: this.values });
    } catch (e4) {
      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e4);
    }
  }
  async batchSubscribe(e4) {
    e4.length && (await this.rpcBatchSubscribe(e4), this.onBatchSubscribe(await Promise.all(e4.map(async (t3) => He3(ge3({}, t3), { id: await this.getSubscriptionId(t3.topic) })))));
  }
  async batchFetchMessages(e4) {
    if (!e4.length) return;
    this.logger.trace(`Fetching batch messages for ${e4.length} subscriptions`);
    const t3 = await this.rpcBatchFetchMessages(e4);
    t3 && t3.messages && (await Ni((0, import_time4.toMiliseconds)(import_time4.ONE_SECOND)), await this.relayer.handleBatchMessageEvents(t3.messages));
  }
  async onConnect() {
    await this.restart(), this.reset();
  }
  onDisconnect() {
    this.onDisable();
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = ht2("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
  async restartToComplete(e4) {
    !this.relayer.connected && !this.relayer.connecting && (this.cached.push(e4), await this.relayer.transportOpen());
  }
  async getClientId() {
    return this.clientId || (this.clientId = await this.relayer.core.crypto.getClientId()), this.clientId;
  }
  async getSubscriptionId(e4) {
    return kc(e4 + await this.getClientId());
  }
};
var Qn3 = Object.defineProperty;
var Ci2 = Object.getOwnPropertySymbols;
var eo3 = Object.prototype.hasOwnProperty;
var to3 = Object.prototype.propertyIsEnumerable;
var Ye3 = (r5, e4, t3) => e4 in r5 ? Qn3(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var Pi3 = (r5, e4) => {
  for (var t3 in e4 || (e4 = {})) eo3.call(e4, t3) && Ye3(r5, t3, e4[t3]);
  if (Ci2) for (var t3 of Ci2(e4)) to3.call(e4, t3) && Ye3(r5, t3, e4[t3]);
  return r5;
};
var y6 = (r5, e4, t3) => Ye3(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var Si2 = class extends d4 {
  constructor(e4) {
    super(e4), y6(this, "protocol", "wc"), y6(this, "version", 2), y6(this, "core"), y6(this, "logger"), y6(this, "events", new import_events7.EventEmitter()), y6(this, "provider"), y6(this, "messages"), y6(this, "subscriber"), y6(this, "publisher"), y6(this, "name", $t3), y6(this, "transportExplicitlyClosed", false), y6(this, "initialized", false), y6(this, "connectionAttemptInProgress", false), y6(this, "relayUrl"), y6(this, "projectId"), y6(this, "packageName"), y6(this, "bundleId"), y6(this, "hasExperiencedNetworkDisruption", false), y6(this, "pingTimeout"), y6(this, "heartBeatTimeout", (0, import_time4.toMiliseconds)(import_time4.THIRTY_SECONDS + import_time4.FIVE_SECONDS)), y6(this, "reconnectTimeout"), y6(this, "connectPromise"), y6(this, "reconnectInProgress", false), y6(this, "requestsInFlight", []), y6(this, "connectTimeout", (0, import_time4.toMiliseconds)(import_time4.ONE_SECOND * 15)), y6(this, "request", async (t3) => {
      var i6, s5;
      this.logger.debug("Publishing Request Payload");
      const n7 = t3.id || getBigIntRpcId().toString();
      await this.toEstablishConnection();
      try {
        this.logger.trace({ id: n7, method: t3.method, topic: (i6 = t3.params) == null ? void 0 : i6.topic }, "relayer.request - publishing...");
        const o6 = `${n7}:${((s5 = t3.params) == null ? void 0 : s5.tag) || ""}`;
        this.requestsInFlight.push(o6);
        const a5 = await this.provider.request(t3);
        return this.requestsInFlight = this.requestsInFlight.filter((c8) => c8 !== o6), a5;
      } catch (o6) {
        throw this.logger.debug(`Failed to Publish Request: ${n7}`), o6;
      }
    }), y6(this, "resetPingTimeout", () => {
      Re2() && (clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(() => {
        var t3, i6, s5, n7;
        try {
          this.logger.debug({}, "pingTimeout: Connection stalled, terminating..."), (n7 = (s5 = (i6 = (t3 = this.provider) == null ? void 0 : t3.connection) == null ? void 0 : i6.socket) == null ? void 0 : s5.terminate) == null || n7.call(s5);
        } catch (o6) {
          this.logger.warn(o6, o6 == null ? void 0 : o6.message);
        }
      }, this.heartBeatTimeout));
    }), y6(this, "onPayloadHandler", (t3) => {
      this.onProviderPayload(t3), this.resetPingTimeout();
    }), y6(this, "onConnectHandler", () => {
      this.logger.warn({}, "Relayer connected 🛜"), this.startPingTimeout(), this.events.emit(C5.connect);
    }), y6(this, "onDisconnectHandler", () => {
      this.logger.warn({}, "Relayer disconnected 🛑"), this.requestsInFlight = [], this.onProviderDisconnect();
    }), y6(this, "onProviderErrorHandler", (t3) => {
      this.logger.fatal(`Fatal socket error: ${t3.message}`), this.events.emit(C5.error, t3), this.logger.fatal("Fatal socket error received, closing transport"), this.transportClose();
    }), y6(this, "registerProviderListeners", () => {
      this.provider.on(L4.payload, this.onPayloadHandler), this.provider.on(L4.connect, this.onConnectHandler), this.provider.on(L4.disconnect, this.onDisconnectHandler), this.provider.on(L4.error, this.onProviderErrorHandler);
    }), this.core = e4.core, this.logger = typeof e4.logger < "u" && typeof e4.logger != "string" ? E5(e4.logger, this.name) : (0, import_pino2.default)(k4({ level: e4.logger || Nt3 })), this.messages = new _i2(this.logger, e4.core), this.subscriber = new Ti2(this, this.logger), this.publisher = new Vn3(this, this.logger), this.relayUrl = (e4 == null ? void 0 : e4.relayUrl) || Ue2, this.projectId = e4.projectId, ei() ? this.packageName = ri() : ni() && (this.bundleId = ri()), this.provider = {};
  }
  async init() {
    if (this.logger.trace("Initialized"), this.registerEventListeners(), await Promise.all([this.messages.init(), this.subscriber.init()]), this.initialized = true, this.subscriber.hasAnyTopics) try {
      await this.transportOpen();
    } catch (e4) {
      this.logger.warn(e4, e4 == null ? void 0 : e4.message);
    }
  }
  get context() {
    return y4(this.logger);
  }
  get connected() {
    var e4, t3, i6;
    return ((i6 = (t3 = (e4 = this.provider) == null ? void 0 : e4.connection) == null ? void 0 : t3.socket) == null ? void 0 : i6.readyState) === 1 || false;
  }
  get connecting() {
    var e4, t3, i6;
    return ((i6 = (t3 = (e4 = this.provider) == null ? void 0 : e4.connection) == null ? void 0 : t3.socket) == null ? void 0 : i6.readyState) === 0 || this.connectPromise !== void 0 || false;
  }
  async publish(e4, t3, i6) {
    this.isInitialized(), await this.publisher.publish(e4, t3, i6), await this.recordMessageEvent({ topic: e4, message: t3, publishedAt: Date.now(), transportType: Q3.relay }, le3.outbound);
  }
  async subscribe(e4, t3) {
    var i6, s5, n7;
    this.isInitialized(), (!(t3 != null && t3.transportType) || (t3 == null ? void 0 : t3.transportType) === "relay") && await this.toEstablishConnection();
    const o6 = typeof ((i6 = t3 == null ? void 0 : t3.internal) == null ? void 0 : i6.throwOnFailedPublish) > "u" ? true : (s5 = t3 == null ? void 0 : t3.internal) == null ? void 0 : s5.throwOnFailedPublish;
    let a5 = ((n7 = this.subscriber.topicMap.get(e4)) == null ? void 0 : n7[0]) || "", c8;
    const h7 = (l9) => {
      l9.topic === e4 && (this.subscriber.off($3.created, h7), c8());
    };
    return await Promise.all([new Promise((l9) => {
      c8 = l9, this.subscriber.on($3.created, h7);
    }), new Promise(async (l9, d6) => {
      a5 = await this.subscriber.subscribe(e4, Pi3({ internal: { throwOnFailedPublish: o6 } }, t3)).catch((g5) => {
        o6 && d6(g5);
      }) || a5, l9();
    })]), a5;
  }
  async unsubscribe(e4, t3) {
    this.isInitialized(), await this.subscriber.unsubscribe(e4, t3);
  }
  on(e4, t3) {
    this.events.on(e4, t3);
  }
  once(e4, t3) {
    this.events.once(e4, t3);
  }
  off(e4, t3) {
    this.events.off(e4, t3);
  }
  removeListener(e4, t3) {
    this.events.removeListener(e4, t3);
  }
  async transportDisconnect() {
    this.provider.disconnect && (this.hasExperiencedNetworkDisruption || this.connected) ? await yi(this.provider.disconnect(), 2e3, "provider.disconnect()").catch(() => this.onProviderDisconnect()) : this.onProviderDisconnect();
  }
  async transportClose() {
    this.transportExplicitlyClosed = true, await this.transportDisconnect();
  }
  async transportOpen(e4) {
    if (!this.subscriber.hasAnyTopics) {
      this.logger.warn("Starting WS connection skipped because the client has no topics to work with.");
      return;
    }
    if (this.connectPromise ? (this.logger.debug({}, "Waiting for existing connection attempt to resolve..."), await this.connectPromise, this.logger.debug({}, "Existing connection attempt resolved")) : (this.connectPromise = new Promise(async (t3, i6) => {
      await this.connect(e4).then(t3).catch(i6).finally(() => {
        this.connectPromise = void 0;
      });
    }), await this.connectPromise), !this.connected) throw new Error(`Couldn't establish socket connection to the relay server: ${this.relayUrl}`);
  }
  async restartTransport(e4) {
    this.logger.debug({}, "Restarting transport..."), !this.connectionAttemptInProgress && (this.relayUrl = e4 || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.transportOpen());
  }
  async confirmOnlineStateOrThrow() {
    if (!await Ia()) throw new Error("No internet connection detected. Please restart your network and try again.");
  }
  async handleBatchMessageEvents(e4) {
    if ((e4 == null ? void 0 : e4.length) === 0) {
      this.logger.trace("Batch message events is empty. Ignoring...");
      return;
    }
    const t3 = e4.sort((i6, s5) => i6.publishedAt - s5.publishedAt);
    this.logger.debug(`Batch of ${t3.length} message events sorted`);
    for (const i6 of t3) try {
      await this.onMessageEvent(i6);
    } catch (s5) {
      this.logger.warn(s5, "Error while processing batch message event: " + (s5 == null ? void 0 : s5.message));
    }
    this.logger.trace(`Batch of ${t3.length} message events processed`);
  }
  async onLinkMessageEvent(e4, t3) {
    const { topic: i6 } = e4;
    if (!t3.sessionExists) {
      const s5 = Ei(import_time4.FIVE_MINUTES), n7 = { topic: i6, expiry: s5, relay: { protocol: "irn" }, active: false };
      await this.core.pairing.pairings.set(i6, n7);
    }
    this.events.emit(C5.message, e4), await this.recordMessageEvent(e4, le3.inbound);
  }
  async connect(e4) {
    await this.confirmOnlineStateOrThrow(), e4 && e4 !== this.relayUrl && (this.relayUrl = e4, await this.transportDisconnect()), this.connectionAttemptInProgress = true, this.transportExplicitlyClosed = false;
    let t3 = 1;
    for (; t3 < 6; ) {
      try {
        if (this.transportExplicitlyClosed) break;
        this.logger.debug({}, `Connecting to ${this.relayUrl}, attempt: ${t3}...`), await this.createProvider(), await new Promise(async (i6, s5) => {
          const n7 = () => {
            s5(new Error("Connection interrupted while trying to subscribe"));
          };
          this.provider.once(L4.disconnect, n7), await yi(new Promise((o6, a5) => {
            this.provider.connect().then(o6).catch(a5);
          }), this.connectTimeout, `Socket stalled when trying to connect to ${this.relayUrl}`).catch((o6) => {
            s5(o6);
          }).finally(() => {
            this.provider.off(L4.disconnect, n7), clearTimeout(this.reconnectTimeout);
          }), await new Promise(async (o6, a5) => {
            const c8 = () => {
              a5(new Error("Connection interrupted while trying to subscribe"));
            };
            this.provider.once(L4.disconnect, c8), await this.subscriber.start().then(o6).catch(a5).finally(() => {
              this.provider.off(L4.disconnect, c8);
            });
          }), this.hasExperiencedNetworkDisruption = false, i6();
        });
      } catch (i6) {
        await this.subscriber.stop();
        const s5 = i6;
        this.logger.warn({}, s5.message), this.hasExperiencedNetworkDisruption = true;
      } finally {
        this.connectionAttemptInProgress = false;
      }
      if (this.connected) {
        this.logger.debug({}, `Connected to ${this.relayUrl} successfully on attempt: ${t3}`);
        break;
      }
      await new Promise((i6) => setTimeout(i6, (0, import_time4.toMiliseconds)(t3 * 1))), t3++;
    }
  }
  startPingTimeout() {
    var e4, t3, i6, s5, n7;
    if (Re2()) try {
      (t3 = (e4 = this.provider) == null ? void 0 : e4.connection) != null && t3.socket && ((n7 = (s5 = (i6 = this.provider) == null ? void 0 : i6.connection) == null ? void 0 : s5.socket) == null || n7.on("ping", () => {
        this.resetPingTimeout();
      })), this.resetPingTimeout();
    } catch (o6) {
      this.logger.warn(o6, o6 == null ? void 0 : o6.message);
    }
  }
  async createProvider() {
    this.provider.connection && this.unregisterProviderListeners();
    const e4 = await this.core.crypto.signJWT(this.relayUrl);
    this.provider = new o5(new f6(si({ sdkVersion: _e3, protocol: this.protocol, version: this.version, relayUrl: this.relayUrl, projectId: this.projectId, auth: e4, useOnCloseEvent: true, bundleId: this.bundleId, packageName: this.packageName }))), this.registerProviderListeners();
  }
  async recordMessageEvent(e4, t3) {
    const { topic: i6, message: s5 } = e4;
    await this.messages.set(i6, s5, t3);
  }
  async shouldIgnoreMessageEvent(e4) {
    const { topic: t3, message: i6 } = e4;
    if (!i6 || i6.length === 0) return this.logger.warn(`Ignoring invalid/empty message: ${i6}`), true;
    if (!await this.subscriber.isKnownTopic(t3)) return this.logger.warn(`Ignoring message for unknown topic ${t3}`), true;
    const s5 = this.messages.has(t3, i6);
    return s5 && this.logger.warn(`Ignoring duplicate message: ${i6}`), s5;
  }
  async onProviderPayload(e4) {
    if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({ type: "payload", direction: "incoming", payload: e4 }), isJsonRpcRequest(e4)) {
      if (!e4.method.endsWith(zt2)) return;
      const t3 = e4.params, { topic: i6, message: s5, publishedAt: n7, attestation: o6 } = t3.data, a5 = { topic: i6, message: s5, publishedAt: n7, transportType: Q3.relay, attestation: o6 };
      this.logger.debug("Emitting Relayer Payload"), this.logger.trace(Pi3({ type: "event", event: t3.id }, a5)), this.events.emit(t3.id, a5), await this.acknowledgePayload(e4), await this.onMessageEvent(a5);
    } else isJsonRpcResponse(e4) && this.events.emit(C5.message_ack, e4);
  }
  async onMessageEvent(e4) {
    await this.shouldIgnoreMessageEvent(e4) || (await this.recordMessageEvent(e4, le3.inbound), this.events.emit(C5.message, e4));
  }
  async acknowledgePayload(e4) {
    const t3 = formatJsonRpcResult(e4.id, true);
    await this.provider.connection.send(t3);
  }
  unregisterProviderListeners() {
    this.provider.off(L4.payload, this.onPayloadHandler), this.provider.off(L4.connect, this.onConnectHandler), this.provider.off(L4.disconnect, this.onDisconnectHandler), this.provider.off(L4.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);
  }
  async registerEventListeners() {
    let e4 = await Ia();
    Na(async (t3) => {
      e4 !== t3 && (e4 = t3, t3 ? await this.transportOpen().catch((i6) => this.logger.error(i6, i6 == null ? void 0 : i6.message)) : (this.hasExperiencedNetworkDisruption = true, await this.transportDisconnect(), this.transportExplicitlyClosed = false));
    });
  }
  async onProviderDisconnect() {
    clearTimeout(this.pingTimeout), this.events.emit(C5.disconnect), this.connectionAttemptInProgress = false, !this.reconnectInProgress && (this.reconnectInProgress = true, await this.subscriber.stop(), this.subscriber.hasAnyTopics && (this.transportExplicitlyClosed || (this.reconnectTimeout = setTimeout(async () => {
      await this.transportOpen().catch((e4) => this.logger.error(e4, e4 == null ? void 0 : e4.message)), this.reconnectTimeout = void 0, this.reconnectInProgress = false;
    }, (0, import_time4.toMiliseconds)(Lt3)))));
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = ht2("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
  async toEstablishConnection() {
    await this.confirmOnlineStateOrThrow(), !this.connected && await this.connect();
  }
};
function io3() {
}
function Ri2(r5) {
  if (!r5 || typeof r5 != "object") return false;
  const e4 = Object.getPrototypeOf(r5);
  return e4 === null || e4 === Object.prototype || Object.getPrototypeOf(e4) === null ? Object.prototype.toString.call(r5) === "[object Object]" : false;
}
function Oi2(r5) {
  return Object.getOwnPropertySymbols(r5).filter((e4) => Object.prototype.propertyIsEnumerable.call(r5, e4));
}
function Ai2(r5) {
  return r5 == null ? r5 === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(r5);
}
var so3 = "[object RegExp]";
var ro3 = "[object String]";
var no3 = "[object Number]";
var oo3 = "[object Boolean]";
var xi2 = "[object Arguments]";
var ao3 = "[object Symbol]";
var co3 = "[object Date]";
var ho3 = "[object Map]";
var lo2 = "[object Set]";
var uo3 = "[object Array]";
var go3 = "[object Function]";
var po3 = "[object ArrayBuffer]";
var Je3 = "[object Object]";
var yo2 = "[object Error]";
var bo3 = "[object DataView]";
var mo3 = "[object Uint8Array]";
var fo2 = "[object Uint8ClampedArray]";
var Do2 = "[object Uint16Array]";
var vo3 = "[object Uint32Array]";
var wo3 = "[object BigUint64Array]";
var _o3 = "[object Int8Array]";
var Eo3 = "[object Int16Array]";
var Io3 = "[object Int32Array]";
var To3 = "[object BigInt64Array]";
var Co3 = "[object Float32Array]";
var Po3 = "[object Float64Array]";
function So3(r5, e4) {
  return r5 === e4 || Number.isNaN(r5) && Number.isNaN(e4);
}
function Ro3(r5, e4, t3) {
  return pe3(r5, e4, void 0, void 0, void 0, void 0, t3);
}
function pe3(r5, e4, t3, i6, s5, n7, o6) {
  const a5 = o6(r5, e4, t3, i6, s5, n7);
  if (a5 !== void 0) return a5;
  if (typeof r5 == typeof e4) switch (typeof r5) {
    case "bigint":
    case "string":
    case "boolean":
    case "symbol":
    case "undefined":
      return r5 === e4;
    case "number":
      return r5 === e4 || Object.is(r5, e4);
    case "function":
      return r5 === e4;
    case "object":
      return ye3(r5, e4, n7, o6);
  }
  return ye3(r5, e4, n7, o6);
}
function ye3(r5, e4, t3, i6) {
  if (Object.is(r5, e4)) return true;
  let s5 = Ai2(r5), n7 = Ai2(e4);
  if (s5 === xi2 && (s5 = Je3), n7 === xi2 && (n7 = Je3), s5 !== n7) return false;
  switch (s5) {
    case ro3:
      return r5.toString() === e4.toString();
    case no3: {
      const c8 = r5.valueOf(), h7 = e4.valueOf();
      return So3(c8, h7);
    }
    case oo3:
    case co3:
    case ao3:
      return Object.is(r5.valueOf(), e4.valueOf());
    case so3:
      return r5.source === e4.source && r5.flags === e4.flags;
    case go3:
      return r5 === e4;
  }
  t3 = t3 ?? /* @__PURE__ */ new Map();
  const o6 = t3.get(r5), a5 = t3.get(e4);
  if (o6 != null && a5 != null) return o6 === e4;
  t3.set(r5, e4), t3.set(e4, r5);
  try {
    switch (s5) {
      case ho3: {
        if (r5.size !== e4.size) return false;
        for (const [c8, h7] of r5.entries()) if (!e4.has(c8) || !pe3(h7, e4.get(c8), c8, r5, e4, t3, i6)) return false;
        return true;
      }
      case lo2: {
        if (r5.size !== e4.size) return false;
        const c8 = Array.from(r5.values()), h7 = Array.from(e4.values());
        for (let l9 = 0; l9 < c8.length; l9++) {
          const d6 = c8[l9], g5 = h7.findIndex((_6) => pe3(d6, _6, void 0, r5, e4, t3, i6));
          if (g5 === -1) return false;
          h7.splice(g5, 1);
        }
        return true;
      }
      case uo3:
      case mo3:
      case fo2:
      case Do2:
      case vo3:
      case wo3:
      case _o3:
      case Eo3:
      case Io3:
      case To3:
      case Co3:
      case Po3: {
        if (typeof Buffer < "u" && Buffer.isBuffer(r5) !== Buffer.isBuffer(e4) || r5.length !== e4.length) return false;
        for (let c8 = 0; c8 < r5.length; c8++) if (!pe3(r5[c8], e4[c8], c8, r5, e4, t3, i6)) return false;
        return true;
      }
      case po3:
        return r5.byteLength !== e4.byteLength ? false : ye3(new Uint8Array(r5), new Uint8Array(e4), t3, i6);
      case bo3:
        return r5.byteLength !== e4.byteLength || r5.byteOffset !== e4.byteOffset ? false : ye3(new Uint8Array(r5), new Uint8Array(e4), t3, i6);
      case yo2:
        return r5.name === e4.name && r5.message === e4.message;
      case Je3: {
        if (!(ye3(r5.constructor, e4.constructor, t3, i6) || Ri2(r5) && Ri2(e4))) return false;
        const h7 = [...Object.keys(r5), ...Oi2(r5)], l9 = [...Object.keys(e4), ...Oi2(e4)];
        if (h7.length !== l9.length) return false;
        for (let d6 = 0; d6 < h7.length; d6++) {
          const g5 = h7[d6], _6 = r5[g5];
          if (!Object.hasOwn(e4, g5)) return false;
          const u4 = e4[g5];
          if (!pe3(_6, u4, g5, r5, e4, t3, i6)) return false;
        }
        return true;
      }
      default:
        return false;
    }
  } finally {
    t3.delete(r5), t3.delete(e4);
  }
}
function Oo3(r5, e4) {
  return Ro3(r5, e4, io3);
}
var Ao3 = Object.defineProperty;
var Ni2 = Object.getOwnPropertySymbols;
var xo3 = Object.prototype.hasOwnProperty;
var No3 = Object.prototype.propertyIsEnumerable;
var Xe3 = (r5, e4, t3) => e4 in r5 ? Ao3(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var $i2 = (r5, e4) => {
  for (var t3 in e4 || (e4 = {})) xo3.call(e4, t3) && Xe3(r5, t3, e4[t3]);
  if (Ni2) for (var t3 of Ni2(e4)) No3.call(e4, t3) && Xe3(r5, t3, e4[t3]);
  return r5;
};
var z5 = (r5, e4, t3) => Xe3(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var zi2 = class extends f4 {
  constructor(e4, t3, i6, s5 = B3, n7 = void 0) {
    super(e4, t3, i6, s5), this.core = e4, this.logger = t3, this.name = i6, z5(this, "map", /* @__PURE__ */ new Map()), z5(this, "version", kt3), z5(this, "cached", []), z5(this, "initialized", false), z5(this, "getKey"), z5(this, "storagePrefix", B3), z5(this, "recentlyDeleted", []), z5(this, "recentlyDeletedLimit", 200), z5(this, "init", async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((o6) => {
        this.getKey && o6 !== null && !Et2(o6) ? this.map.set(this.getKey(o6), o6) : fa(o6) ? this.map.set(o6.id, o6) : la(o6) && this.map.set(o6.topic, o6);
      }), this.cached = [], this.initialized = true);
    }), z5(this, "set", async (o6, a5) => {
      this.isInitialized(), this.map.has(o6) ? await this.update(o6, a5) : (this.logger.debug("Setting value"), this.logger.trace({ type: "method", method: "set", key: o6, value: a5 }), this.map.set(o6, a5), await this.persist());
    }), z5(this, "get", (o6) => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({ type: "method", method: "get", key: o6 }), this.getData(o6))), z5(this, "getAll", (o6) => (this.isInitialized(), o6 ? this.values.filter((a5) => Object.keys(o6).every((c8) => Oo3(a5[c8], o6[c8]))) : this.values)), z5(this, "update", async (o6, a5) => {
      this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({ type: "method", method: "update", key: o6, update: a5 });
      const c8 = $i2($i2({}, this.getData(o6)), a5);
      this.map.set(o6, c8), await this.persist();
    }), z5(this, "delete", async (o6, a5) => {
      this.isInitialized(), this.map.has(o6) && (this.logger.debug("Deleting value"), this.logger.trace({ type: "method", method: "delete", key: o6, reason: a5 }), this.map.delete(o6), this.addToRecentlyDeleted(o6), await this.persist());
    }), this.logger = E5(t3, this.name), this.storagePrefix = s5, this.getKey = n7;
  }
  get context() {
    return y4(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.map.size;
  }
  get keys() {
    return Array.from(this.map.keys());
  }
  get values() {
    return Array.from(this.map.values());
  }
  addToRecentlyDeleted(e4) {
    this.recentlyDeleted.push(e4), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);
  }
  async setDataStore(e4) {
    await this.core.storage.setItem(this.storageKey, e4);
  }
  async getDataStore() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getData(e4) {
    const t3 = this.map.get(e4);
    if (!t3) {
      if (this.recentlyDeleted.includes(e4)) {
        const { message: s5 } = ht2("MISSING_OR_INVALID", `Record was recently deleted - ${this.name}: ${e4}`);
        throw this.logger.error(s5), new Error(s5);
      }
      const { message: i6 } = ht2("NO_MATCHING_KEY", `${this.name}: ${e4}`);
      throw this.logger.error(i6), new Error(i6);
    }
    return t3;
  }
  async persist() {
    await this.setDataStore(this.values);
  }
  async restore() {
    try {
      const e4 = await this.getDataStore();
      if (typeof e4 > "u" || !e4.length) return;
      if (this.map.size) {
        const { message: t3 } = ht2("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t3), new Error(t3);
      }
      this.cached = e4, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({ type: "method", method: "restore", value: this.values });
    } catch (e4) {
      this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e4);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = ht2("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
};
var $o3 = Object.defineProperty;
var zo2 = (r5, e4, t3) => e4 in r5 ? $o3(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var p5 = (r5, e4, t3) => zo2(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var Li2 = class {
  constructor(e4, t3) {
    this.core = e4, this.logger = t3, p5(this, "name", Mt3), p5(this, "version", Kt3), p5(this, "events", new import_events7.default()), p5(this, "pairings"), p5(this, "initialized", false), p5(this, "storagePrefix", B3), p5(this, "ignoredPayloadTypes", [Kt2]), p5(this, "registeredMethods", []), p5(this, "init", async () => {
      this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = true, this.logger.trace("Initialized"));
    }), p5(this, "register", ({ methods: i6 }) => {
      this.isInitialized(), this.registeredMethods = [.../* @__PURE__ */ new Set([...this.registeredMethods, ...i6])];
    }), p5(this, "create", async (i6) => {
      this.isInitialized();
      const s5 = jc(), n7 = await this.core.crypto.setSymKey(s5), o6 = Ei(import_time4.FIVE_MINUTES), a5 = { protocol: xt3 }, c8 = { topic: n7, expiry: o6, relay: a5, active: false, methods: i6 == null ? void 0 : i6.methods }, h7 = Wc({ protocol: this.core.protocol, version: this.core.version, topic: n7, symKey: s5, relay: a5, expiryTimestamp: o6, methods: i6 == null ? void 0 : i6.methods });
      return this.events.emit(se2.create, c8), this.core.expirer.set(n7, o6), await this.pairings.set(n7, c8), await this.core.relayer.subscribe(n7, { transportType: i6 == null ? void 0 : i6.transportType }), { topic: n7, uri: h7 };
    }), p5(this, "pair", async (i6) => {
      this.isInitialized();
      const s5 = this.core.eventClient.createEvent({ properties: { topic: i6 == null ? void 0 : i6.uri, trace: [G4.pairing_started] } });
      this.isValidPair(i6, s5);
      const { topic: n7, symKey: o6, relay: a5, expiryTimestamp: c8, methods: h7 } = Gc(i6.uri);
      s5.props.properties.topic = n7, s5.addTrace(G4.pairing_uri_validation_success), s5.addTrace(G4.pairing_uri_not_expired);
      let l9;
      if (this.pairings.keys.includes(n7)) {
        if (l9 = this.pairings.get(n7), s5.addTrace(G4.existing_pairing), l9.active) throw s5.setError(Y3.active_pairing_already_exists), new Error(`Pairing already exists: ${n7}. Please try again with a new connection URI.`);
        s5.addTrace(G4.pairing_not_expired);
      }
      const d6 = c8 || Ei(import_time4.FIVE_MINUTES), g5 = { topic: n7, relay: a5, expiry: d6, active: false, methods: h7 };
      this.core.expirer.set(n7, d6), await this.pairings.set(n7, g5), s5.addTrace(G4.store_new_pairing), i6.activatePairing && await this.activate({ topic: n7 }), this.events.emit(se2.create, g5), s5.addTrace(G4.emit_inactive_pairing), this.core.crypto.keychain.has(n7) || await this.core.crypto.setSymKey(o6, n7), s5.addTrace(G4.subscribing_pairing_topic);
      try {
        await this.core.relayer.confirmOnlineStateOrThrow();
      } catch {
        s5.setError(Y3.no_internet_connection);
      }
      try {
        await this.core.relayer.subscribe(n7, { relay: a5 });
      } catch (_6) {
        throw s5.setError(Y3.subscribe_pairing_topic_failure), _6;
      }
      return s5.addTrace(G4.subscribe_pairing_topic_success), g5;
    }), p5(this, "activate", async ({ topic: i6 }) => {
      this.isInitialized();
      const s5 = Ei(import_time4.FIVE_MINUTES);
      this.core.expirer.set(i6, s5), await this.pairings.update(i6, { active: true, expiry: s5 });
    }), p5(this, "ping", async (i6) => {
      this.isInitialized(), await this.isValidPing(i6), this.logger.warn("ping() is deprecated and will be removed in the next major release.");
      const { topic: s5 } = i6;
      if (this.pairings.keys.includes(s5)) {
        const n7 = await this.sendRequest(s5, "wc_pairingPing", {}), { done: o6, resolve: a5, reject: c8 } = gi();
        this.events.once(xi("pairing_ping", n7), ({ error: h7 }) => {
          h7 ? c8(h7) : a5();
        }), await o6();
      }
    }), p5(this, "updateExpiry", async ({ topic: i6, expiry: s5 }) => {
      this.isInitialized(), await this.pairings.update(i6, { expiry: s5 });
    }), p5(this, "updateMetadata", async ({ topic: i6, metadata: s5 }) => {
      this.isInitialized(), await this.pairings.update(i6, { peerMetadata: s5 });
    }), p5(this, "getPairings", () => (this.isInitialized(), this.pairings.values)), p5(this, "disconnect", async (i6) => {
      this.isInitialized(), await this.isValidDisconnect(i6);
      const { topic: s5 } = i6;
      this.pairings.keys.includes(s5) && (await this.sendRequest(s5, "wc_pairingDelete", Nt2("USER_DISCONNECTED")), await this.deletePairing(s5));
    }), p5(this, "formatUriFromPairing", (i6) => {
      this.isInitialized();
      const { topic: s5, relay: n7, expiry: o6, methods: a5 } = i6, c8 = this.core.crypto.keychain.get(s5);
      return Wc({ protocol: this.core.protocol, version: this.core.version, topic: s5, symKey: c8, relay: n7, expiryTimestamp: o6, methods: a5 });
    }), p5(this, "sendRequest", async (i6, s5, n7) => {
      const o6 = formatJsonRpcRequest(s5, n7), a5 = await this.core.crypto.encode(i6, o6), c8 = ie2[s5].req;
      return this.core.history.set(i6, o6), this.core.relayer.publish(i6, a5, c8), o6.id;
    }), p5(this, "sendResult", async (i6, s5, n7) => {
      const o6 = formatJsonRpcResult(i6, n7), a5 = await this.core.crypto.encode(s5, o6), c8 = (await this.core.history.get(s5, i6)).request.method, h7 = ie2[c8].res;
      await this.core.relayer.publish(s5, a5, h7), await this.core.history.resolve(o6);
    }), p5(this, "sendError", async (i6, s5, n7) => {
      const o6 = formatJsonRpcError(i6, n7), a5 = await this.core.crypto.encode(s5, o6), c8 = (await this.core.history.get(s5, i6)).request.method, h7 = ie2[c8] ? ie2[c8].res : ie2.unregistered_method.res;
      await this.core.relayer.publish(s5, a5, h7), await this.core.history.resolve(o6);
    }), p5(this, "deletePairing", async (i6, s5) => {
      await this.core.relayer.unsubscribe(i6), await Promise.all([this.pairings.delete(i6, Nt2("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(i6), s5 ? Promise.resolve() : this.core.expirer.del(i6)]);
    }), p5(this, "cleanup", async () => {
      const i6 = this.pairings.getAll().filter((s5) => vi(s5.expiry));
      await Promise.all(i6.map((s5) => this.deletePairing(s5.topic)));
    }), p5(this, "onRelayEventRequest", async (i6) => {
      const { topic: s5, payload: n7 } = i6;
      switch (n7.method) {
        case "wc_pairingPing":
          return await this.onPairingPingRequest(s5, n7);
        case "wc_pairingDelete":
          return await this.onPairingDeleteRequest(s5, n7);
        default:
          return await this.onUnknownRpcMethodRequest(s5, n7);
      }
    }), p5(this, "onRelayEventResponse", async (i6) => {
      const { topic: s5, payload: n7 } = i6, o6 = (await this.core.history.get(s5, n7.id)).request.method;
      switch (o6) {
        case "wc_pairingPing":
          return this.onPairingPingResponse(s5, n7);
        default:
          return this.onUnknownRpcMethodResponse(o6);
      }
    }), p5(this, "onPairingPingRequest", async (i6, s5) => {
      const { id: n7 } = s5;
      try {
        this.isValidPing({ topic: i6 }), await this.sendResult(n7, i6, true), this.events.emit(se2.ping, { id: n7, topic: i6 });
      } catch (o6) {
        await this.sendError(n7, i6, o6), this.logger.error(o6);
      }
    }), p5(this, "onPairingPingResponse", (i6, s5) => {
      const { id: n7 } = s5;
      setTimeout(() => {
        isJsonRpcResult(s5) ? this.events.emit(xi("pairing_ping", n7), {}) : isJsonRpcError(s5) && this.events.emit(xi("pairing_ping", n7), { error: s5.error });
      }, 500);
    }), p5(this, "onPairingDeleteRequest", async (i6, s5) => {
      const { id: n7 } = s5;
      try {
        this.isValidDisconnect({ topic: i6 }), await this.deletePairing(i6), this.events.emit(se2.delete, { id: n7, topic: i6 });
      } catch (o6) {
        await this.sendError(n7, i6, o6), this.logger.error(o6);
      }
    }), p5(this, "onUnknownRpcMethodRequest", async (i6, s5) => {
      const { id: n7, method: o6 } = s5;
      try {
        if (this.registeredMethods.includes(o6)) return;
        const a5 = Nt2("WC_METHOD_UNSUPPORTED", o6);
        await this.sendError(n7, i6, a5), this.logger.error(a5);
      } catch (a5) {
        await this.sendError(n7, i6, a5), this.logger.error(a5);
      }
    }), p5(this, "onUnknownRpcMethodResponse", (i6) => {
      this.registeredMethods.includes(i6) || this.logger.error(Nt2("WC_METHOD_UNSUPPORTED", i6));
    }), p5(this, "isValidPair", (i6, s5) => {
      var n7;
      if (!ya(i6)) {
        const { message: a5 } = ht2("MISSING_OR_INVALID", `pair() params: ${i6}`);
        throw s5.setError(Y3.malformed_pairing_uri), new Error(a5);
      }
      if (!ua(i6.uri)) {
        const { message: a5 } = ht2("MISSING_OR_INVALID", `pair() uri: ${i6.uri}`);
        throw s5.setError(Y3.malformed_pairing_uri), new Error(a5);
      }
      const o6 = Gc(i6 == null ? void 0 : i6.uri);
      if (!((n7 = o6 == null ? void 0 : o6.relay) != null && n7.protocol)) {
        const { message: a5 } = ht2("MISSING_OR_INVALID", "pair() uri#relay-protocol");
        throw s5.setError(Y3.malformed_pairing_uri), new Error(a5);
      }
      if (!(o6 != null && o6.symKey)) {
        const { message: a5 } = ht2("MISSING_OR_INVALID", "pair() uri#symKey");
        throw s5.setError(Y3.malformed_pairing_uri), new Error(a5);
      }
      if (o6 != null && o6.expiryTimestamp && (0, import_time4.toMiliseconds)(o6 == null ? void 0 : o6.expiryTimestamp) < Date.now()) {
        s5.setError(Y3.pairing_expired);
        const { message: a5 } = ht2("EXPIRED", "pair() URI has expired. Please try again with a new connection URI.");
        throw new Error(a5);
      }
    }), p5(this, "isValidPing", async (i6) => {
      if (!ya(i6)) {
        const { message: n7 } = ht2("MISSING_OR_INVALID", `ping() params: ${i6}`);
        throw new Error(n7);
      }
      const { topic: s5 } = i6;
      await this.isValidPairingTopic(s5);
    }), p5(this, "isValidDisconnect", async (i6) => {
      if (!ya(i6)) {
        const { message: n7 } = ht2("MISSING_OR_INVALID", `disconnect() params: ${i6}`);
        throw new Error(n7);
      }
      const { topic: s5 } = i6;
      await this.isValidPairingTopic(s5);
    }), p5(this, "isValidPairingTopic", async (i6) => {
      if (!nt2(i6, false)) {
        const { message: s5 } = ht2("MISSING_OR_INVALID", `pairing topic should be a string: ${i6}`);
        throw new Error(s5);
      }
      if (!this.pairings.keys.includes(i6)) {
        const { message: s5 } = ht2("NO_MATCHING_KEY", `pairing topic doesn't exist: ${i6}`);
        throw new Error(s5);
      }
      if (vi(this.pairings.get(i6).expiry)) {
        await this.deletePairing(i6);
        const { message: s5 } = ht2("EXPIRED", `pairing topic: ${i6}`);
        throw new Error(s5);
      }
    }), this.core = e4, this.logger = E5(t3, this.name), this.pairings = new zi2(this.core, this.logger, this.name, this.storagePrefix);
  }
  get context() {
    return y4(this.logger);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = ht2("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
  registerRelayerEvents() {
    this.core.relayer.on(C5.message, async (e4) => {
      const { topic: t3, message: i6, transportType: s5 } = e4;
      if (this.pairings.keys.includes(t3) && s5 !== Q3.link_mode && !this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i6))) try {
        const n7 = await this.core.crypto.decode(t3, i6);
        isJsonRpcRequest(n7) ? (this.core.history.set(t3, n7), await this.onRelayEventRequest({ topic: t3, payload: n7 })) : isJsonRpcResponse(n7) && (await this.core.history.resolve(n7), await this.onRelayEventResponse({ topic: t3, payload: n7 }), this.core.history.delete(t3, n7.id)), await this.core.relayer.messages.ack(t3, i6);
      } catch (n7) {
        this.logger.error(n7);
      }
    });
  }
  registerExpirerEvents() {
    this.core.expirer.on(M5.expired, async (e4) => {
      const { topic: t3 } = bi(e4.target);
      t3 && this.pairings.keys.includes(t3) && (await this.deletePairing(t3, true), this.events.emit(se2.expire, { topic: t3 }));
    });
  }
};
var Lo3 = Object.defineProperty;
var ko2 = (r5, e4, t3) => e4 in r5 ? Lo3(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var R3 = (r5, e4, t3) => ko2(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var ki2 = class extends I4 {
  constructor(e4, t3) {
    super(e4, t3), this.core = e4, this.logger = t3, R3(this, "records", /* @__PURE__ */ new Map()), R3(this, "events", new import_events7.EventEmitter()), R3(this, "name", Bt3), R3(this, "version", Vt3), R3(this, "cached", []), R3(this, "initialized", false), R3(this, "storagePrefix", B3), R3(this, "init", async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i6) => this.records.set(i6.id, i6)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }), R3(this, "set", (i6, s5, n7) => {
      if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({ type: "method", method: "set", topic: i6, request: s5, chainId: n7 }), this.records.has(s5.id)) return;
      const o6 = { id: s5.id, topic: i6, request: { method: s5.method, params: s5.params || null }, chainId: n7, expiry: Ei(import_time4.THIRTY_DAYS) };
      this.records.set(o6.id, o6), this.persist(), this.events.emit(F4.created, o6);
    }), R3(this, "resolve", async (i6) => {
      if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({ type: "method", method: "update", response: i6 }), !this.records.has(i6.id)) return;
      const s5 = await this.getRecord(i6.id);
      typeof s5.response > "u" && (s5.response = isJsonRpcError(i6) ? { error: i6.error } : { result: i6.result }, this.records.set(s5.id, s5), this.persist(), this.events.emit(F4.updated, s5));
    }), R3(this, "get", async (i6, s5) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({ type: "method", method: "get", topic: i6, id: s5 }), await this.getRecord(s5))), R3(this, "delete", (i6, s5) => {
      this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({ type: "method", method: "delete", id: s5 }), this.values.forEach((n7) => {
        if (n7.topic === i6) {
          if (typeof s5 < "u" && n7.id !== s5) return;
          this.records.delete(n7.id), this.events.emit(F4.deleted, n7);
        }
      }), this.persist();
    }), R3(this, "exists", async (i6, s5) => (this.isInitialized(), this.records.has(s5) ? (await this.getRecord(s5)).topic === i6 : false)), R3(this, "on", (i6, s5) => {
      this.events.on(i6, s5);
    }), R3(this, "once", (i6, s5) => {
      this.events.once(i6, s5);
    }), R3(this, "off", (i6, s5) => {
      this.events.off(i6, s5);
    }), R3(this, "removeListener", (i6, s5) => {
      this.events.removeListener(i6, s5);
    }), this.logger = E5(t3, this.name);
  }
  get context() {
    return y4(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get size() {
    return this.records.size;
  }
  get keys() {
    return Array.from(this.records.keys());
  }
  get values() {
    return Array.from(this.records.values());
  }
  get pending() {
    const e4 = [];
    return this.values.forEach((t3) => {
      if (typeof t3.response < "u") return;
      const i6 = { topic: t3.topic, request: formatJsonRpcRequest(t3.request.method, t3.request.params, t3.id), chainId: t3.chainId };
      return e4.push(i6);
    }), e4;
  }
  async setJsonRpcRecords(e4) {
    await this.core.storage.setItem(this.storageKey, e4);
  }
  async getJsonRpcRecords() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getRecord(e4) {
    this.isInitialized();
    const t3 = this.records.get(e4);
    if (!t3) {
      const { message: i6 } = ht2("NO_MATCHING_KEY", `${this.name}: ${e4}`);
      throw new Error(i6);
    }
    return t3;
  }
  async persist() {
    await this.setJsonRpcRecords(this.values), this.events.emit(F4.sync);
  }
  async restore() {
    try {
      const e4 = await this.getJsonRpcRecords();
      if (typeof e4 > "u" || !e4.length) return;
      if (this.records.size) {
        const { message: t3 } = ht2("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t3), new Error(t3);
      }
      this.cached = e4, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", records: this.values });
    } catch (e4) {
      this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e4);
    }
  }
  registerEventListeners() {
    this.events.on(F4.created, (e4) => {
      const t3 = F4.created;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, record: e4 });
    }), this.events.on(F4.updated, (e4) => {
      const t3 = F4.updated;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, record: e4 });
    }), this.events.on(F4.deleted, (e4) => {
      const t3 = F4.deleted;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, record: e4 });
    }), this.core.heartbeat.on(r3.pulse, () => {
      this.cleanup();
    });
  }
  cleanup() {
    try {
      this.isInitialized();
      let e4 = false;
      this.records.forEach((t3) => {
        (0, import_time4.toMiliseconds)(t3.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${t3.id}`), this.records.delete(t3.id), this.events.emit(F4.deleted, t3, false), e4 = true);
      }), e4 && this.persist();
    } catch (e4) {
      this.logger.warn(e4);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = ht2("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
};
var jo2 = Object.defineProperty;
var Uo3 = (r5, e4, t3) => e4 in r5 ? jo2(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var A5 = (r5, e4, t3) => Uo3(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var ji2 = class extends S3 {
  constructor(e4, t3) {
    super(e4, t3), this.core = e4, this.logger = t3, A5(this, "expirations", /* @__PURE__ */ new Map()), A5(this, "events", new import_events7.EventEmitter()), A5(this, "name", qt3), A5(this, "version", Gt3), A5(this, "cached", []), A5(this, "initialized", false), A5(this, "storagePrefix", B3), A5(this, "init", async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i6) => this.expirations.set(i6.target, i6)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }), A5(this, "has", (i6) => {
      try {
        const s5 = this.formatTarget(i6);
        return typeof this.getExpiration(s5) < "u";
      } catch {
        return false;
      }
    }), A5(this, "set", (i6, s5) => {
      this.isInitialized();
      const n7 = this.formatTarget(i6), o6 = { target: n7, expiry: s5 };
      this.expirations.set(n7, o6), this.checkExpiry(n7, o6), this.events.emit(M5.created, { target: n7, expiration: o6 });
    }), A5(this, "get", (i6) => {
      this.isInitialized();
      const s5 = this.formatTarget(i6);
      return this.getExpiration(s5);
    }), A5(this, "del", (i6) => {
      if (this.isInitialized(), this.has(i6)) {
        const s5 = this.formatTarget(i6), n7 = this.getExpiration(s5);
        this.expirations.delete(s5), this.events.emit(M5.deleted, { target: s5, expiration: n7 });
      }
    }), A5(this, "on", (i6, s5) => {
      this.events.on(i6, s5);
    }), A5(this, "once", (i6, s5) => {
      this.events.once(i6, s5);
    }), A5(this, "off", (i6, s5) => {
      this.events.off(i6, s5);
    }), A5(this, "removeListener", (i6, s5) => {
      this.events.removeListener(i6, s5);
    }), this.logger = E5(t3, this.name);
  }
  get context() {
    return y4(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.expirations.size;
  }
  get keys() {
    return Array.from(this.expirations.keys());
  }
  get values() {
    return Array.from(this.expirations.values());
  }
  formatTarget(e4) {
    if (typeof e4 == "string") return mi(e4);
    if (typeof e4 == "number") return wi(e4);
    const { message: t3 } = ht2("UNKNOWN_TYPE", `Target type: ${typeof e4}`);
    throw new Error(t3);
  }
  async setExpirations(e4) {
    await this.core.storage.setItem(this.storageKey, e4);
  }
  async getExpirations() {
    return await this.core.storage.getItem(this.storageKey);
  }
  async persist() {
    await this.setExpirations(this.values), this.events.emit(M5.sync);
  }
  async restore() {
    try {
      const e4 = await this.getExpirations();
      if (typeof e4 > "u" || !e4.length) return;
      if (this.expirations.size) {
        const { message: t3 } = ht2("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t3), new Error(t3);
      }
      this.cached = e4, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({ type: "method", method: "restore", expirations: this.values });
    } catch (e4) {
      this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e4);
    }
  }
  getExpiration(e4) {
    const t3 = this.expirations.get(e4);
    if (!t3) {
      const { message: i6 } = ht2("NO_MATCHING_KEY", `${this.name}: ${e4}`);
      throw this.logger.warn(i6), new Error(i6);
    }
    return t3;
  }
  checkExpiry(e4, t3) {
    const { expiry: i6 } = t3;
    (0, import_time4.toMiliseconds)(i6) - Date.now() <= 0 && this.expire(e4, t3);
  }
  expire(e4, t3) {
    this.expirations.delete(e4), this.events.emit(M5.expired, { target: e4, expiration: t3 });
  }
  checkExpirations() {
    this.core.relayer.connected && this.expirations.forEach((e4, t3) => this.checkExpiry(t3, e4));
  }
  registerEventListeners() {
    this.core.heartbeat.on(r3.pulse, () => this.checkExpirations()), this.events.on(M5.created, (e4) => {
      const t3 = M5.created;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, data: e4 }), this.persist();
    }), this.events.on(M5.expired, (e4) => {
      const t3 = M5.expired;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, data: e4 }), this.persist();
    }), this.events.on(M5.deleted, (e4) => {
      const t3 = M5.deleted;
      this.logger.info(`Emitting ${t3}`), this.logger.debug({ type: "event", event: t3, data: e4 }), this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e4 } = ht2("NOT_INITIALIZED", this.name);
      throw new Error(e4);
    }
  }
};
var Fo2 = Object.defineProperty;
var Mo2 = (r5, e4, t3) => e4 in r5 ? Fo2(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var w6 = (r5, e4, t3) => Mo2(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var Ui2 = class extends M3 {
  constructor(e4, t3, i6) {
    super(e4, t3, i6), this.core = e4, this.logger = t3, this.store = i6, w6(this, "name", Wt3), w6(this, "abortController"), w6(this, "isDevEnv"), w6(this, "verifyUrlV3", Yt3), w6(this, "storagePrefix", B3), w6(this, "version", Le3), w6(this, "publicKey"), w6(this, "fetchPromise"), w6(this, "init", async () => {
      var s5;
      this.isDevEnv || (this.publicKey = await this.store.getItem(this.storeKey), this.publicKey && (0, import_time4.toMiliseconds)((s5 = this.publicKey) == null ? void 0 : s5.expiresAt) < Date.now() && (this.logger.debug("verify v2 public key expired"), await this.removePublicKey()));
    }), w6(this, "register", async (s5) => {
      if (!Yt2() || this.isDevEnv) return;
      const n7 = window.location.origin, { id: o6, decryptedId: a5 } = s5, c8 = `${this.verifyUrlV3}/attestation?projectId=${this.core.projectId}&origin=${n7}&id=${o6}&decryptedId=${a5}`;
      try {
        const h7 = (0, import_window_getters2.getDocument)(), l9 = this.startAbortTimer(import_time4.ONE_SECOND * 5), d6 = await new Promise((g5, _6) => {
          const u4 = () => {
            window.removeEventListener("message", x6), h7.body.removeChild(b6), _6("attestation aborted");
          };
          this.abortController.signal.addEventListener("abort", u4);
          const b6 = h7.createElement("iframe");
          b6.src = c8, b6.style.display = "none", b6.addEventListener("error", u4, { signal: this.abortController.signal });
          const x6 = (I5) => {
            if (I5.data && typeof I5.data == "string") try {
              const D4 = JSON.parse(I5.data);
              if (D4.type === "verify_attestation") {
                if (sn(D4.attestation).payload.id !== o6) return;
                clearInterval(l9), h7.body.removeChild(b6), this.abortController.signal.removeEventListener("abort", u4), window.removeEventListener("message", x6), g5(D4.attestation === null ? "" : D4.attestation);
              }
            } catch (D4) {
              this.logger.warn(D4);
            }
          };
          h7.body.appendChild(b6), window.addEventListener("message", x6, { signal: this.abortController.signal });
        });
        return this.logger.debug("jwt attestation", d6), d6;
      } catch (h7) {
        this.logger.warn(h7);
      }
      return "";
    }), w6(this, "resolve", async (s5) => {
      if (this.isDevEnv) return "";
      const { attestationId: n7, hash: o6, encryptedId: a5 } = s5;
      if (n7 === "") {
        this.logger.debug("resolve: attestationId is empty, skipping");
        return;
      }
      if (n7) {
        if (sn(n7).payload.id !== a5) return;
        const h7 = await this.isValidJwtAttestation(n7);
        if (h7) {
          if (!h7.isVerified) {
            this.logger.warn("resolve: jwt attestation: origin url not verified");
            return;
          }
          return h7;
        }
      }
      if (!o6) return;
      const c8 = this.getVerifyUrl(s5 == null ? void 0 : s5.verifyUrl);
      return this.fetchAttestation(o6, c8);
    }), w6(this, "fetchAttestation", async (s5, n7) => {
      this.logger.debug(`resolving attestation: ${s5} from url: ${n7}`);
      const o6 = this.startAbortTimer(import_time4.ONE_SECOND * 5), a5 = await fetch(`${n7}/attestation/${s5}?v2Supported=true`, { signal: this.abortController.signal });
      return clearTimeout(o6), a5.status === 200 ? await a5.json() : void 0;
    }), w6(this, "getVerifyUrl", (s5) => {
      let n7 = s5 || ue2;
      return Jt3.includes(n7) || (this.logger.info(`verify url: ${n7}, not included in trusted list, assigning default: ${ue2}`), n7 = ue2), n7;
    }), w6(this, "fetchPublicKey", async () => {
      try {
        this.logger.debug(`fetching public key from: ${this.verifyUrlV3}`);
        const s5 = this.startAbortTimer(import_time4.FIVE_SECONDS), n7 = await fetch(`${this.verifyUrlV3}/public-key`, { signal: this.abortController.signal });
        return clearTimeout(s5), await n7.json();
      } catch (s5) {
        this.logger.warn(s5);
      }
    }), w6(this, "persistPublicKey", async (s5) => {
      this.logger.debug("persisting public key to local storage", s5), await this.store.setItem(this.storeKey, s5), this.publicKey = s5;
    }), w6(this, "removePublicKey", async () => {
      this.logger.debug("removing verify v2 public key from storage"), await this.store.removeItem(this.storeKey), this.publicKey = void 0;
    }), w6(this, "isValidJwtAttestation", async (s5) => {
      const n7 = await this.getPublicKey();
      try {
        if (n7) return this.validateAttestation(s5, n7);
      } catch (a5) {
        this.logger.error(a5), this.logger.warn("error validating attestation");
      }
      const o6 = await this.fetchAndPersistPublicKey();
      try {
        if (o6) return this.validateAttestation(s5, o6);
      } catch (a5) {
        this.logger.error(a5), this.logger.warn("error validating attestation");
      }
    }), w6(this, "getPublicKey", async () => this.publicKey ? this.publicKey : await this.fetchAndPersistPublicKey()), w6(this, "fetchAndPersistPublicKey", async () => {
      if (this.fetchPromise) return await this.fetchPromise, this.publicKey;
      this.fetchPromise = new Promise(async (n7) => {
        const o6 = await this.fetchPublicKey();
        o6 && (await this.persistPublicKey(o6), n7(o6));
      });
      const s5 = await this.fetchPromise;
      return this.fetchPromise = void 0, s5;
    }), w6(this, "validateAttestation", (s5, n7) => {
      const o6 = zc(s5, n7.publicKey), a5 = { hasExpired: (0, import_time4.toMiliseconds)(o6.exp) < Date.now(), payload: o6 };
      if (a5.hasExpired) throw this.logger.warn("resolve: jwt attestation expired"), new Error("JWT attestation expired");
      return { origin: a5.payload.origin, isScam: a5.payload.isScam, isVerified: a5.payload.isVerified };
    }), this.logger = E5(t3, this.name), this.abortController = new AbortController(), this.isDevEnv = Ii(), this.init();
  }
  get storeKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//verify:public:key";
  }
  get context() {
    return y4(this.logger);
  }
  startAbortTimer(e4) {
    return this.abortController = new AbortController(), setTimeout(() => this.abortController.abort(), (0, import_time4.toMiliseconds)(e4));
  }
};
var Ko2 = Object.defineProperty;
var Bo3 = (r5, e4, t3) => e4 in r5 ? Ko2(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var Fi2 = (r5, e4, t3) => Bo3(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var Mi2 = class extends O4 {
  constructor(e4, t3) {
    super(e4, t3), this.projectId = e4, this.logger = t3, Fi2(this, "context", Xt3), Fi2(this, "registerDeviceToken", async (i6) => {
      const { clientId: s5, token: n7, notificationType: o6, enableEncrypted: a5 = false } = i6, c8 = `${Zt2}/${this.projectId}/clients`;
      await fetch(c8, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ client_id: s5, type: o6, token: n7, always_raw: a5 }) });
    }), this.logger = E5(t3, this.context);
  }
};
var Vo2 = Object.defineProperty;
var Ki2 = Object.getOwnPropertySymbols;
var qo2 = Object.prototype.hasOwnProperty;
var Go3 = Object.prototype.propertyIsEnumerable;
var Ze3 = (r5, e4, t3) => e4 in r5 ? Vo2(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var be3 = (r5, e4) => {
  for (var t3 in e4 || (e4 = {})) qo2.call(e4, t3) && Ze3(r5, t3, e4[t3]);
  if (Ki2) for (var t3 of Ki2(e4)) Go3.call(e4, t3) && Ze3(r5, t3, e4[t3]);
  return r5;
};
var E6 = (r5, e4, t3) => Ze3(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var Bi2 = class extends R2 {
  constructor(e4, t3, i6 = true) {
    super(e4, t3, i6), this.core = e4, this.logger = t3, E6(this, "context", ei2), E6(this, "storagePrefix", B3), E6(this, "storageVersion", Qt3), E6(this, "events", /* @__PURE__ */ new Map()), E6(this, "shouldPersist", false), E6(this, "init", async () => {
      if (!Ii()) try {
        const s5 = { eventId: Bi(), timestamp: Date.now(), domain: this.getAppDomain(), props: { event: "INIT", type: "", properties: { client_id: await this.core.crypto.getClientId(), user_agent: Mn2(this.core.relayer.protocol, this.core.relayer.version, _e3) } } };
        await this.sendEvent([s5]);
      } catch (s5) {
        this.logger.warn(s5);
      }
    }), E6(this, "createEvent", (s5) => {
      const { event: n7 = "ERROR", type: o6 = "", properties: { topic: a5, trace: c8 } } = s5, h7 = Bi(), l9 = this.core.projectId || "", d6 = Date.now(), g5 = be3({ eventId: h7, timestamp: d6, props: { event: n7, type: o6, properties: { topic: a5, trace: c8 } }, bundleId: l9, domain: this.getAppDomain() }, this.setMethods(h7));
      return this.telemetryEnabled && (this.events.set(h7, g5), this.shouldPersist = true), g5;
    }), E6(this, "getEvent", (s5) => {
      const { eventId: n7, topic: o6 } = s5;
      if (n7) return this.events.get(n7);
      const a5 = Array.from(this.events.values()).find((c8) => c8.props.properties.topic === o6);
      if (a5) return be3(be3({}, a5), this.setMethods(a5.eventId));
    }), E6(this, "deleteEvent", (s5) => {
      const { eventId: n7 } = s5;
      this.events.delete(n7), this.shouldPersist = true;
    }), E6(this, "setEventListeners", () => {
      this.core.heartbeat.on(r3.pulse, async () => {
        this.shouldPersist && await this.persist(), this.events.forEach((s5) => {
          (0, import_time4.fromMiliseconds)(Date.now()) - (0, import_time4.fromMiliseconds)(s5.timestamp) > ti && (this.events.delete(s5.eventId), this.shouldPersist = true);
        });
      });
    }), E6(this, "setMethods", (s5) => ({ addTrace: (n7) => this.addTrace(s5, n7), setError: (n7) => this.setError(s5, n7) })), E6(this, "addTrace", (s5, n7) => {
      const o6 = this.events.get(s5);
      o6 && (o6.props.properties.trace.push(n7), this.events.set(s5, o6), this.shouldPersist = true);
    }), E6(this, "setError", (s5, n7) => {
      const o6 = this.events.get(s5);
      o6 && (o6.props.type = n7, o6.timestamp = Date.now(), this.events.set(s5, o6), this.shouldPersist = true);
    }), E6(this, "persist", async () => {
      await this.core.storage.setItem(this.storageKey, Array.from(this.events.values())), this.shouldPersist = false;
    }), E6(this, "restore", async () => {
      try {
        const s5 = await this.core.storage.getItem(this.storageKey) || [];
        if (!s5.length) return;
        s5.forEach((n7) => {
          this.events.set(n7.eventId, be3(be3({}, n7), this.setMethods(n7.eventId)));
        });
      } catch (s5) {
        this.logger.warn(s5);
      }
    }), E6(this, "submit", async () => {
      if (!this.telemetryEnabled || this.events.size === 0) return;
      const s5 = [];
      for (const [n7, o6] of this.events) o6.props.type && s5.push(o6);
      if (s5.length !== 0) try {
        if ((await this.sendEvent(s5)).ok) for (const n7 of s5) this.events.delete(n7.eventId), this.shouldPersist = true;
      } catch (n7) {
        this.logger.warn(n7);
      }
    }), E6(this, "sendEvent", async (s5) => {
      const n7 = this.getAppDomain() ? "" : "&sp=desktop";
      return await fetch(`${ii}?projectId=${this.core.projectId}&st=events_sdk&sv=js-${_e3}${n7}`, { method: "POST", body: JSON.stringify(s5) });
    }), E6(this, "getAppDomain", () => Pn2().url), this.logger = E5(t3, this.context), this.telemetryEnabled = i6, i6 ? this.restore().then(async () => {
      await this.submit(), this.setEventListeners();
    }) : this.persist();
  }
  get storageKey() {
    return this.storagePrefix + this.storageVersion + this.core.customStoragePrefix + "//" + this.context;
  }
};
var Wo3 = Object.defineProperty;
var Vi2 = Object.getOwnPropertySymbols;
var Ho2 = Object.prototype.hasOwnProperty;
var Yo3 = Object.prototype.propertyIsEnumerable;
var Qe3 = (r5, e4, t3) => e4 in r5 ? Wo3(r5, e4, { enumerable: true, configurable: true, writable: true, value: t3 }) : r5[e4] = t3;
var qi2 = (r5, e4) => {
  for (var t3 in e4 || (e4 = {})) Ho2.call(e4, t3) && Qe3(r5, t3, e4[t3]);
  if (Vi2) for (var t3 of Vi2(e4)) Yo3.call(e4, t3) && Qe3(r5, t3, e4[t3]);
  return r5;
};
var v6 = (r5, e4, t3) => Qe3(r5, typeof e4 != "symbol" ? e4 + "" : e4, t3);
var Te2 = class _Te extends h5 {
  constructor(e4) {
    var t3;
    super(e4), v6(this, "protocol", ze3), v6(this, "version", Le3), v6(this, "name", he3), v6(this, "relayUrl"), v6(this, "projectId"), v6(this, "customStoragePrefix"), v6(this, "events", new import_events7.EventEmitter()), v6(this, "logger"), v6(this, "heartbeat"), v6(this, "relayer"), v6(this, "crypto"), v6(this, "storage"), v6(this, "history"), v6(this, "expirer"), v6(this, "pairing"), v6(this, "verify"), v6(this, "echoClient"), v6(this, "linkModeSupportedApps"), v6(this, "eventClient"), v6(this, "initialized", false), v6(this, "logChunkController"), v6(this, "on", (a5, c8) => this.events.on(a5, c8)), v6(this, "once", (a5, c8) => this.events.once(a5, c8)), v6(this, "off", (a5, c8) => this.events.off(a5, c8)), v6(this, "removeListener", (a5, c8) => this.events.removeListener(a5, c8)), v6(this, "dispatchEnvelope", ({ topic: a5, message: c8, sessionExists: h7 }) => {
      if (!a5 || !c8) return;
      const l9 = { topic: a5, message: c8, publishedAt: Date.now(), transportType: Q3.link_mode };
      this.relayer.onLinkMessageEvent(l9, { sessionExists: h7 });
    });
    const i6 = this.getGlobalCore(e4 == null ? void 0 : e4.customStoragePrefix);
    if (i6) try {
      return this.customStoragePrefix = i6.customStoragePrefix, this.logger = i6.logger, this.heartbeat = i6.heartbeat, this.crypto = i6.crypto, this.history = i6.history, this.expirer = i6.expirer, this.storage = i6.storage, this.relayer = i6.relayer, this.pairing = i6.pairing, this.verify = i6.verify, this.echoClient = i6.echoClient, this.linkModeSupportedApps = i6.linkModeSupportedApps, this.eventClient = i6.eventClient, this.initialized = i6.initialized, this.logChunkController = i6.logChunkController, i6;
    } catch (a5) {
      console.warn("Failed to copy global core", a5);
    }
    this.projectId = e4 == null ? void 0 : e4.projectId, this.relayUrl = (e4 == null ? void 0 : e4.relayUrl) || Ue2, this.customStoragePrefix = e4 != null && e4.customStoragePrefix ? `:${e4.customStoragePrefix}` : "";
    const s5 = k4({ level: typeof (e4 == null ? void 0 : e4.logger) == "string" && e4.logger ? e4.logger : Et3.logger, name: he3 }), { logger: n7, chunkLoggerController: o6 } = A4({ opts: s5, maxSizeInBytes: e4 == null ? void 0 : e4.maxLogBlobSizeInBytes, loggerOverride: e4 == null ? void 0 : e4.logger });
    this.logChunkController = o6, (t3 = this.logChunkController) != null && t3.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async () => {
      var a5, c8;
      (a5 = this.logChunkController) != null && a5.downloadLogsBlobInBrowser && ((c8 = this.logChunkController) == null || c8.downloadLogsBlobInBrowser({ clientId: await this.crypto.getClientId() }));
    }), this.logger = E5(n7, this.name), this.heartbeat = new i3(), this.crypto = new vi2(this, this.logger, e4 == null ? void 0 : e4.keychain), this.history = new ki2(this, this.logger), this.expirer = new ji2(this, this.logger), this.storage = e4 != null && e4.storage ? e4.storage : new h3(qi2(qi2({}, It3), e4 == null ? void 0 : e4.storageOptions)), this.relayer = new Si2({ core: this, logger: this.logger, relayUrl: this.relayUrl, projectId: this.projectId }), this.pairing = new Li2(this, this.logger), this.verify = new Ui2(this, this.logger, this.storage), this.echoClient = new Mi2(this.projectId || "", this.logger), this.linkModeSupportedApps = [], this.eventClient = new Bi2(this, this.logger, e4 == null ? void 0 : e4.telemetryEnabled), this.setGlobalCore(this);
  }
  static async init(e4) {
    const t3 = new _Te(e4);
    await t3.initialize();
    const i6 = await t3.crypto.getClientId();
    return await t3.storage.setItem(jt3, i6), t3;
  }
  get context() {
    return y4(this.logger);
  }
  async start() {
    this.initialized || await this.initialize();
  }
  async getLogsBlob() {
    var e4;
    return (e4 = this.logChunkController) == null ? void 0 : e4.logsToBlob({ clientId: await this.crypto.getClientId() });
  }
  async addLinkModeSupportedApp(e4) {
    this.linkModeSupportedApps.includes(e4) || (this.linkModeSupportedApps.push(e4), await this.storage.setItem(Fe2, this.linkModeSupportedApps));
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.linkModeSupportedApps = await this.storage.getItem(Fe2) || [], this.initialized = true, this.logger.info("Core Initialization Success");
    } catch (e4) {
      throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e4), this.logger.error(e4.message), e4;
    }
  }
  getGlobalCore(e4 = "") {
    try {
      if (this.isGlobalCoreDisabled()) return;
      const t3 = `_walletConnectCore_${e4}`, i6 = `${t3}_count`;
      return globalThis[i6] = (globalThis[i6] || 0) + 1, globalThis[i6] > 1 && console.warn(`WalletConnect Core is already initialized. This is probably a mistake and can lead to unexpected behavior. Init() was called ${globalThis[i6]} times.`), globalThis[t3];
    } catch (t3) {
      console.warn("Failed to get global WalletConnect core", t3);
      return;
    }
  }
  setGlobalCore(e4) {
    var t3;
    try {
      if (this.isGlobalCoreDisabled()) return;
      const i6 = `_walletConnectCore_${((t3 = e4.opts) == null ? void 0 : t3.customStoragePrefix) || ""}`;
      globalThis[i6] = e4;
    } catch (i6) {
      console.warn("Failed to set global WalletConnect core", i6);
    }
  }
  isGlobalCoreDisabled() {
    try {
      return typeof process < "u" && process.env.DISABLE_GLOBAL_CORE === "true";
    } catch {
      return true;
    }
  }
};
var Jo3 = Te2;

// node_modules/@walletconnect/sign-client/node_modules/@walletconnect/types/dist/index.es.js
var import_dist994 = __toESM(require_dist());
var import_dist995 = __toESM(require_dist2());
var import_dist996 = __toESM(require_dist3());
var import_events9 = __toESM(require_events());
var T5 = Object.defineProperty;
var k7 = (e4, s5, r5) => s5 in e4 ? T5(e4, s5, { enumerable: true, configurable: true, writable: true, value: r5 }) : e4[s5] = r5;
var i5 = (e4, s5, r5) => k7(e4, typeof s5 != "symbol" ? s5 + "" : s5, r5);
var J3 = class {
  constructor(s5) {
    this.opts = s5, i5(this, "protocol", "wc"), i5(this, "version", 2);
  }
};
var V4 = class {
  constructor(s5) {
    this.client = s5;
  }
};

// node_modules/@walletconnect/sign-client/dist/index.es.js
var import_time5 = __toESM(require_cjs4());
var import_events10 = __toESM(require_events());
var De3 = "wc";
var Le4 = 2;
var ke4 = "client";
var we3 = `${De3}@${Le4}:${ke4}:`;
var me3 = { name: ke4, logger: "error", controller: false, relayUrl: "wss://relay.walletconnect.org" };
var Me4 = "WALLETCONNECT_DEEPLINK_CHOICE";
var pt2 = "proposal";
var $e2 = "Proposal expired";
var ht3 = "session";
var J4 = import_time5.SEVEN_DAYS;
var dt3 = "engine";
var N10 = { wc_sessionPropose: { req: { ttl: import_time5.FIVE_MINUTES, prompt: true, tag: 1100 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1101 }, reject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1120 }, autoReject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1121 } }, wc_sessionSettle: { req: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1102 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1103 } }, wc_sessionUpdate: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1104 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1105 } }, wc_sessionExtend: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1106 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1107 } }, wc_sessionRequest: { req: { ttl: import_time5.FIVE_MINUTES, prompt: true, tag: 1108 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1109 } }, wc_sessionEvent: { req: { ttl: import_time5.FIVE_MINUTES, prompt: true, tag: 1110 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1111 } }, wc_sessionDelete: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1112 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1113 } }, wc_sessionPing: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1114 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1115 } }, wc_sessionAuthenticate: { req: { ttl: import_time5.ONE_HOUR, prompt: true, tag: 1116 }, res: { ttl: import_time5.ONE_HOUR, prompt: false, tag: 1117 }, reject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1118 }, autoReject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1119 } } };
var _e4 = { min: import_time5.FIVE_MINUTES, max: import_time5.SEVEN_DAYS };
var $4 = { idle: "IDLE", active: "ACTIVE" };
var Ue3 = { eth_sendTransaction: { key: "" }, eth_sendRawTransaction: { key: "" }, wallet_sendCalls: { key: "" }, solana_signTransaction: { key: "signature" }, solana_signAllTransactions: { key: "transactions" }, solana_signAndSendTransaction: { key: "signature" } };
var ut3 = "request";
var gt3 = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest", "wc_sessionAuthenticate"];
var yt3 = "wc";
var wt3 = "auth";
var mt2 = "authKeys";
var _t3 = "pairingTopics";
var Et4 = "requests";
var ae = `${yt3}@${1.5}:${wt3}:`;
var ce2 = `${ae}:PUB_KEY`;
var Rs2 = Object.defineProperty;
var vs2 = Object.defineProperties;
var Is2 = Object.getOwnPropertyDescriptors;
var ft3 = Object.getOwnPropertySymbols;
var Ts2 = Object.prototype.hasOwnProperty;
var qs2 = Object.prototype.propertyIsEnumerable;
var Ke4 = (S5, n7, e4) => n7 in S5 ? Rs2(S5, n7, { enumerable: true, configurable: true, writable: true, value: e4 }) : S5[n7] = e4;
var v7 = (S5, n7) => {
  for (var e4 in n7 || (n7 = {})) Ts2.call(n7, e4) && Ke4(S5, e4, n7[e4]);
  if (ft3) for (var e4 of ft3(n7)) qs2.call(n7, e4) && Ke4(S5, e4, n7[e4]);
  return S5;
};
var b5 = (S5, n7) => vs2(S5, Is2(n7));
var c7 = (S5, n7, e4) => Ke4(S5, typeof n7 != "symbol" ? n7 + "" : n7, e4);
var Ps2 = class extends V4 {
  constructor(n7) {
    super(n7), c7(this, "name", dt3), c7(this, "events", new import_events10.default()), c7(this, "initialized", false), c7(this, "requestQueue", { state: $4.idle, queue: [] }), c7(this, "sessionRequestQueue", { state: $4.idle, queue: [] }), c7(this, "requestQueueDelay", import_time5.ONE_SECOND), c7(this, "expectedPairingMethodMap", /* @__PURE__ */ new Map()), c7(this, "recentlyDeletedMap", /* @__PURE__ */ new Map()), c7(this, "recentlyDeletedLimit", 200), c7(this, "relayMessageCache", []), c7(this, "pendingSessions", /* @__PURE__ */ new Map()), c7(this, "init", async () => {
      this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), await this.registerLinkModeListeners(), this.client.core.pairing.register({ methods: Object.keys(N10) }), this.initialized = true, setTimeout(async () => {
        await this.processPendingMessageEvents(), this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();
      }, (0, import_time5.toMiliseconds)(this.requestQueueDelay)));
    }), c7(this, "connect", async (e4) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow();
      const t3 = b5(v7({}, e4), { requiredNamespaces: e4.requiredNamespaces || {}, optionalNamespaces: e4.optionalNamespaces || {} });
      await this.isValidConnect(t3);
      const { pairingTopic: s5, requiredNamespaces: i6, optionalNamespaces: r5, sessionProperties: o6, scopedProperties: a5, relays: l9 } = t3;
      let p6 = s5, h7, u4 = false;
      try {
        if (p6) {
          const T6 = this.client.core.pairing.pairings.get(p6);
          this.client.logger.warn("connect() with existing pairing topic is deprecated and will be removed in the next major release."), u4 = T6.active;
        }
      } catch (T6) {
        throw this.client.logger.error(`connect() -> pairing.get(${p6}) failed`), T6;
      }
      if (!p6 || !u4) {
        const { topic: T6, uri: U3 } = await this.client.core.pairing.create();
        p6 = T6, h7 = U3;
      }
      if (!p6) {
        const { message: T6 } = ht2("NO_MATCHING_KEY", `connect() pairing topic: ${p6}`);
        throw new Error(T6);
      }
      const d6 = await this.client.core.crypto.generateKeyPair(), w7 = N10.wc_sessionPropose.req.ttl || import_time5.FIVE_MINUTES, m5 = Ei(w7), f8 = b5(v7(v7({ requiredNamespaces: i6, optionalNamespaces: r5, relays: l9 ?? [{ protocol: xt3 }], proposer: { publicKey: d6, metadata: this.client.metadata }, expiryTimestamp: m5, pairingTopic: p6 }, o6 && { sessionProperties: o6 }), a5 && { scopedProperties: a5 }), { id: payloadId() }), _6 = xi("session_connect", f8.id), { reject: g5, resolve: A6, done: D4 } = gi(w7, $e2), I5 = ({ id: T6 }) => {
        T6 === f8.id && (this.client.events.off("proposal_expire", I5), this.pendingSessions.delete(f8.id), this.events.emit(_6, { error: { message: $e2, code: 0 } }));
      };
      return this.client.events.on("proposal_expire", I5), this.events.once(_6, ({ error: T6, session: U3 }) => {
        this.client.events.off("proposal_expire", I5), T6 ? g5(T6) : U3 && A6(U3);
      }), await this.sendRequest({ topic: p6, method: "wc_sessionPropose", params: f8, throwOnFailedPublish: true, clientRpcId: f8.id }), await this.setProposal(f8.id, f8), { uri: h7, approval: D4 };
    }), c7(this, "pair", async (e4) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow();
      try {
        return await this.client.core.pairing.pair(e4);
      } catch (t3) {
        throw this.client.logger.error("pair() failed"), t3;
      }
    }), c7(this, "approve", async (e4) => {
      var t3, s5, i6;
      const r5 = this.client.core.eventClient.createEvent({ properties: { topic: (t3 = e4 == null ? void 0 : e4.id) == null ? void 0 : t3.toString(), trace: [Qs2.session_approve_started] } });
      try {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
      } catch (q4) {
        throw r5.setError(er3.no_internet_connection), q4;
      }
      try {
        await this.isValidProposalId(e4 == null ? void 0 : e4.id);
      } catch (q4) {
        throw this.client.logger.error(`approve() -> proposal.get(${e4 == null ? void 0 : e4.id}) failed`), r5.setError(er3.proposal_not_found), q4;
      }
      try {
        await this.isValidApprove(e4);
      } catch (q4) {
        throw this.client.logger.error("approve() -> isValidApprove() failed"), r5.setError(er3.session_approve_namespace_validation_failure), q4;
      }
      const { id: o6, relayProtocol: a5, namespaces: l9, sessionProperties: p6, scopedProperties: h7, sessionConfig: u4 } = e4, d6 = this.client.proposal.get(o6);
      this.client.core.eventClient.deleteEvent({ eventId: r5.eventId });
      const { pairingTopic: w7, proposer: m5, requiredNamespaces: f8, optionalNamespaces: _6 } = d6;
      let g5 = (s5 = this.client.core.eventClient) == null ? void 0 : s5.getEvent({ topic: w7 });
      g5 || (g5 = (i6 = this.client.core.eventClient) == null ? void 0 : i6.createEvent({ type: Qs2.session_approve_started, properties: { topic: w7, trace: [Qs2.session_approve_started, Qs2.session_namespaces_validation_success] } }));
      const A6 = await this.client.core.crypto.generateKeyPair(), D4 = m5.publicKey, I5 = await this.client.core.crypto.generateSharedKey(A6, D4), T6 = v7(v7(v7({ relay: { protocol: a5 ?? "irn" }, namespaces: l9, controller: { publicKey: A6, metadata: this.client.metadata }, expiry: Ei(J4) }, p6 && { sessionProperties: p6 }), h7 && { scopedProperties: h7 }), u4 && { sessionConfig: u4 }), U3 = Q3.relay;
      g5.addTrace(Qs2.subscribing_session_topic);
      try {
        await this.client.core.relayer.subscribe(I5, { transportType: U3 });
      } catch (q4) {
        throw g5.setError(er3.subscribe_session_topic_failure), q4;
      }
      g5.addTrace(Qs2.subscribe_session_topic_success);
      const fe4 = b5(v7({}, T6), { topic: I5, requiredNamespaces: f8, optionalNamespaces: _6, pairingTopic: w7, acknowledged: false, self: T6.controller, peer: { publicKey: m5.publicKey, metadata: m5.metadata }, controller: A6, transportType: Q3.relay });
      await this.client.session.set(I5, fe4), g5.addTrace(Qs2.store_session);
      try {
        g5.addTrace(Qs2.publishing_session_settle), await this.sendRequest({ topic: I5, method: "wc_sessionSettle", params: T6, throwOnFailedPublish: true }).catch((q4) => {
          throw g5 == null ? void 0 : g5.setError(er3.session_settle_publish_failure), q4;
        }), g5.addTrace(Qs2.session_settle_publish_success), g5.addTrace(Qs2.publishing_session_approve), await this.sendResult({ id: o6, topic: w7, result: { relay: { protocol: a5 ?? "irn" }, responderPublicKey: A6 }, throwOnFailedPublish: true }).catch((q4) => {
          throw g5 == null ? void 0 : g5.setError(er3.session_approve_publish_failure), q4;
        }), g5.addTrace(Qs2.session_approve_publish_success);
      } catch (q4) {
        throw this.client.logger.error(q4), this.client.session.delete(I5, Nt2("USER_DISCONNECTED")), await this.client.core.relayer.unsubscribe(I5), q4;
      }
      return this.client.core.eventClient.deleteEvent({ eventId: g5.eventId }), await this.client.core.pairing.updateMetadata({ topic: w7, metadata: m5.metadata }), await this.client.proposal.delete(o6, Nt2("USER_DISCONNECTED")), await this.client.core.pairing.activate({ topic: w7 }), await this.setExpiry(I5, Ei(J4)), { topic: I5, acknowledged: () => Promise.resolve(this.client.session.get(I5)) };
    }), c7(this, "reject", async (e4) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow();
      try {
        await this.isValidReject(e4);
      } catch (r5) {
        throw this.client.logger.error("reject() -> isValidReject() failed"), r5;
      }
      const { id: t3, reason: s5 } = e4;
      let i6;
      try {
        i6 = this.client.proposal.get(t3).pairingTopic;
      } catch (r5) {
        throw this.client.logger.error(`reject() -> proposal.get(${t3}) failed`), r5;
      }
      i6 && (await this.sendError({ id: t3, topic: i6, error: s5, rpcOpts: N10.wc_sessionPropose.reject }), await this.client.proposal.delete(t3, Nt2("USER_DISCONNECTED")));
    }), c7(this, "update", async (e4) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow();
      try {
        await this.isValidUpdate(e4);
      } catch (h7) {
        throw this.client.logger.error("update() -> isValidUpdate() failed"), h7;
      }
      const { topic: t3, namespaces: s5 } = e4, { done: i6, resolve: r5, reject: o6 } = gi(), a5 = payloadId(), l9 = getBigIntRpcId().toString(), p6 = this.client.session.get(t3).namespaces;
      return this.events.once(xi("session_update", a5), ({ error: h7 }) => {
        h7 ? o6(h7) : r5();
      }), await this.client.session.update(t3, { namespaces: s5 }), await this.sendRequest({ topic: t3, method: "wc_sessionUpdate", params: { namespaces: s5 }, throwOnFailedPublish: true, clientRpcId: a5, relayRpcId: l9 }).catch((h7) => {
        this.client.logger.error(h7), this.client.session.update(t3, { namespaces: p6 }), o6(h7);
      }), { acknowledged: i6 };
    }), c7(this, "extend", async (e4) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow();
      try {
        await this.isValidExtend(e4);
      } catch (a5) {
        throw this.client.logger.error("extend() -> isValidExtend() failed"), a5;
      }
      const { topic: t3 } = e4, s5 = payloadId(), { done: i6, resolve: r5, reject: o6 } = gi();
      return this.events.once(xi("session_extend", s5), ({ error: a5 }) => {
        a5 ? o6(a5) : r5();
      }), await this.setExpiry(t3, Ei(J4)), this.sendRequest({ topic: t3, method: "wc_sessionExtend", params: {}, clientRpcId: s5, throwOnFailedPublish: true }).catch((a5) => {
        o6(a5);
      }), { acknowledged: i6 };
    }), c7(this, "request", async (e4) => {
      this.isInitialized();
      try {
        await this.isValidRequest(e4);
      } catch (_6) {
        throw this.client.logger.error("request() -> isValidRequest() failed"), _6;
      }
      const { chainId: t3, request: s5, topic: i6, expiry: r5 = N10.wc_sessionRequest.req.ttl } = e4, o6 = this.client.session.get(i6);
      (o6 == null ? void 0 : o6.transportType) === Q3.relay && await this.confirmOnlineStateOrThrow();
      const a5 = payloadId(), l9 = getBigIntRpcId().toString(), { done: p6, resolve: h7, reject: u4 } = gi(r5, "Request expired. Please try again.");
      this.events.once(xi("session_request", a5), ({ error: _6, result: g5 }) => {
        _6 ? u4(_6) : h7(g5);
      });
      const d6 = "wc_sessionRequest", w7 = this.getAppLinkIfEnabled(o6.peer.metadata, o6.transportType);
      if (w7) return await this.sendRequest({ clientRpcId: a5, relayRpcId: l9, topic: i6, method: d6, params: { request: b5(v7({}, s5), { expiryTimestamp: Ei(r5) }), chainId: t3 }, expiry: r5, throwOnFailedPublish: true, appLink: w7 }).catch((_6) => u4(_6)), this.client.events.emit("session_request_sent", { topic: i6, request: s5, chainId: t3, id: a5 }), await p6();
      const m5 = { request: b5(v7({}, s5), { expiryTimestamp: Ei(r5) }), chainId: t3 }, f8 = this.shouldSetTVF(d6, m5);
      return await Promise.all([new Promise(async (_6) => {
        await this.sendRequest(v7({ clientRpcId: a5, relayRpcId: l9, topic: i6, method: d6, params: m5, expiry: r5, throwOnFailedPublish: true }, f8 && { tvf: this.getTVFParams(a5, m5) })).catch((g5) => u4(g5)), this.client.events.emit("session_request_sent", { topic: i6, request: s5, chainId: t3, id: a5 }), _6();
      }), new Promise(async (_6) => {
        var g5;
        if (!((g5 = o6.sessionConfig) != null && g5.disableDeepLink)) {
          const A6 = await Oi(this.client.core.storage, Me4);
          await Si({ id: a5, topic: i6, wcDeepLink: A6 });
        }
        _6();
      }), p6()]).then((_6) => _6[2]);
    }), c7(this, "respond", async (e4) => {
      this.isInitialized(), await this.isValidRespond(e4);
      const { topic: t3, response: s5 } = e4, { id: i6 } = s5, r5 = this.client.session.get(t3);
      r5.transportType === Q3.relay && await this.confirmOnlineStateOrThrow();
      const o6 = this.getAppLinkIfEnabled(r5.peer.metadata, r5.transportType);
      isJsonRpcResult(s5) ? await this.sendResult({ id: i6, topic: t3, result: s5.result, throwOnFailedPublish: true, appLink: o6 }) : isJsonRpcError(s5) && await this.sendError({ id: i6, topic: t3, error: s5.error, appLink: o6 }), this.cleanupAfterResponse(e4);
    }), c7(this, "ping", async (e4) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow();
      try {
        await this.isValidPing(e4);
      } catch (s5) {
        throw this.client.logger.error("ping() -> isValidPing() failed"), s5;
      }
      const { topic: t3 } = e4;
      if (this.client.session.keys.includes(t3)) {
        const s5 = payloadId(), i6 = getBigIntRpcId().toString(), { done: r5, resolve: o6, reject: a5 } = gi();
        this.events.once(xi("session_ping", s5), ({ error: l9 }) => {
          l9 ? a5(l9) : o6();
        }), await Promise.all([this.sendRequest({ topic: t3, method: "wc_sessionPing", params: {}, throwOnFailedPublish: true, clientRpcId: s5, relayRpcId: i6 }), r5()]);
      } else this.client.core.pairing.pairings.keys.includes(t3) && (this.client.logger.warn("ping() on pairing topic is deprecated and will be removed in the next major release."), await this.client.core.pairing.ping({ topic: t3 }));
    }), c7(this, "emit", async (e4) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidEmit(e4);
      const { topic: t3, event: s5, chainId: i6 } = e4, r5 = getBigIntRpcId().toString(), o6 = payloadId();
      await this.sendRequest({ topic: t3, method: "wc_sessionEvent", params: { event: s5, chainId: i6 }, throwOnFailedPublish: true, relayRpcId: r5, clientRpcId: o6 });
    }), c7(this, "disconnect", async (e4) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidDisconnect(e4);
      const { topic: t3 } = e4;
      if (this.client.session.keys.includes(t3)) await this.sendRequest({ topic: t3, method: "wc_sessionDelete", params: Nt2("USER_DISCONNECTED"), throwOnFailedPublish: true }), await this.deleteSession({ topic: t3, emitEvent: false });
      else if (this.client.core.pairing.pairings.keys.includes(t3)) await this.client.core.pairing.disconnect({ topic: t3 });
      else {
        const { message: s5 } = ht2("MISMATCHED_TOPIC", `Session or pairing topic not found: ${t3}`);
        throw new Error(s5);
      }
    }), c7(this, "find", (e4) => (this.isInitialized(), this.client.session.getAll().filter((t3) => aa(t3, e4)))), c7(this, "getPendingSessionRequests", () => this.client.pendingRequest.getAll()), c7(this, "authenticate", async (e4, t3) => {
      var s5;
      this.isInitialized(), this.isValidAuthenticate(e4);
      const i6 = t3 && this.client.core.linkModeSupportedApps.includes(t3) && ((s5 = this.client.metadata.redirect) == null ? void 0 : s5.linkMode), r5 = i6 ? Q3.link_mode : Q3.relay;
      r5 === Q3.relay && await this.confirmOnlineStateOrThrow();
      const { chains: o6, statement: a5 = "", uri: l9, domain: p6, nonce: h7, type: u4, exp: d6, nbf: w7, methods: m5 = [], expiry: f8 } = e4, _6 = [...e4.resources || []], { topic: g5, uri: A6 } = await this.client.core.pairing.create({ methods: ["wc_sessionAuthenticate"], transportType: r5 });
      this.client.logger.info({ message: "Generated new pairing", pairing: { topic: g5, uri: A6 } });
      const D4 = await this.client.core.crypto.generateKeyPair(), I5 = Pc(D4);
      if (await Promise.all([this.client.auth.authKeys.set(ce2, { responseTopic: I5, publicKey: D4 }), this.client.auth.pairingTopics.set(I5, { topic: I5, pairingTopic: g5 })]), await this.client.core.relayer.subscribe(I5, { transportType: r5 }), this.client.logger.info(`sending request to new pairing topic: ${g5}`), m5.length > 0) {
        const { namespace: x6 } = Ie2(o6[0]);
        let L5 = fs(x6, "request", m5);
        de2(_6) && (L5 = ls(L5, _6.pop())), _6.push(L5);
      }
      const T6 = f8 && f8 > N10.wc_sessionAuthenticate.req.ttl ? f8 : N10.wc_sessionAuthenticate.req.ttl, U3 = { authPayload: { type: u4 ?? "caip122", chains: o6, statement: a5, aud: l9, domain: p6, version: "1", nonce: h7, iat: (/* @__PURE__ */ new Date()).toISOString(), exp: d6, nbf: w7, resources: _6 }, requester: { publicKey: D4, metadata: this.client.metadata }, expiryTimestamp: Ei(T6) }, fe4 = { eip155: { chains: o6, methods: [.../* @__PURE__ */ new Set(["personal_sign", ...m5])], events: ["chainChanged", "accountsChanged"] } }, q4 = { requiredNamespaces: {}, optionalNamespaces: fe4, relays: [{ protocol: "irn" }], pairingTopic: g5, proposer: { publicKey: D4, metadata: this.client.metadata }, expiryTimestamp: Ei(N10.wc_sessionPropose.req.ttl), id: payloadId() }, { done: Rt4, resolve: je4, reject: Se4 } = gi(T6, "Request expired"), te4 = payloadId(), le4 = xi("session_connect", q4.id), Re3 = xi("session_request", te4), pe4 = async ({ error: x6, session: L5 }) => {
        this.events.off(Re3, ve3), x6 ? Se4(x6) : L5 && je4({ session: L5 });
      }, ve3 = async (x6) => {
        var L5, Fe3, Qe4;
        if (await this.deletePendingAuthRequest(te4, { message: "fulfilled", code: 0 }), x6.error) {
          const ie3 = Nt2("WC_METHOD_UNSUPPORTED", "wc_sessionAuthenticate");
          return x6.error.code === ie3.code ? void 0 : (this.events.off(le4, pe4), Se4(x6.error.message));
        }
        await this.deleteProposal(q4.id), this.events.off(le4, pe4);
        const { cacaos: He4, responder: Q4 } = x6.result, Te3 = [], ze4 = [];
        for (const ie3 of He4) {
          await is({ cacao: ie3, projectId: this.client.core.projectId }) || (this.client.logger.error(ie3, "Signature verification failed"), Se4(Nt2("SESSION_SETTLEMENT_FAILED", "Signature verification failed")));
          const { p: qe4 } = ie3, Pe4 = de2(qe4.resources), Ye4 = [dr2(qe4.iss)], vt2 = Me2(qe4.iss);
          if (Pe4) {
            const Ne3 = ds(Pe4), It4 = hs(Pe4);
            Te3.push(...Ne3), Ye4.push(...It4);
          }
          for (const Ne3 of Ye4) ze4.push(`${Ne3}:${vt2}`);
        }
        const se3 = await this.client.core.crypto.generateSharedKey(D4, Q4.publicKey);
        let he4;
        Te3.length > 0 && (he4 = { topic: se3, acknowledged: true, self: { publicKey: D4, metadata: this.client.metadata }, peer: Q4, controller: Q4.publicKey, expiry: Ei(J4), requiredNamespaces: {}, optionalNamespaces: {}, relay: { protocol: "irn" }, pairingTopic: g5, namespaces: ca([...new Set(Te3)], [...new Set(ze4)]), transportType: r5 }, await this.client.core.relayer.subscribe(se3, { transportType: r5 }), await this.client.session.set(se3, he4), g5 && await this.client.core.pairing.updateMetadata({ topic: g5, metadata: Q4.metadata }), he4 = this.client.session.get(se3)), (L5 = this.client.metadata.redirect) != null && L5.linkMode && (Fe3 = Q4.metadata.redirect) != null && Fe3.linkMode && (Qe4 = Q4.metadata.redirect) != null && Qe4.universal && t3 && (this.client.core.addLinkModeSupportedApp(Q4.metadata.redirect.universal), this.client.session.update(se3, { transportType: Q3.link_mode })), je4({ auths: He4, session: he4 });
      };
      this.events.once(le4, pe4), this.events.once(Re3, ve3);
      let Ie4;
      try {
        if (i6) {
          const x6 = formatJsonRpcRequest("wc_sessionAuthenticate", U3, te4);
          this.client.core.history.set(g5, x6);
          const L5 = await this.client.core.crypto.encode("", x6, { type: ne, encoding: Ee2 });
          Ie4 = Xc(t3, g5, L5);
        } else await Promise.all([this.sendRequest({ topic: g5, method: "wc_sessionAuthenticate", params: U3, expiry: e4.expiry, throwOnFailedPublish: true, clientRpcId: te4 }), this.sendRequest({ topic: g5, method: "wc_sessionPropose", params: q4, expiry: N10.wc_sessionPropose.req.ttl, throwOnFailedPublish: true, clientRpcId: q4.id })]);
      } catch (x6) {
        throw this.events.off(le4, pe4), this.events.off(Re3, ve3), x6;
      }
      return await this.setProposal(q4.id, q4), await this.setAuthRequest(te4, { request: b5(v7({}, U3), { verifyContext: {} }), pairingTopic: g5, transportType: r5 }), { uri: Ie4 ?? A6, response: Rt4 };
    }), c7(this, "approveSessionAuthenticate", async (e4) => {
      const { id: t3, auths: s5 } = e4, i6 = this.client.core.eventClient.createEvent({ properties: { topic: t3.toString(), trace: [tr3.authenticated_session_approve_started] } });
      try {
        this.isInitialized();
      } catch (f8) {
        throw i6.setError(ir3.no_internet_connection), f8;
      }
      const r5 = this.getPendingAuthRequest(t3);
      if (!r5) throw i6.setError(ir3.authenticated_session_pending_request_not_found), new Error(`Could not find pending auth request with id ${t3}`);
      const o6 = r5.transportType || Q3.relay;
      o6 === Q3.relay && await this.confirmOnlineStateOrThrow();
      const a5 = r5.requester.publicKey, l9 = await this.client.core.crypto.generateKeyPair(), p6 = Pc(a5), h7 = { type: Kt2, receiverPublicKey: a5, senderPublicKey: l9 }, u4 = [], d6 = [];
      for (const f8 of s5) {
        if (!await is({ cacao: f8, projectId: this.client.core.projectId })) {
          i6.setError(ir3.invalid_cacao);
          const I5 = Nt2("SESSION_SETTLEMENT_FAILED", "Signature verification failed");
          throw await this.sendError({ id: t3, topic: p6, error: I5, encodeOpts: h7 }), new Error(I5.message);
        }
        i6.addTrace(tr3.cacaos_verified);
        const { p: _6 } = f8, g5 = de2(_6.resources), A6 = [dr2(_6.iss)], D4 = Me2(_6.iss);
        if (g5) {
          const I5 = ds(g5), T6 = hs(g5);
          u4.push(...I5), A6.push(...T6);
        }
        for (const I5 of A6) d6.push(`${I5}:${D4}`);
      }
      const w7 = await this.client.core.crypto.generateSharedKey(l9, a5);
      i6.addTrace(tr3.create_authenticated_session_topic);
      let m5;
      if ((u4 == null ? void 0 : u4.length) > 0) {
        m5 = { topic: w7, acknowledged: true, self: { publicKey: l9, metadata: this.client.metadata }, peer: { publicKey: a5, metadata: r5.requester.metadata }, controller: a5, expiry: Ei(J4), authentication: s5, requiredNamespaces: {}, optionalNamespaces: {}, relay: { protocol: "irn" }, pairingTopic: r5.pairingTopic, namespaces: ca([...new Set(u4)], [...new Set(d6)]), transportType: o6 }, i6.addTrace(tr3.subscribing_authenticated_session_topic);
        try {
          await this.client.core.relayer.subscribe(w7, { transportType: o6 });
        } catch (f8) {
          throw i6.setError(ir3.subscribe_authenticated_session_topic_failure), f8;
        }
        i6.addTrace(tr3.subscribe_authenticated_session_topic_success), await this.client.session.set(w7, m5), i6.addTrace(tr3.store_authenticated_session), await this.client.core.pairing.updateMetadata({ topic: r5.pairingTopic, metadata: r5.requester.metadata });
      }
      i6.addTrace(tr3.publishing_authenticated_session_approve);
      try {
        await this.sendResult({ topic: p6, id: t3, result: { cacaos: s5, responder: { publicKey: l9, metadata: this.client.metadata } }, encodeOpts: h7, throwOnFailedPublish: true, appLink: this.getAppLinkIfEnabled(r5.requester.metadata, o6) });
      } catch (f8) {
        throw i6.setError(ir3.authenticated_session_approve_publish_failure), f8;
      }
      return await this.client.auth.requests.delete(t3, { message: "fulfilled", code: 0 }), await this.client.core.pairing.activate({ topic: r5.pairingTopic }), this.client.core.eventClient.deleteEvent({ eventId: i6.eventId }), { session: m5 };
    }), c7(this, "rejectSessionAuthenticate", async (e4) => {
      this.isInitialized();
      const { id: t3, reason: s5 } = e4, i6 = this.getPendingAuthRequest(t3);
      if (!i6) throw new Error(`Could not find pending auth request with id ${t3}`);
      i6.transportType === Q3.relay && await this.confirmOnlineStateOrThrow();
      const r5 = i6.requester.publicKey, o6 = await this.client.core.crypto.generateKeyPair(), a5 = Pc(r5), l9 = { type: Kt2, receiverPublicKey: r5, senderPublicKey: o6 };
      await this.sendError({ id: t3, topic: a5, error: s5, encodeOpts: l9, rpcOpts: N10.wc_sessionAuthenticate.reject, appLink: this.getAppLinkIfEnabled(i6.requester.metadata, i6.transportType) }), await this.client.auth.requests.delete(t3, { message: "rejected", code: 0 }), await this.client.proposal.delete(t3, Nt2("USER_DISCONNECTED"));
    }), c7(this, "formatAuthMessage", (e4) => {
      this.isInitialized();
      const { request: t3, iss: s5 } = e4;
      return hr2(t3, s5);
    }), c7(this, "processRelayMessageCache", () => {
      setTimeout(async () => {
        if (this.relayMessageCache.length !== 0) for (; this.relayMessageCache.length > 0; ) try {
          const e4 = this.relayMessageCache.shift();
          e4 && await this.onRelayMessage(e4);
        } catch (e4) {
          this.client.logger.error(e4);
        }
      }, 50);
    }), c7(this, "cleanupDuplicatePairings", async (e4) => {
      if (e4.pairingTopic) try {
        const t3 = this.client.core.pairing.pairings.get(e4.pairingTopic), s5 = this.client.core.pairing.pairings.getAll().filter((i6) => {
          var r5, o6;
          return ((r5 = i6.peerMetadata) == null ? void 0 : r5.url) && ((o6 = i6.peerMetadata) == null ? void 0 : o6.url) === e4.peer.metadata.url && i6.topic && i6.topic !== t3.topic;
        });
        if (s5.length === 0) return;
        this.client.logger.info(`Cleaning up ${s5.length} duplicate pairing(s)`), await Promise.all(s5.map((i6) => this.client.core.pairing.disconnect({ topic: i6.topic }))), this.client.logger.info("Duplicate pairings clean up finished");
      } catch (t3) {
        this.client.logger.error(t3);
      }
    }), c7(this, "deleteSession", async (e4) => {
      var t3;
      const { topic: s5, expirerHasDeleted: i6 = false, emitEvent: r5 = true, id: o6 = 0 } = e4, { self: a5 } = this.client.session.get(s5);
      await this.client.core.relayer.unsubscribe(s5), await this.client.session.delete(s5, Nt2("USER_DISCONNECTED")), this.addToRecentlyDeleted(s5, "session"), this.client.core.crypto.keychain.has(a5.publicKey) && await this.client.core.crypto.deleteKeyPair(a5.publicKey), this.client.core.crypto.keychain.has(s5) && await this.client.core.crypto.deleteSymKey(s5), i6 || this.client.core.expirer.del(s5), this.client.core.storage.removeItem(Me4).catch((l9) => this.client.logger.warn(l9)), this.getPendingSessionRequests().forEach((l9) => {
        l9.topic === s5 && this.deletePendingSessionRequest(l9.id, Nt2("USER_DISCONNECTED"));
      }), s5 === ((t3 = this.sessionRequestQueue.queue[0]) == null ? void 0 : t3.topic) && (this.sessionRequestQueue.state = $4.idle), r5 && this.client.events.emit("session_delete", { id: o6, topic: s5 });
    }), c7(this, "deleteProposal", async (e4, t3) => {
      if (t3) try {
        const s5 = this.client.proposal.get(e4), i6 = this.client.core.eventClient.getEvent({ topic: s5.pairingTopic });
        i6 == null ? void 0 : i6.setError(er3.proposal_expired);
      } catch {
      }
      await Promise.all([this.client.proposal.delete(e4, Nt2("USER_DISCONNECTED")), t3 ? Promise.resolve() : this.client.core.expirer.del(e4)]), this.addToRecentlyDeleted(e4, "proposal");
    }), c7(this, "deletePendingSessionRequest", async (e4, t3, s5 = false) => {
      await Promise.all([this.client.pendingRequest.delete(e4, t3), s5 ? Promise.resolve() : this.client.core.expirer.del(e4)]), this.addToRecentlyDeleted(e4, "request"), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((i6) => i6.id !== e4), s5 && (this.sessionRequestQueue.state = $4.idle, this.client.events.emit("session_request_expire", { id: e4 }));
    }), c7(this, "deletePendingAuthRequest", async (e4, t3, s5 = false) => {
      await Promise.all([this.client.auth.requests.delete(e4, t3), s5 ? Promise.resolve() : this.client.core.expirer.del(e4)]);
    }), c7(this, "setExpiry", async (e4, t3) => {
      this.client.session.keys.includes(e4) && (this.client.core.expirer.set(e4, t3), await this.client.session.update(e4, { expiry: t3 }));
    }), c7(this, "setProposal", async (e4, t3) => {
      this.client.core.expirer.set(e4, Ei(N10.wc_sessionPropose.req.ttl)), await this.client.proposal.set(e4, t3);
    }), c7(this, "setAuthRequest", async (e4, t3) => {
      const { request: s5, pairingTopic: i6, transportType: r5 = Q3.relay } = t3;
      this.client.core.expirer.set(e4, s5.expiryTimestamp), await this.client.auth.requests.set(e4, { authPayload: s5.authPayload, requester: s5.requester, expiryTimestamp: s5.expiryTimestamp, id: e4, pairingTopic: i6, verifyContext: s5.verifyContext, transportType: r5 });
    }), c7(this, "setPendingSessionRequest", async (e4) => {
      const { id: t3, topic: s5, params: i6, verifyContext: r5 } = e4, o6 = i6.request.expiryTimestamp || Ei(N10.wc_sessionRequest.req.ttl);
      this.client.core.expirer.set(t3, o6), await this.client.pendingRequest.set(t3, { id: t3, topic: s5, params: i6, verifyContext: r5 });
    }), c7(this, "sendRequest", async (e4) => {
      const { topic: t3, method: s5, params: i6, expiry: r5, relayRpcId: o6, clientRpcId: a5, throwOnFailedPublish: l9, appLink: p6, tvf: h7 } = e4, u4 = formatJsonRpcRequest(s5, i6, a5);
      let d6;
      const w7 = !!p6;
      try {
        const _6 = w7 ? Ee2 : Ht2;
        d6 = await this.client.core.crypto.encode(t3, u4, { encoding: _6 });
      } catch (_6) {
        throw await this.cleanup(), this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${t3} failed`), _6;
      }
      let m5;
      if (gt3.includes(s5)) {
        const _6 = kc(JSON.stringify(u4)), g5 = kc(d6);
        m5 = await this.client.core.verify.register({ id: g5, decryptedId: _6 });
      }
      const f8 = N10[s5].req;
      if (f8.attestation = m5, r5 && (f8.ttl = r5), o6 && (f8.id = o6), this.client.core.history.set(t3, u4), w7) {
        const _6 = Xc(p6, t3, d6);
        await global.Linking.openURL(_6, this.client.name);
      } else {
        const _6 = N10[s5].req;
        r5 && (_6.ttl = r5), o6 && (_6.id = o6), _6.tvf = b5(v7({}, h7), { correlationId: u4.id }), l9 ? (_6.internal = b5(v7({}, _6.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(t3, d6, _6)) : this.client.core.relayer.publish(t3, d6, _6).catch((g5) => this.client.logger.error(g5));
      }
      return u4.id;
    }), c7(this, "sendResult", async (e4) => {
      const { id: t3, topic: s5, result: i6, throwOnFailedPublish: r5, encodeOpts: o6, appLink: a5 } = e4, l9 = formatJsonRpcResult(t3, i6);
      let p6;
      const h7 = a5 && typeof (global == null ? void 0 : global.Linking) < "u";
      try {
        const w7 = h7 ? Ee2 : Ht2;
        p6 = await this.client.core.crypto.encode(s5, l9, b5(v7({}, o6 || {}), { encoding: w7 }));
      } catch (w7) {
        throw await this.cleanup(), this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${s5} failed`), w7;
      }
      let u4, d6;
      try {
        u4 = await this.client.core.history.get(s5, t3);
        const w7 = u4.request;
        try {
          this.shouldSetTVF(w7.method, w7.params) && (d6 = this.getTVFParams(t3, w7.params, i6));
        } catch (m5) {
          this.client.logger.warn("sendResult() -> getTVFParams() failed", m5);
        }
      } catch (w7) {
        throw this.client.logger.error(`sendResult() -> history.get(${s5}, ${t3}) failed`), w7;
      }
      if (h7) {
        const w7 = Xc(a5, s5, p6);
        await global.Linking.openURL(w7, this.client.name);
      } else {
        const w7 = u4.request.method, m5 = N10[w7].res;
        m5.tvf = b5(v7({}, d6), { correlationId: t3 }), r5 ? (m5.internal = b5(v7({}, m5.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(s5, p6, m5)) : this.client.core.relayer.publish(s5, p6, m5).catch((f8) => this.client.logger.error(f8));
      }
      await this.client.core.history.resolve(l9);
    }), c7(this, "sendError", async (e4) => {
      const { id: t3, topic: s5, error: i6, encodeOpts: r5, rpcOpts: o6, appLink: a5 } = e4, l9 = formatJsonRpcError(t3, i6);
      let p6;
      const h7 = a5 && typeof (global == null ? void 0 : global.Linking) < "u";
      try {
        const d6 = h7 ? Ee2 : Ht2;
        p6 = await this.client.core.crypto.encode(s5, l9, b5(v7({}, r5 || {}), { encoding: d6 }));
      } catch (d6) {
        throw await this.cleanup(), this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${s5} failed`), d6;
      }
      let u4;
      try {
        u4 = await this.client.core.history.get(s5, t3);
      } catch (d6) {
        throw this.client.logger.error(`sendError() -> history.get(${s5}, ${t3}) failed`), d6;
      }
      if (h7) {
        const d6 = Xc(a5, s5, p6);
        await global.Linking.openURL(d6, this.client.name);
      } else {
        const d6 = u4.request.method, w7 = o6 || N10[d6].res;
        this.client.core.relayer.publish(s5, p6, w7);
      }
      await this.client.core.history.resolve(l9);
    }), c7(this, "cleanup", async () => {
      const e4 = [], t3 = [];
      this.client.session.getAll().forEach((s5) => {
        let i6 = false;
        vi(s5.expiry) && (i6 = true), this.client.core.crypto.keychain.has(s5.topic) || (i6 = true), i6 && e4.push(s5.topic);
      }), this.client.proposal.getAll().forEach((s5) => {
        vi(s5.expiryTimestamp) && t3.push(s5.id);
      }), await Promise.all([...e4.map((s5) => this.deleteSession({ topic: s5 })), ...t3.map((s5) => this.deleteProposal(s5))]);
    }), c7(this, "onProviderMessageEvent", async (e4) => {
      !this.initialized || this.relayMessageCache.length > 0 ? this.relayMessageCache.push(e4) : await this.onRelayMessage(e4);
    }), c7(this, "onRelayEventRequest", async (e4) => {
      this.requestQueue.queue.push(e4), await this.processRequestsQueue();
    }), c7(this, "processRequestsQueue", async () => {
      if (this.requestQueue.state === $4.active) {
        this.client.logger.info("Request queue already active, skipping...");
        return;
      }
      for (this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0; ) {
        this.requestQueue.state = $4.active;
        const e4 = this.requestQueue.queue.shift();
        if (e4) try {
          await this.processRequest(e4);
        } catch (t3) {
          this.client.logger.warn(t3);
        }
      }
      this.requestQueue.state = $4.idle;
    }), c7(this, "processRequest", async (e4) => {
      const { topic: t3, payload: s5, attestation: i6, transportType: r5, encryptedId: o6 } = e4, a5 = s5.method;
      if (!this.shouldIgnorePairingRequest({ topic: t3, requestMethod: a5 })) switch (a5) {
        case "wc_sessionPropose":
          return await this.onSessionProposeRequest({ topic: t3, payload: s5, attestation: i6, encryptedId: o6 });
        case "wc_sessionSettle":
          return await this.onSessionSettleRequest(t3, s5);
        case "wc_sessionUpdate":
          return await this.onSessionUpdateRequest(t3, s5);
        case "wc_sessionExtend":
          return await this.onSessionExtendRequest(t3, s5);
        case "wc_sessionPing":
          return await this.onSessionPingRequest(t3, s5);
        case "wc_sessionDelete":
          return await this.onSessionDeleteRequest(t3, s5);
        case "wc_sessionRequest":
          return await this.onSessionRequest({ topic: t3, payload: s5, attestation: i6, encryptedId: o6, transportType: r5 });
        case "wc_sessionEvent":
          return await this.onSessionEventRequest(t3, s5);
        case "wc_sessionAuthenticate":
          return await this.onSessionAuthenticateRequest({ topic: t3, payload: s5, attestation: i6, encryptedId: o6, transportType: r5 });
        default:
          return this.client.logger.info(`Unsupported request method ${a5}`);
      }
    }), c7(this, "onRelayEventResponse", async (e4) => {
      const { topic: t3, payload: s5, transportType: i6 } = e4, r5 = (await this.client.core.history.get(t3, s5.id)).request.method;
      switch (r5) {
        case "wc_sessionPropose":
          return this.onSessionProposeResponse(t3, s5, i6);
        case "wc_sessionSettle":
          return this.onSessionSettleResponse(t3, s5);
        case "wc_sessionUpdate":
          return this.onSessionUpdateResponse(t3, s5);
        case "wc_sessionExtend":
          return this.onSessionExtendResponse(t3, s5);
        case "wc_sessionPing":
          return this.onSessionPingResponse(t3, s5);
        case "wc_sessionRequest":
          return this.onSessionRequestResponse(t3, s5);
        case "wc_sessionAuthenticate":
          return this.onSessionAuthenticateResponse(t3, s5);
        default:
          return this.client.logger.info(`Unsupported response method ${r5}`);
      }
    }), c7(this, "onRelayEventUnknownPayload", (e4) => {
      const { topic: t3 } = e4, { message: s5 } = ht2("MISSING_OR_INVALID", `Decoded payload on topic ${t3} is not identifiable as a JSON-RPC request or a response.`);
      throw new Error(s5);
    }), c7(this, "shouldIgnorePairingRequest", (e4) => {
      const { topic: t3, requestMethod: s5 } = e4, i6 = this.expectedPairingMethodMap.get(t3);
      return !i6 || i6.includes(s5) ? false : !!(i6.includes("wc_sessionAuthenticate") && this.client.events.listenerCount("session_authenticate") > 0);
    }), c7(this, "onSessionProposeRequest", async (e4) => {
      const { topic: t3, payload: s5, attestation: i6, encryptedId: r5 } = e4, { params: o6, id: a5 } = s5;
      try {
        const l9 = this.client.core.eventClient.getEvent({ topic: t3 });
        this.client.events.listenerCount("session_proposal") === 0 && (console.warn("No listener for session_proposal event"), l9 == null ? void 0 : l9.setError(Y3.proposal_listener_not_found)), this.isValidConnect(v7({}, s5.params));
        const p6 = o6.expiryTimestamp || Ei(N10.wc_sessionPropose.req.ttl), h7 = v7({ id: a5, pairingTopic: t3, expiryTimestamp: p6 }, o6);
        await this.setProposal(a5, h7);
        const u4 = await this.getVerifyContext({ attestationId: i6, hash: kc(JSON.stringify(s5)), encryptedId: r5, metadata: h7.proposer.metadata });
        l9 == null ? void 0 : l9.addTrace(G4.emit_session_proposal), this.client.events.emit("session_proposal", { id: a5, params: h7, verifyContext: u4 });
      } catch (l9) {
        await this.sendError({ id: a5, topic: t3, error: l9, rpcOpts: N10.wc_sessionPropose.autoReject }), this.client.logger.error(l9);
      }
    }), c7(this, "onSessionProposeResponse", async (e4, t3, s5) => {
      const { id: i6 } = t3;
      if (isJsonRpcResult(t3)) {
        const { result: r5 } = t3;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", result: r5 });
        const o6 = this.client.proposal.get(i6);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", proposal: o6 });
        const a5 = o6.proposer.publicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", selfPublicKey: a5 });
        const l9 = r5.responderPublicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", peerPublicKey: l9 });
        const p6 = await this.client.core.crypto.generateSharedKey(a5, l9);
        this.pendingSessions.set(i6, { sessionTopic: p6, pairingTopic: e4, proposalId: i6, publicKey: a5 });
        const h7 = await this.client.core.relayer.subscribe(p6, { transportType: s5 });
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", subscriptionId: h7 }), await this.client.core.pairing.activate({ topic: e4 });
      } else if (isJsonRpcError(t3)) {
        await this.client.proposal.delete(i6, Nt2("USER_DISCONNECTED"));
        const r5 = xi("session_connect", i6);
        if (this.events.listenerCount(r5) === 0) throw new Error(`emitting ${r5} without any listeners, 954`);
        this.events.emit(r5, { error: t3.error });
      }
    }), c7(this, "onSessionSettleRequest", async (e4, t3) => {
      const { id: s5, params: i6 } = t3;
      try {
        this.isValidSessionSettleRequest(i6);
        const { relay: r5, controller: o6, expiry: a5, namespaces: l9, sessionProperties: p6, scopedProperties: h7, sessionConfig: u4 } = t3.params, d6 = [...this.pendingSessions.values()].find((f8) => f8.sessionTopic === e4);
        if (!d6) return this.client.logger.error(`Pending session not found for topic ${e4}`);
        const w7 = this.client.proposal.get(d6.proposalId), m5 = b5(v7(v7(v7({ topic: e4, relay: r5, expiry: a5, namespaces: l9, acknowledged: true, pairingTopic: d6.pairingTopic, requiredNamespaces: w7.requiredNamespaces, optionalNamespaces: w7.optionalNamespaces, controller: o6.publicKey, self: { publicKey: d6.publicKey, metadata: this.client.metadata }, peer: { publicKey: o6.publicKey, metadata: o6.metadata } }, p6 && { sessionProperties: p6 }), h7 && { scopedProperties: h7 }), u4 && { sessionConfig: u4 }), { transportType: Q3.relay });
        await this.client.session.set(m5.topic, m5), await this.setExpiry(m5.topic, m5.expiry), await this.client.core.pairing.updateMetadata({ topic: d6.pairingTopic, metadata: m5.peer.metadata }), this.client.events.emit("session_connect", { session: m5 }), this.events.emit(xi("session_connect", d6.proposalId), { session: m5 }), this.pendingSessions.delete(d6.proposalId), this.deleteProposal(d6.proposalId, false), this.cleanupDuplicatePairings(m5), await this.sendResult({ id: t3.id, topic: e4, result: true, throwOnFailedPublish: true });
      } catch (r5) {
        await this.sendError({ id: s5, topic: e4, error: r5 }), this.client.logger.error(r5);
      }
    }), c7(this, "onSessionSettleResponse", async (e4, t3) => {
      const { id: s5 } = t3;
      isJsonRpcResult(t3) ? (await this.client.session.update(e4, { acknowledged: true }), this.events.emit(xi("session_approve", s5), {})) : isJsonRpcError(t3) && (await this.client.session.delete(e4, Nt2("USER_DISCONNECTED")), this.events.emit(xi("session_approve", s5), { error: t3.error }));
    }), c7(this, "onSessionUpdateRequest", async (e4, t3) => {
      const { params: s5, id: i6 } = t3;
      try {
        const r5 = `${e4}_session_update`, o6 = Ua.get(r5);
        if (o6 && this.isRequestOutOfSync(o6, i6)) {
          this.client.logger.warn(`Discarding out of sync request - ${i6}`), this.sendError({ id: i6, topic: e4, error: Nt2("INVALID_UPDATE_REQUEST") });
          return;
        }
        this.isValidUpdate(v7({ topic: e4 }, s5));
        try {
          Ua.set(r5, i6), await this.client.session.update(e4, { namespaces: s5.namespaces }), await this.sendResult({ id: i6, topic: e4, result: true, throwOnFailedPublish: true });
        } catch (a5) {
          throw Ua.delete(r5), a5;
        }
        this.client.events.emit("session_update", { id: i6, topic: e4, params: s5 });
      } catch (r5) {
        await this.sendError({ id: i6, topic: e4, error: r5 }), this.client.logger.error(r5);
      }
    }), c7(this, "isRequestOutOfSync", (e4, t3) => t3.toString().slice(0, -3) < e4.toString().slice(0, -3)), c7(this, "onSessionUpdateResponse", (e4, t3) => {
      const { id: s5 } = t3, i6 = xi("session_update", s5);
      if (this.events.listenerCount(i6) === 0) throw new Error(`emitting ${i6} without any listeners`);
      isJsonRpcResult(t3) ? this.events.emit(xi("session_update", s5), {}) : isJsonRpcError(t3) && this.events.emit(xi("session_update", s5), { error: t3.error });
    }), c7(this, "onSessionExtendRequest", async (e4, t3) => {
      const { id: s5 } = t3;
      try {
        this.isValidExtend({ topic: e4 }), await this.setExpiry(e4, Ei(J4)), await this.sendResult({ id: s5, topic: e4, result: true, throwOnFailedPublish: true }), this.client.events.emit("session_extend", { id: s5, topic: e4 });
      } catch (i6) {
        await this.sendError({ id: s5, topic: e4, error: i6 }), this.client.logger.error(i6);
      }
    }), c7(this, "onSessionExtendResponse", (e4, t3) => {
      const { id: s5 } = t3, i6 = xi("session_extend", s5);
      if (this.events.listenerCount(i6) === 0) throw new Error(`emitting ${i6} without any listeners`);
      isJsonRpcResult(t3) ? this.events.emit(xi("session_extend", s5), {}) : isJsonRpcError(t3) && this.events.emit(xi("session_extend", s5), { error: t3.error });
    }), c7(this, "onSessionPingRequest", async (e4, t3) => {
      const { id: s5 } = t3;
      try {
        this.isValidPing({ topic: e4 }), await this.sendResult({ id: s5, topic: e4, result: true, throwOnFailedPublish: true }), this.client.events.emit("session_ping", { id: s5, topic: e4 });
      } catch (i6) {
        await this.sendError({ id: s5, topic: e4, error: i6 }), this.client.logger.error(i6);
      }
    }), c7(this, "onSessionPingResponse", (e4, t3) => {
      const { id: s5 } = t3, i6 = xi("session_ping", s5);
      setTimeout(() => {
        if (this.events.listenerCount(i6) === 0) throw new Error(`emitting ${i6} without any listeners 2176`);
        isJsonRpcResult(t3) ? this.events.emit(xi("session_ping", s5), {}) : isJsonRpcError(t3) && this.events.emit(xi("session_ping", s5), { error: t3.error });
      }, 500);
    }), c7(this, "onSessionDeleteRequest", async (e4, t3) => {
      const { id: s5 } = t3;
      try {
        this.isValidDisconnect({ topic: e4, reason: t3.params }), Promise.all([new Promise((i6) => {
          this.client.core.relayer.once(C5.publish, async () => {
            i6(await this.deleteSession({ topic: e4, id: s5 }));
          });
        }), this.sendResult({ id: s5, topic: e4, result: true, throwOnFailedPublish: true }), this.cleanupPendingSentRequestsForTopic({ topic: e4, error: Nt2("USER_DISCONNECTED") })]).catch((i6) => this.client.logger.error(i6));
      } catch (i6) {
        this.client.logger.error(i6);
      }
    }), c7(this, "onSessionRequest", async (e4) => {
      var t3, s5, i6;
      const { topic: r5, payload: o6, attestation: a5, encryptedId: l9, transportType: p6 } = e4, { id: h7, params: u4 } = o6;
      try {
        await this.isValidRequest(v7({ topic: r5 }, u4));
        const d6 = this.client.session.get(r5), w7 = await this.getVerifyContext({ attestationId: a5, hash: kc(JSON.stringify(formatJsonRpcRequest("wc_sessionRequest", u4, h7))), encryptedId: l9, metadata: d6.peer.metadata, transportType: p6 }), m5 = { id: h7, topic: r5, params: u4, verifyContext: w7 };
        await this.setPendingSessionRequest(m5), p6 === Q3.link_mode && (t3 = d6.peer.metadata.redirect) != null && t3.universal && this.client.core.addLinkModeSupportedApp((s5 = d6.peer.metadata.redirect) == null ? void 0 : s5.universal), (i6 = this.client.signConfig) != null && i6.disableRequestQueue ? this.emitSessionRequest(m5) : (this.addSessionRequestToSessionRequestQueue(m5), this.processSessionRequestQueue());
      } catch (d6) {
        await this.sendError({ id: h7, topic: r5, error: d6 }), this.client.logger.error(d6);
      }
    }), c7(this, "onSessionRequestResponse", (e4, t3) => {
      const { id: s5 } = t3, i6 = xi("session_request", s5);
      if (this.events.listenerCount(i6) === 0) throw new Error(`emitting ${i6} without any listeners`);
      isJsonRpcResult(t3) ? this.events.emit(xi("session_request", s5), { result: t3.result }) : isJsonRpcError(t3) && this.events.emit(xi("session_request", s5), { error: t3.error });
    }), c7(this, "onSessionEventRequest", async (e4, t3) => {
      const { id: s5, params: i6 } = t3;
      try {
        const r5 = `${e4}_session_event_${i6.event.name}`, o6 = Ua.get(r5);
        if (o6 && this.isRequestOutOfSync(o6, s5)) {
          this.client.logger.info(`Discarding out of sync request - ${s5}`);
          return;
        }
        this.isValidEmit(v7({ topic: e4 }, i6)), this.client.events.emit("session_event", { id: s5, topic: e4, params: i6 }), Ua.set(r5, s5);
      } catch (r5) {
        await this.sendError({ id: s5, topic: e4, error: r5 }), this.client.logger.error(r5);
      }
    }), c7(this, "onSessionAuthenticateResponse", (e4, t3) => {
      const { id: s5 } = t3;
      this.client.logger.trace({ type: "method", method: "onSessionAuthenticateResponse", topic: e4, payload: t3 }), isJsonRpcResult(t3) ? this.events.emit(xi("session_request", s5), { result: t3.result }) : isJsonRpcError(t3) && this.events.emit(xi("session_request", s5), { error: t3.error });
    }), c7(this, "onSessionAuthenticateRequest", async (e4) => {
      var t3;
      const { topic: s5, payload: i6, attestation: r5, encryptedId: o6, transportType: a5 } = e4;
      try {
        const { requester: l9, authPayload: p6, expiryTimestamp: h7 } = i6.params, u4 = await this.getVerifyContext({ attestationId: r5, hash: kc(JSON.stringify(i6)), encryptedId: o6, metadata: l9.metadata, transportType: a5 }), d6 = { requester: l9, pairingTopic: s5, id: i6.id, authPayload: p6, verifyContext: u4, expiryTimestamp: h7 };
        await this.setAuthRequest(i6.id, { request: d6, pairingTopic: s5, transportType: a5 }), a5 === Q3.link_mode && (t3 = l9.metadata.redirect) != null && t3.universal && this.client.core.addLinkModeSupportedApp(l9.metadata.redirect.universal), this.client.events.emit("session_authenticate", { topic: s5, params: i6.params, id: i6.id, verifyContext: u4 });
      } catch (l9) {
        this.client.logger.error(l9);
        const p6 = i6.params.requester.publicKey, h7 = await this.client.core.crypto.generateKeyPair(), u4 = this.getAppLinkIfEnabled(i6.params.requester.metadata, a5), d6 = { type: Kt2, receiverPublicKey: p6, senderPublicKey: h7 };
        await this.sendError({ id: i6.id, topic: s5, error: l9, encodeOpts: d6, rpcOpts: N10.wc_sessionAuthenticate.autoReject, appLink: u4 });
      }
    }), c7(this, "addSessionRequestToSessionRequestQueue", (e4) => {
      this.sessionRequestQueue.queue.push(e4);
    }), c7(this, "cleanupAfterResponse", (e4) => {
      this.deletePendingSessionRequest(e4.response.id, { message: "fulfilled", code: 0 }), setTimeout(() => {
        this.sessionRequestQueue.state = $4.idle, this.processSessionRequestQueue();
      }, (0, import_time5.toMiliseconds)(this.requestQueueDelay));
    }), c7(this, "cleanupPendingSentRequestsForTopic", ({ topic: e4, error: t3 }) => {
      const s5 = this.client.core.history.pending;
      s5.length > 0 && s5.filter((i6) => i6.topic === e4 && i6.request.method === "wc_sessionRequest").forEach((i6) => {
        const r5 = i6.request.id, o6 = xi("session_request", r5);
        if (this.events.listenerCount(o6) === 0) throw new Error(`emitting ${o6} without any listeners`);
        this.events.emit(xi("session_request", i6.request.id), { error: t3 });
      });
    }), c7(this, "processSessionRequestQueue", () => {
      if (this.sessionRequestQueue.state === $4.active) {
        this.client.logger.info("session request queue is already active.");
        return;
      }
      const e4 = this.sessionRequestQueue.queue[0];
      if (!e4) {
        this.client.logger.info("session request queue is empty.");
        return;
      }
      try {
        this.sessionRequestQueue.state = $4.active, this.emitSessionRequest(e4);
      } catch (t3) {
        this.client.logger.error(t3);
      }
    }), c7(this, "emitSessionRequest", (e4) => {
      this.client.events.emit("session_request", e4);
    }), c7(this, "onPairingCreated", (e4) => {
      if (e4.methods && this.expectedPairingMethodMap.set(e4.topic, e4.methods), e4.active) return;
      const t3 = this.client.proposal.getAll().find((s5) => s5.pairingTopic === e4.topic);
      t3 && this.onSessionProposeRequest({ topic: e4.topic, payload: formatJsonRpcRequest("wc_sessionPropose", b5(v7({}, t3), { requiredNamespaces: t3.requiredNamespaces, optionalNamespaces: t3.optionalNamespaces, relays: t3.relays, proposer: t3.proposer, sessionProperties: t3.sessionProperties, scopedProperties: t3.scopedProperties }), t3.id) });
    }), c7(this, "isValidConnect", async (e4) => {
      if (!ya(e4)) {
        const { message: l9 } = ht2("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(e4)}`);
        throw new Error(l9);
      }
      const { pairingTopic: t3, requiredNamespaces: s5, optionalNamespaces: i6, sessionProperties: r5, scopedProperties: o6, relays: a5 } = e4;
      if (Et2(t3) || await this.isValidPairingTopic(t3), !pa(a5, true)) {
        const { message: l9 } = ht2("MISSING_OR_INVALID", `connect() relays: ${a5}`);
        throw new Error(l9);
      }
      if (!Et2(s5) && xe2(s5) !== 0 && this.validateNamespaces(s5, "requiredNamespaces"), !Et2(i6) && xe2(i6) !== 0 && this.validateNamespaces(i6, "optionalNamespaces"), Et2(r5) || this.validateSessionProps(r5, "sessionProperties"), !Et2(o6)) {
        this.validateSessionProps(o6, "scopedProperties");
        const l9 = Object.keys(s5 || {}).concat(Object.keys(i6 || {}));
        if (!Object.keys(o6).every((p6) => l9.includes(p6))) throw new Error(`Scoped properties must be a subset of required/optional namespaces, received: ${JSON.stringify(o6)}, required/optional namespaces: ${JSON.stringify(l9)}`);
      }
    }), c7(this, "validateNamespaces", (e4, t3) => {
      const s5 = ha(e4, "connect()", t3);
      if (s5) throw new Error(s5.message);
    }), c7(this, "isValidApprove", async (e4) => {
      if (!ya(e4)) throw new Error(ht2("MISSING_OR_INVALID", `approve() params: ${e4}`).message);
      const { id: t3, namespaces: s5, relayProtocol: i6, sessionProperties: r5, scopedProperties: o6 } = e4;
      this.checkRecentlyDeleted(t3), await this.isValidProposalId(t3);
      const a5 = this.client.proposal.get(t3), l9 = Bo2(s5, "approve()");
      if (l9) throw new Error(l9.message);
      const p6 = No2(a5.requiredNamespaces, s5, "approve()");
      if (p6) throw new Error(p6.message);
      if (!nt2(i6, true)) {
        const { message: h7 } = ht2("MISSING_OR_INVALID", `approve() relayProtocol: ${i6}`);
        throw new Error(h7);
      }
      if (Et2(r5) || this.validateSessionProps(r5, "sessionProperties"), !Et2(o6)) {
        this.validateSessionProps(o6, "scopedProperties");
        const h7 = new Set(Object.keys(s5));
        if (!Object.keys(o6).every((u4) => h7.has(u4))) throw new Error(`Scoped properties must be a subset of approved namespaces, received: ${JSON.stringify(o6)}, approved namespaces: ${Array.from(h7).join(", ")}`);
      }
    }), c7(this, "isValidReject", async (e4) => {
      if (!ya(e4)) {
        const { message: i6 } = ht2("MISSING_OR_INVALID", `reject() params: ${e4}`);
        throw new Error(i6);
      }
      const { id: t3, reason: s5 } = e4;
      if (this.checkRecentlyDeleted(t3), await this.isValidProposalId(t3), !ma(s5)) {
        const { message: i6 } = ht2("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(s5)}`);
        throw new Error(i6);
      }
    }), c7(this, "isValidSessionSettleRequest", (e4) => {
      if (!ya(e4)) {
        const { message: l9 } = ht2("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${e4}`);
        throw new Error(l9);
      }
      const { relay: t3, controller: s5, namespaces: i6, expiry: r5 } = e4;
      if (!Io2(t3)) {
        const { message: l9 } = ht2("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
        throw new Error(l9);
      }
      const o6 = da(s5, "onSessionSettleRequest()");
      if (o6) throw new Error(o6.message);
      const a5 = Bo2(i6, "onSessionSettleRequest()");
      if (a5) throw new Error(a5.message);
      if (vi(r5)) {
        const { message: l9 } = ht2("EXPIRED", "onSessionSettleRequest()");
        throw new Error(l9);
      }
    }), c7(this, "isValidUpdate", async (e4) => {
      if (!ya(e4)) {
        const { message: a5 } = ht2("MISSING_OR_INVALID", `update() params: ${e4}`);
        throw new Error(a5);
      }
      const { topic: t3, namespaces: s5 } = e4;
      this.checkRecentlyDeleted(t3), await this.isValidSessionTopic(t3);
      const i6 = this.client.session.get(t3), r5 = Bo2(s5, "update()");
      if (r5) throw new Error(r5.message);
      const o6 = No2(i6.requiredNamespaces, s5, "update()");
      if (o6) throw new Error(o6.message);
    }), c7(this, "isValidExtend", async (e4) => {
      if (!ya(e4)) {
        const { message: s5 } = ht2("MISSING_OR_INVALID", `extend() params: ${e4}`);
        throw new Error(s5);
      }
      const { topic: t3 } = e4;
      this.checkRecentlyDeleted(t3), await this.isValidSessionTopic(t3);
    }), c7(this, "isValidRequest", async (e4) => {
      if (!ya(e4)) {
        const { message: a5 } = ht2("MISSING_OR_INVALID", `request() params: ${e4}`);
        throw new Error(a5);
      }
      const { topic: t3, request: s5, chainId: i6, expiry: r5 } = e4;
      this.checkRecentlyDeleted(t3), await this.isValidSessionTopic(t3);
      const { namespaces: o6 } = this.client.session.get(t3);
      if (!va(o6, i6)) {
        const { message: a5 } = ht2("MISSING_OR_INVALID", `request() chainId: ${i6}`);
        throw new Error(a5);
      }
      if (!wa(s5)) {
        const { message: a5 } = ht2("MISSING_OR_INVALID", `request() ${JSON.stringify(s5)}`);
        throw new Error(a5);
      }
      if (!xa(o6, i6, s5.method)) {
        const { message: a5 } = ht2("MISSING_OR_INVALID", `request() method: ${s5.method}`);
        throw new Error(a5);
      }
      if (r5 && !Ba(r5, _e4)) {
        const { message: a5 } = ht2("MISSING_OR_INVALID", `request() expiry: ${r5}. Expiry must be a number (in seconds) between ${_e4.min} and ${_e4.max}`);
        throw new Error(a5);
      }
    }), c7(this, "isValidRespond", async (e4) => {
      var t3;
      if (!ya(e4)) {
        const { message: r5 } = ht2("MISSING_OR_INVALID", `respond() params: ${e4}`);
        throw new Error(r5);
      }
      const { topic: s5, response: i6 } = e4;
      try {
        await this.isValidSessionTopic(s5);
      } catch (r5) {
        throw (t3 = e4 == null ? void 0 : e4.response) != null && t3.id && this.cleanupAfterResponse(e4), r5;
      }
      if (!ba(i6)) {
        const { message: r5 } = ht2("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(i6)}`);
        throw new Error(r5);
      }
    }), c7(this, "isValidPing", async (e4) => {
      if (!ya(e4)) {
        const { message: s5 } = ht2("MISSING_OR_INVALID", `ping() params: ${e4}`);
        throw new Error(s5);
      }
      const { topic: t3 } = e4;
      await this.isValidSessionOrPairingTopic(t3);
    }), c7(this, "isValidEmit", async (e4) => {
      if (!ya(e4)) {
        const { message: o6 } = ht2("MISSING_OR_INVALID", `emit() params: ${e4}`);
        throw new Error(o6);
      }
      const { topic: t3, event: s5, chainId: i6 } = e4;
      await this.isValidSessionTopic(t3);
      const { namespaces: r5 } = this.client.session.get(t3);
      if (!va(r5, i6)) {
        const { message: o6 } = ht2("MISSING_OR_INVALID", `emit() chainId: ${i6}`);
        throw new Error(o6);
      }
      if (!Ea(s5)) {
        const { message: o6 } = ht2("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(s5)}`);
        throw new Error(o6);
      }
      if (!Sa(r5, i6, s5.name)) {
        const { message: o6 } = ht2("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(s5)}`);
        throw new Error(o6);
      }
    }), c7(this, "isValidDisconnect", async (e4) => {
      if (!ya(e4)) {
        const { message: s5 } = ht2("MISSING_OR_INVALID", `disconnect() params: ${e4}`);
        throw new Error(s5);
      }
      const { topic: t3 } = e4;
      await this.isValidSessionOrPairingTopic(t3);
    }), c7(this, "isValidAuthenticate", (e4) => {
      const { chains: t3, uri: s5, domain: i6, nonce: r5 } = e4;
      if (!Array.isArray(t3) || t3.length === 0) throw new Error("chains is required and must be a non-empty array");
      if (!nt2(s5, false)) throw new Error("uri is required parameter");
      if (!nt2(i6, false)) throw new Error("domain is required parameter");
      if (!nt2(r5, false)) throw new Error("nonce is required parameter");
      if ([...new Set(t3.map((a5) => Ie2(a5).namespace))].length > 1) throw new Error("Multi-namespace requests are not supported. Please request single namespace only.");
      const { namespace: o6 } = Ie2(t3[0]);
      if (o6 !== "eip155") throw new Error("Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.");
    }), c7(this, "getVerifyContext", async (e4) => {
      const { attestationId: t3, hash: s5, encryptedId: i6, metadata: r5, transportType: o6 } = e4, a5 = { verified: { verifyUrl: r5.verifyUrl || ue2, validation: "UNKNOWN", origin: r5.url || "" } };
      try {
        if (o6 === Q3.link_mode) {
          const p6 = this.getAppLinkIfEnabled(r5, o6);
          return a5.verified.validation = p6 && new URL(p6).origin === new URL(r5.url).origin ? "VALID" : "INVALID", a5;
        }
        const l9 = await this.client.core.verify.resolve({ attestationId: t3, hash: s5, encryptedId: i6, verifyUrl: r5.verifyUrl });
        l9 && (a5.verified.origin = l9.origin, a5.verified.isScam = l9.isScam, a5.verified.validation = l9.origin === new URL(r5.url).origin ? "VALID" : "INVALID");
      } catch (l9) {
        this.client.logger.warn(l9);
      }
      return this.client.logger.debug(`Verify context: ${JSON.stringify(a5)}`), a5;
    }), c7(this, "validateSessionProps", (e4, t3) => {
      Object.values(e4).forEach((s5, i6) => {
        if (s5 == null) {
          const { message: r5 } = ht2("MISSING_OR_INVALID", `${t3} must contain an existing value for each key. Received: ${s5} for key ${Object.keys(e4)[i6]}`);
          throw new Error(r5);
        }
      });
    }), c7(this, "getPendingAuthRequest", (e4) => {
      const t3 = this.client.auth.requests.get(e4);
      return typeof t3 == "object" ? t3 : void 0;
    }), c7(this, "addToRecentlyDeleted", (e4, t3) => {
      if (this.recentlyDeletedMap.set(e4, t3), this.recentlyDeletedMap.size >= this.recentlyDeletedLimit) {
        let s5 = 0;
        const i6 = this.recentlyDeletedLimit / 2;
        for (const r5 of this.recentlyDeletedMap.keys()) {
          if (s5++ >= i6) break;
          this.recentlyDeletedMap.delete(r5);
        }
      }
    }), c7(this, "checkRecentlyDeleted", (e4) => {
      const t3 = this.recentlyDeletedMap.get(e4);
      if (t3) {
        const { message: s5 } = ht2("MISSING_OR_INVALID", `Record was recently deleted - ${t3}: ${e4}`);
        throw new Error(s5);
      }
    }), c7(this, "isLinkModeEnabled", (e4, t3) => {
      var s5, i6, r5, o6, a5, l9, p6, h7, u4;
      return !e4 || t3 !== Q3.link_mode ? false : ((i6 = (s5 = this.client.metadata) == null ? void 0 : s5.redirect) == null ? void 0 : i6.linkMode) === true && ((o6 = (r5 = this.client.metadata) == null ? void 0 : r5.redirect) == null ? void 0 : o6.universal) !== void 0 && ((l9 = (a5 = this.client.metadata) == null ? void 0 : a5.redirect) == null ? void 0 : l9.universal) !== "" && ((p6 = e4 == null ? void 0 : e4.redirect) == null ? void 0 : p6.universal) !== void 0 && ((h7 = e4 == null ? void 0 : e4.redirect) == null ? void 0 : h7.universal) !== "" && ((u4 = e4 == null ? void 0 : e4.redirect) == null ? void 0 : u4.linkMode) === true && this.client.core.linkModeSupportedApps.includes(e4.redirect.universal) && typeof (global == null ? void 0 : global.Linking) < "u";
    }), c7(this, "getAppLinkIfEnabled", (e4, t3) => {
      var s5;
      return this.isLinkModeEnabled(e4, t3) ? (s5 = e4 == null ? void 0 : e4.redirect) == null ? void 0 : s5.universal : void 0;
    }), c7(this, "handleLinkModeMessage", ({ url: e4 }) => {
      if (!e4 || !e4.includes("wc_ev") || !e4.includes("topic")) return;
      const t3 = Ai(e4, "topic") || "", s5 = decodeURIComponent(Ai(e4, "wc_ev") || ""), i6 = this.client.session.keys.includes(t3);
      i6 && this.client.session.update(t3, { transportType: Q3.link_mode }), this.client.core.dispatchEnvelope({ topic: t3, message: s5, sessionExists: i6 });
    }), c7(this, "registerLinkModeListeners", async () => {
      var e4;
      if (Ii() || pt() && (e4 = this.client.metadata.redirect) != null && e4.linkMode) {
        const t3 = global == null ? void 0 : global.Linking;
        if (typeof t3 < "u") {
          t3.addEventListener("url", this.handleLinkModeMessage, this.client.name);
          const s5 = await t3.getInitialURL();
          s5 && setTimeout(() => {
            this.handleLinkModeMessage({ url: s5 });
          }, 50);
        }
      }
    }), c7(this, "shouldSetTVF", (e4, t3) => {
      if (!t3 || e4 !== "wc_sessionRequest") return false;
      const { request: s5 } = t3;
      return Object.keys(Ue3).includes(s5.method);
    }), c7(this, "getTVFParams", (e4, t3, s5) => {
      var i6, r5;
      try {
        const o6 = t3.request.method, a5 = this.extractTxHashesFromResult(o6, s5);
        return b5(v7({ correlationId: e4, rpcMethods: [o6], chainId: t3.chainId }, this.isValidContractData(t3.request.params) && { contractAddresses: [(r5 = (i6 = t3.request.params) == null ? void 0 : i6[0]) == null ? void 0 : r5.to] }), { txHashes: a5 });
      } catch (o6) {
        this.client.logger.warn("Error getting TVF params", o6);
      }
      return {};
    }), c7(this, "isValidContractData", (e4) => {
      var t3;
      if (!e4) return false;
      try {
        const s5 = (e4 == null ? void 0 : e4.data) || ((t3 = e4 == null ? void 0 : e4[0]) == null ? void 0 : t3.data);
        if (!s5.startsWith("0x")) return false;
        const i6 = s5.slice(2);
        return /^[0-9a-fA-F]*$/.test(i6) ? i6.length % 2 === 0 : false;
      } catch {
      }
      return false;
    }), c7(this, "extractTxHashesFromResult", (e4, t3) => {
      try {
        const s5 = Ue3[e4];
        if (typeof t3 == "string") return [t3];
        const i6 = t3[s5.key];
        if (oe(i6)) return e4 === "solana_signAllTransactions" ? i6.map((r5) => Ji(r5)) : i6;
        if (typeof i6 == "string") return [i6];
      } catch (s5) {
        this.client.logger.warn("Error extracting tx hashes from result", s5);
      }
      return [];
    });
  }
  async processPendingMessageEvents() {
    try {
      const n7 = this.client.session.keys, e4 = this.client.core.relayer.messages.getWithoutAck(n7);
      for (const [t3, s5] of Object.entries(e4)) for (const i6 of s5) try {
        await this.onProviderMessageEvent({ topic: t3, message: i6, publishedAt: Date.now() });
      } catch {
        this.client.logger.warn(`Error processing pending message event for topic: ${t3}, message: ${i6}`);
      }
    } catch (n7) {
      this.client.logger.warn("processPendingMessageEvents failed", n7);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: n7 } = ht2("NOT_INITIALIZED", this.name);
      throw new Error(n7);
    }
  }
  async confirmOnlineStateOrThrow() {
    await this.client.core.relayer.confirmOnlineStateOrThrow();
  }
  registerRelayerEvents() {
    this.client.core.relayer.on(C5.message, (n7) => {
      this.onProviderMessageEvent(n7);
    });
  }
  async onRelayMessage(n7) {
    const { topic: e4, message: t3, attestation: s5, transportType: i6 } = n7, { publicKey: r5 } = this.client.auth.authKeys.keys.includes(ce2) ? this.client.auth.authKeys.get(ce2) : { responseTopic: void 0, publicKey: void 0 };
    try {
      const o6 = await this.client.core.crypto.decode(e4, t3, { receiverPublicKey: r5, encoding: i6 === Q3.link_mode ? Ee2 : Ht2 });
      isJsonRpcRequest(o6) ? (this.client.core.history.set(e4, o6), await this.onRelayEventRequest({ topic: e4, payload: o6, attestation: s5, transportType: i6, encryptedId: kc(t3) })) : isJsonRpcResponse(o6) ? (await this.client.core.history.resolve(o6), await this.onRelayEventResponse({ topic: e4, payload: o6, transportType: i6 }), this.client.core.history.delete(e4, o6.id)) : await this.onRelayEventUnknownPayload({ topic: e4, payload: o6, transportType: i6 }), await this.client.core.relayer.messages.ack(e4, t3);
    } catch (o6) {
      this.client.logger.error(o6);
    }
  }
  registerExpirerEvents() {
    this.client.core.expirer.on(M5.expired, async (n7) => {
      const { topic: e4, id: t3 } = bi(n7.target);
      if (t3 && this.client.pendingRequest.keys.includes(t3)) return await this.deletePendingSessionRequest(t3, ht2("EXPIRED"), true);
      if (t3 && this.client.auth.requests.keys.includes(t3)) return await this.deletePendingAuthRequest(t3, ht2("EXPIRED"), true);
      e4 ? this.client.session.keys.includes(e4) && (await this.deleteSession({ topic: e4, expirerHasDeleted: true }), this.client.events.emit("session_expire", { topic: e4 })) : t3 && (await this.deleteProposal(t3, true), this.client.events.emit("proposal_expire", { id: t3 }));
    });
  }
  registerPairingEvents() {
    this.client.core.pairing.events.on(se2.create, (n7) => this.onPairingCreated(n7)), this.client.core.pairing.events.on(se2.delete, (n7) => {
      this.addToRecentlyDeleted(n7.topic, "pairing");
    });
  }
  isValidPairingTopic(n7) {
    if (!nt2(n7, false)) {
      const { message: e4 } = ht2("MISSING_OR_INVALID", `pairing topic should be a string: ${n7}`);
      throw new Error(e4);
    }
    if (!this.client.core.pairing.pairings.keys.includes(n7)) {
      const { message: e4 } = ht2("NO_MATCHING_KEY", `pairing topic doesn't exist: ${n7}`);
      throw new Error(e4);
    }
    if (vi(this.client.core.pairing.pairings.get(n7).expiry)) {
      const { message: e4 } = ht2("EXPIRED", `pairing topic: ${n7}`);
      throw new Error(e4);
    }
  }
  async isValidSessionTopic(n7) {
    if (!nt2(n7, false)) {
      const { message: e4 } = ht2("MISSING_OR_INVALID", `session topic should be a string: ${n7}`);
      throw new Error(e4);
    }
    if (this.checkRecentlyDeleted(n7), !this.client.session.keys.includes(n7)) {
      const { message: e4 } = ht2("NO_MATCHING_KEY", `session topic doesn't exist: ${n7}`);
      throw new Error(e4);
    }
    if (vi(this.client.session.get(n7).expiry)) {
      await this.deleteSession({ topic: n7 });
      const { message: e4 } = ht2("EXPIRED", `session topic: ${n7}`);
      throw new Error(e4);
    }
    if (!this.client.core.crypto.keychain.has(n7)) {
      const { message: e4 } = ht2("MISSING_OR_INVALID", `session topic does not exist in keychain: ${n7}`);
      throw await this.deleteSession({ topic: n7 }), new Error(e4);
    }
  }
  async isValidSessionOrPairingTopic(n7) {
    if (this.checkRecentlyDeleted(n7), this.client.session.keys.includes(n7)) await this.isValidSessionTopic(n7);
    else if (this.client.core.pairing.pairings.keys.includes(n7)) this.isValidPairingTopic(n7);
    else if (nt2(n7, false)) {
      const { message: e4 } = ht2("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${n7}`);
      throw new Error(e4);
    } else {
      const { message: e4 } = ht2("MISSING_OR_INVALID", `session or pairing topic should be a string: ${n7}`);
      throw new Error(e4);
    }
  }
  async isValidProposalId(n7) {
    if (!ga(n7)) {
      const { message: e4 } = ht2("MISSING_OR_INVALID", `proposal id should be a number: ${n7}`);
      throw new Error(e4);
    }
    if (!this.client.proposal.keys.includes(n7)) {
      const { message: e4 } = ht2("NO_MATCHING_KEY", `proposal id doesn't exist: ${n7}`);
      throw new Error(e4);
    }
    if (vi(this.client.proposal.get(n7).expiryTimestamp)) {
      await this.deleteProposal(n7);
      const { message: e4 } = ht2("EXPIRED", `proposal id: ${n7}`);
      throw new Error(e4);
    }
  }
};
var Ns2 = class extends zi2 {
  constructor(n7, e4) {
    super(n7, e4, pt2, we3), this.core = n7, this.logger = e4;
  }
};
var St4 = class extends zi2 {
  constructor(n7, e4) {
    super(n7, e4, ht3, we3), this.core = n7, this.logger = e4;
  }
};
var Os2 = class extends zi2 {
  constructor(n7, e4) {
    super(n7, e4, ut3, we3, (t3) => t3.id), this.core = n7, this.logger = e4;
  }
};
var bs2 = class extends zi2 {
  constructor(n7, e4) {
    super(n7, e4, mt2, ae, () => ce2), this.core = n7, this.logger = e4;
  }
};
var As2 = class extends zi2 {
  constructor(n7, e4) {
    super(n7, e4, _t3, ae), this.core = n7, this.logger = e4;
  }
};
var xs2 = class extends zi2 {
  constructor(n7, e4) {
    super(n7, e4, Et4, ae, (t3) => t3.id), this.core = n7, this.logger = e4;
  }
};
var Cs2 = Object.defineProperty;
var Vs3 = (S5, n7, e4) => n7 in S5 ? Cs2(S5, n7, { enumerable: true, configurable: true, writable: true, value: e4 }) : S5[n7] = e4;
var Ge4 = (S5, n7, e4) => Vs3(S5, typeof n7 != "symbol" ? n7 + "" : n7, e4);
var Ds2 = class {
  constructor(n7, e4) {
    this.core = n7, this.logger = e4, Ge4(this, "authKeys"), Ge4(this, "pairingTopics"), Ge4(this, "requests"), this.authKeys = new bs2(this.core, this.logger), this.pairingTopics = new As2(this.core, this.logger), this.requests = new xs2(this.core, this.logger);
  }
  async init() {
    await this.authKeys.init(), await this.pairingTopics.init(), await this.requests.init();
  }
};
var Ls2 = Object.defineProperty;
var ks2 = (S5, n7, e4) => n7 in S5 ? Ls2(S5, n7, { enumerable: true, configurable: true, writable: true, value: e4 }) : S5[n7] = e4;
var E7 = (S5, n7, e4) => ks2(S5, typeof n7 != "symbol" ? n7 + "" : n7, e4);
var Ee4 = class _Ee extends J3 {
  constructor(n7) {
    super(n7), E7(this, "protocol", De3), E7(this, "version", Le4), E7(this, "name", me3.name), E7(this, "metadata"), E7(this, "core"), E7(this, "logger"), E7(this, "events", new import_events10.EventEmitter()), E7(this, "engine"), E7(this, "session"), E7(this, "proposal"), E7(this, "pendingRequest"), E7(this, "auth"), E7(this, "signConfig"), E7(this, "on", (t3, s5) => this.events.on(t3, s5)), E7(this, "once", (t3, s5) => this.events.once(t3, s5)), E7(this, "off", (t3, s5) => this.events.off(t3, s5)), E7(this, "removeListener", (t3, s5) => this.events.removeListener(t3, s5)), E7(this, "removeAllListeners", (t3) => this.events.removeAllListeners(t3)), E7(this, "connect", async (t3) => {
      try {
        return await this.engine.connect(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "pair", async (t3) => {
      try {
        return await this.engine.pair(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "approve", async (t3) => {
      try {
        return await this.engine.approve(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "reject", async (t3) => {
      try {
        return await this.engine.reject(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "update", async (t3) => {
      try {
        return await this.engine.update(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "extend", async (t3) => {
      try {
        return await this.engine.extend(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "request", async (t3) => {
      try {
        return await this.engine.request(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "respond", async (t3) => {
      try {
        return await this.engine.respond(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "ping", async (t3) => {
      try {
        return await this.engine.ping(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "emit", async (t3) => {
      try {
        return await this.engine.emit(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "disconnect", async (t3) => {
      try {
        return await this.engine.disconnect(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "find", (t3) => {
      try {
        return this.engine.find(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "getPendingSessionRequests", () => {
      try {
        return this.engine.getPendingSessionRequests();
      } catch (t3) {
        throw this.logger.error(t3.message), t3;
      }
    }), E7(this, "authenticate", async (t3, s5) => {
      try {
        return await this.engine.authenticate(t3, s5);
      } catch (i6) {
        throw this.logger.error(i6.message), i6;
      }
    }), E7(this, "formatAuthMessage", (t3) => {
      try {
        return this.engine.formatAuthMessage(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "approveSessionAuthenticate", async (t3) => {
      try {
        return await this.engine.approveSessionAuthenticate(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), E7(this, "rejectSessionAuthenticate", async (t3) => {
      try {
        return await this.engine.rejectSessionAuthenticate(t3);
      } catch (s5) {
        throw this.logger.error(s5.message), s5;
      }
    }), this.name = (n7 == null ? void 0 : n7.name) || me3.name, this.metadata = oi(n7 == null ? void 0 : n7.metadata), this.signConfig = n7 == null ? void 0 : n7.signConfig;
    const e4 = typeof (n7 == null ? void 0 : n7.logger) < "u" && typeof (n7 == null ? void 0 : n7.logger) != "string" ? n7.logger : (0, import_pino2.default)(k4({ level: (n7 == null ? void 0 : n7.logger) || me3.logger }));
    this.core = (n7 == null ? void 0 : n7.core) || new Jo3(n7), this.logger = E5(e4, this.name), this.session = new St4(this.core, this.logger), this.proposal = new Ns2(this.core, this.logger), this.pendingRequest = new Os2(this.core, this.logger), this.engine = new Ps2(this), this.auth = new Ds2(this.core, this.logger);
  }
  static async init(n7) {
    const e4 = new _Ee(n7);
    return await e4.initialize(), e4;
  }
  get context() {
    return y4(this.logger);
  }
  get pairing() {
    return this.core.pairing.pairings;
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.auth.init(), await this.engine.init(), this.logger.info("SignClient Initialization Success"), setTimeout(() => {
        this.engine.processRelayMessageCache();
      }, (0, import_time5.toMiliseconds)(import_time5.ONE_SECOND));
    } catch (n7) {
      throw this.logger.info("SignClient Initialization Failure"), this.logger.error(n7.message), n7;
    }
  }
};

// node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js
var import_bs582 = __toESM(require_bs58(), 1);

// node_modules/@jnwng/walletconnect-solana/lib/esm/errors.js
var import_dist1000 = __toESM(require_dist(), 1);
var import_dist1001 = __toESM(require_dist2(), 1);
var import_dist1002 = __toESM(require_dist3(), 1);
var ClientNotInitializedError = class _ClientNotInitializedError extends Error {
  constructor() {
    super();
    Object.setPrototypeOf(this, _ClientNotInitializedError.prototype);
  }
};
var QRCodeModalError = class _QRCodeModalError extends Error {
  constructor() {
    super();
    Object.setPrototypeOf(this, _QRCodeModalError.prototype);
  }
};

// node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js
var WalletConnectChainID;
(function(WalletConnectChainID2) {
  WalletConnectChainID2["Mainnet"] = "solana:4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZ";
  WalletConnectChainID2["Devnet"] = "solana:8E9rvCKLFQia2Y35HXjjpWzj8weVo44K";
})(WalletConnectChainID || (WalletConnectChainID = {}));
var WalletConnectRPCMethods;
(function(WalletConnectRPCMethods2) {
  WalletConnectRPCMethods2["signTransaction"] = "solana_signTransaction";
  WalletConnectRPCMethods2["signMessage"] = "solana_signMessage";
})(WalletConnectRPCMethods || (WalletConnectRPCMethods = {}));
var getConnectParams = (chainId) => ({
  requiredNamespaces: {
    solana: {
      chains: [chainId],
      methods: [WalletConnectRPCMethods.signTransaction, WalletConnectRPCMethods.signMessage],
      events: []
    }
  }
});
var isVersionedTransaction = (transaction) => "version" in transaction;
var WalletConnectWallet = class {
  constructor(config) {
    this._options = config.options;
    this._network = config.network;
  }
  async connect() {
    const client = this._client ?? await Ee4.init(this._options);
    const sessions = client.find(getConnectParams(this._network)).filter((s5) => s5.acknowledged);
    if (sessions.length) {
      this._session = sessions[sessions.length - 1];
      this._client = client;
      return {
        publicKey: this.publicKey
      };
    } else {
      const { uri, approval } = await client.connect(getConnectParams(this._network));
      return new Promise((resolve, reject) => {
        if (uri) {
          import_qrcode_modal.default.open(uri, () => {
            reject(new QRCodeModalError());
          });
        }
        approval().then((session) => {
          this._session = session;
          this._client = client;
          resolve({ publicKey: this.publicKey });
        }).catch(reject).finally(() => {
          import_qrcode_modal.default.close();
        });
      });
    }
  }
  async disconnect() {
    if (this._client && this._session) {
      await this._client.disconnect({
        topic: this._session.topic,
        reason: Nt2("USER_DISCONNECTED")
      });
      this._session = void 0;
    } else {
      throw new ClientNotInitializedError();
    }
  }
  get client() {
    if (this._client) {
      return Object.assign({}, this._client, { off: this._client.removeListener });
    } else {
      throw new ClientNotInitializedError();
    }
  }
  get publicKey() {
    if (this._client && this._session) {
      const { address } = Ne2(this._session.namespaces.solana.accounts[0]);
      return new PublicKey(address);
    } else {
      throw new ClientNotInitializedError();
    }
  }
  async signTransaction(transaction) {
    if (this._client && this._session) {
      let rawTransaction;
      let legacyTransaction;
      if (isVersionedTransaction(transaction)) {
        rawTransaction = Buffer.from(transaction.serialize()).toString("base64");
        if (transaction.version === "legacy") {
          legacyTransaction = Transaction.from(transaction.serialize());
        }
      } else {
        rawTransaction = transaction.serialize({
          requireAllSignatures: false,
          verifySignatures: false
        }).toString("base64");
        legacyTransaction = transaction;
      }
      const { signature } = await this._client.request({
        chainId: this._network,
        topic: this._session.topic,
        request: {
          method: WalletConnectRPCMethods.signTransaction,
          params: {
            // Passing ...legacyTransaction is deprecated.
            // All new clients should rely on the `transaction` parameter.
            // The future versions will stop passing ...legacyTransaction.
            ...legacyTransaction,
            // New base64-encoded serialized transaction request parameter
            transaction: rawTransaction
          }
        }
      });
      transaction.addSignature(this.publicKey, Buffer.from(import_bs582.default.decode(signature)));
      return transaction;
    } else {
      throw new ClientNotInitializedError();
    }
  }
  async signMessage(message) {
    if (this._client && this._session) {
      const { signature } = await this._client.request({
        // The network does not change the output of message signing, but this is a required parameter for SignClient
        chainId: this._network,
        topic: this._session.topic,
        request: {
          method: WalletConnectRPCMethods.signMessage,
          params: { pubkey: this.publicKey.toString(), message: import_bs582.default.encode(message) }
        }
      });
      return import_bs582.default.decode(signature);
    } else {
      throw new ClientNotInitializedError();
    }
  }
};
export {
  ClientNotInitializedError,
  QRCodeModalError,
  WalletConnectChainID,
  Ee4 as WalletConnectClient,
  WalletConnectRPCMethods,
  WalletConnectWallet
};
/*! Bundled license information:

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

@walletconnect/relay-auth/dist/index.es.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@walletconnect/utils/dist/index.es.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
//# sourceMappingURL=esm-G7F3BYLR.js.map
