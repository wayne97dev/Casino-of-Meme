import { Blockchain } from '../../backend/BlockchainLink';
import type { CoinInfo, FeeLevel } from '../../types';
export type Blocks = Array<string | undefined>;
export declare const findBlocksForFee: (feePerUnit: string, blocks: Blocks) => number;
export declare class MiscFeeLevels {
    coinInfo: CoinInfo;
    levels: FeeLevel[];
    longTermFeeRate?: string;
    blocks: Blocks;
    constructor(coinInfo: CoinInfo);
    load(blockchain: Blockchain): Promise<{
        maxFeePerGas?: string | undefined;
        maxPriorityFeePerGas?: string | undefined;
        maxWaitTimeEstimate?: number | undefined;
        minWaitTimeEstimate?: number | undefined;
        feeLimit?: string | undefined;
        feePerTx?: string | undefined;
        baseFeePerGas?: string | undefined;
        effectiveGasPrice?: string | undefined;
        label: "normal" | "custom" | "high" | "economy" | "low";
        feePerUnit: string;
        blocks: number;
    }[]>;
    updateCustomFee(feePerUnit: string): void;
}
//# sourceMappingURL=MiscFees.d.ts.map